[
    {
        "id": "8dd6d8d7e61c22c6",
        "type": "tab",
        "label": "G550-1071",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "37d9a9688b6bf679",
        "type": "tab",
        "label": "G550-1072",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cf9ac5b0583eb9e5",
        "type": "tab",
        "label": "G550-1073",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3363a9772183b340",
        "type": "tab",
        "label": "G350A-1003",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c5b85ba02dd341cd",
        "type": "tab",
        "label": "G550A-1003",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0b02582e5b3c638a",
        "type": "tab",
        "label": "G150-10038",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ca5070e74bf8c696",
        "type": "tab",
        "label": "G440-10002",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7eaa0cc387b6af8c",
        "type": "junction",
        "z": "8dd6d8d7e61c22c6",
        "x": 480,
        "y": 1760,
        "wires": [
            [
                "ac9cafa95c812ae8",
                "715421d74cb5c585",
                "7d33c5b586020496",
                "b338740aa2219177",
                "e32a899aea5e8ef6"
            ]
        ]
    },
    {
        "id": "28814e71014e445a",
        "type": "junction",
        "z": "8dd6d8d7e61c22c6",
        "x": 460,
        "y": 920,
        "wires": [
            [
                "0eb7adb82f05dd85",
                "94dbc09781c6146b",
                "dc95d4ec812f6988",
                "03db92af13408d4e",
                "8bf66267f9c79651"
            ]
        ]
    },
    {
        "id": "f5cc71cdfa4ad3c8",
        "type": "junction",
        "z": "8dd6d8d7e61c22c6",
        "x": 880,
        "y": 480,
        "wires": [
            [
                "8d947f67e63e7759"
            ]
        ]
    },
    {
        "id": "641f18e84a562bc1",
        "type": "junction",
        "z": "8dd6d8d7e61c22c6",
        "x": 900,
        "y": 920,
        "wires": [
            [
                "4f35a87b0d73bc4b"
            ]
        ]
    },
    {
        "id": "89aef550e45b807b",
        "type": "junction",
        "z": "8dd6d8d7e61c22c6",
        "x": 840,
        "y": 1760,
        "wires": [
            [
                "6f2554c7bfaa0688"
            ]
        ]
    },
    {
        "id": "a9fdf08c56288939",
        "type": "junction",
        "z": "8dd6d8d7e61c22c6",
        "x": 1460,
        "y": 1480,
        "wires": [
            [
                "efe329b389d61976",
                "8b2d738bb9f4e0e2",
                "b9c3a9334341c98b",
                "0b549c4194684d7c",
                "bef50bb689df0549",
                "bdb33a19cb8e8dca",
                "43343f15196337d5",
                "513d765908cc16bc",
                "eb2260b588eed94e",
                "8f248ccc6bf6426c",
                "1e4b1bf32725391a",
                "394211294b6de3a6",
                "054755c1d63608c4",
                "caf754e39899ee4b",
                "4ccdb08f38451111",
                "d4c5a1c8342ed51a",
                "786d628572acb3b8",
                "096aaddcc4d96c6c",
                "e613c8c2dda2f1be",
                "48bebafe282c56d2",
                "97606ccfc79c6e42",
                "270e71954e729705",
                "373f8724b55abfe9",
                "75755f29e160a419",
                "655bee35eca18a60",
                "a26e1044620c4839",
                "fdd0289226d0c245",
                "8836da34a5aa3211",
                "b6e17f7870214f34",
                "df3a7e2f68ceeb80"
            ]
        ]
    },
    {
        "id": "d17f9eb3a5bf2b84",
        "type": "junction",
        "z": "8dd6d8d7e61c22c6",
        "x": 440,
        "y": 460,
        "wires": [
            [
                "9d2c2351f46fa327",
                "7db86d6302bb68d7",
                "4cd48637f23a93a1",
                "d159bb1362563787",
                "07b444b44d87821d",
                "a363a31252de18c5",
                "6dc5877027a4254d",
                "48e95dde571caff2",
                "07f4f0b8d7e27da7"
            ]
        ]
    },
    {
        "id": "df29b2c2d938d67e",
        "type": "junction",
        "z": "8dd6d8d7e61c22c6",
        "x": 840,
        "y": 1460,
        "wires": [
            [
                "7da8eebd0d23f67c"
            ]
        ]
    },
    {
        "id": "9b8f9e3b062b9cbc",
        "type": "junction",
        "z": "8dd6d8d7e61c22c6",
        "x": 480,
        "y": 2100,
        "wires": [
            [
                "9bb57b8e5301c8ab",
                "26a45f4f8c7c3416",
                "4c4c7a3be9c45c0c",
                "76ab2bade2be0e83"
            ]
        ]
    },
    {
        "id": "e6a9260db2f335fa",
        "type": "junction",
        "z": "8dd6d8d7e61c22c6",
        "x": 820,
        "y": 2100,
        "wires": [
            [
                "b9012b44e5dc566e"
            ]
        ]
    },
    {
        "id": "2f3e5a4555a55c04",
        "type": "junction",
        "z": "8dd6d8d7e61c22c6",
        "x": 480,
        "y": 1460,
        "wires": [
            [
                "97ddc2050abff9d6",
                "e32045b193a8961e",
                "9125e9cfdd4d6371",
                "dab25f1a45844a4c"
            ]
        ]
    },
    {
        "id": "3e0b08fa3c0971e8",
        "type": "junction",
        "z": "8dd6d8d7e61c22c6",
        "x": 480,
        "y": 1220,
        "wires": [
            [
                "333d465596df2d3a",
                "138cc25fa18542c2",
                "e54643e799a7a434"
            ]
        ]
    },
    {
        "id": "5389f164fb6927a3",
        "type": "junction",
        "z": "8dd6d8d7e61c22c6",
        "x": 820,
        "y": 1220,
        "wires": [
            [
                "1a8d3853a178b7a8"
            ]
        ]
    },
    {
        "id": "0604225b30f43529",
        "type": "junction",
        "z": "37d9a9688b6bf679",
        "x": 360,
        "y": 1760,
        "wires": [
            [
                "0e9c4a2ee2428892",
                "48eb25105d95aa0b",
                "1561d10af933363e",
                "29f795aab1b62381",
                "577c9ae309892132"
            ]
        ]
    },
    {
        "id": "344920432cacb9ec",
        "type": "junction",
        "z": "37d9a9688b6bf679",
        "x": 340,
        "y": 920,
        "wires": [
            [
                "b0067e428a1dd8f9",
                "3ed90ae26355c1aa",
                "8e31de0aa8bf1e8f",
                "17e6c7fbd455404b",
                "f977ca4ce4b8c5b1"
            ]
        ]
    },
    {
        "id": "ae62c442cfcce98a",
        "type": "junction",
        "z": "37d9a9688b6bf679",
        "x": 760,
        "y": 480,
        "wires": [
            [
                "c20ff6de430d7140"
            ]
        ]
    },
    {
        "id": "424696edac7213fc",
        "type": "junction",
        "z": "37d9a9688b6bf679",
        "x": 780,
        "y": 920,
        "wires": [
            [
                "142a531871d0efbb"
            ]
        ]
    },
    {
        "id": "4f2854a65acc4749",
        "type": "junction",
        "z": "37d9a9688b6bf679",
        "x": 720,
        "y": 1760,
        "wires": [
            [
                "b8f6ef8e8756c8b8"
            ]
        ]
    },
    {
        "id": "39bbd7d1782adfc0",
        "type": "junction",
        "z": "37d9a9688b6bf679",
        "x": 1340,
        "y": 1480,
        "wires": [
            [
                "eea4bac31071d445",
                "946df84c6009fb08",
                "c8aaaa5724a928c5",
                "77b8e5eb98eb5b2a",
                "05d184c4886c71d3",
                "fab0241bc5f7e69b",
                "418169f40e418478",
                "f63500301846c053",
                "5303d7ae4da4ab88",
                "7ebf50bc4a06f1fc",
                "5e82ec1d44060204",
                "bc7be5ccb9c32e18",
                "9a8bb868013d5996",
                "26218ae6d3240d05",
                "cca50c6b18d87865",
                "eaf2a70a274fdcd5",
                "4d85a1dd7b4df199",
                "d53cd222f6e8234a",
                "dac4fd0c9e74604c",
                "1ed7fa475bf2a47f",
                "5dea271027f25560",
                "78598c746362f41d",
                "dab3317db816e229",
                "fef8104360bd10a3",
                "bbb9710adf872e06",
                "b8c085f95e24b5e9",
                "5ad616420145aac2",
                "16e9cd2723ebc63e",
                "e1462dfefa83b98b",
                "071323487ae24912"
            ]
        ]
    },
    {
        "id": "4eb671f7db82859b",
        "type": "junction",
        "z": "37d9a9688b6bf679",
        "x": 320,
        "y": 460,
        "wires": [
            [
                "4cd7dad008b0be9f",
                "04a85d1e8171e2c7",
                "9b5f19f5487b7ba0",
                "a961a591840eada1",
                "6d245714bd37d35b",
                "d8cc552652bc7206",
                "0efff7811f072095",
                "be79e8dcd0c72781",
                "c1facadf6ecef9b0"
            ]
        ]
    },
    {
        "id": "10c9332967d3a4b8",
        "type": "junction",
        "z": "37d9a9688b6bf679",
        "x": 720,
        "y": 1460,
        "wires": [
            [
                "bbb92586684dd3e8"
            ]
        ]
    },
    {
        "id": "c1e7a2c1b6e5c32d",
        "type": "junction",
        "z": "37d9a9688b6bf679",
        "x": 360,
        "y": 2100,
        "wires": [
            [
                "b841b9cb68a4e63e",
                "47f2b976131f9fc9",
                "01f937398d536878",
                "42e14074b159893c"
            ]
        ]
    },
    {
        "id": "e873a61fada3a7a3",
        "type": "junction",
        "z": "37d9a9688b6bf679",
        "x": 700,
        "y": 2100,
        "wires": [
            [
                "b6e5a0d01a1f3aa5"
            ]
        ]
    },
    {
        "id": "1a3e14a987ccfa1f",
        "type": "junction",
        "z": "37d9a9688b6bf679",
        "x": 360,
        "y": 1460,
        "wires": [
            [
                "80194a6a3e0d0618",
                "9b7c1dc859c58c04",
                "67d8616a95276e01",
                "6ee586cd8a139390"
            ]
        ]
    },
    {
        "id": "4779c5a53dbd0f6f",
        "type": "junction",
        "z": "37d9a9688b6bf679",
        "x": 360,
        "y": 1220,
        "wires": [
            [
                "07684137e371e28e",
                "2ab0c555a2339f9a",
                "b159748f8a6d57e6"
            ]
        ]
    },
    {
        "id": "c8b35469250755ee",
        "type": "junction",
        "z": "37d9a9688b6bf679",
        "x": 700,
        "y": 1220,
        "wires": [
            [
                "808682bbf2fc9862"
            ]
        ]
    },
    {
        "id": "4bf79052e533ad4f",
        "type": "junction",
        "z": "3363a9772183b340",
        "x": 340,
        "y": 1760,
        "wires": [
            [
                "6ff7cdc9e27e78dc",
                "374f0f28b66fb05d",
                "4b89eb05877e9ffc",
                "101d699034e2024c",
                "9169554b4d81fcb4"
            ]
        ]
    },
    {
        "id": "5af8484b7c15fa2e",
        "type": "junction",
        "z": "3363a9772183b340",
        "x": 320,
        "y": 920,
        "wires": [
            [
                "12d04a6db01eac14",
                "7d5d49e1341ac86e",
                "c01987f8674772ec",
                "66a865b2e571a22e",
                "d95ae0dd441485c0"
            ]
        ]
    },
    {
        "id": "9eaa2648cd1edab9",
        "type": "junction",
        "z": "3363a9772183b340",
        "x": 740,
        "y": 480,
        "wires": [
            [
                "090c74ecc2add726"
            ]
        ]
    },
    {
        "id": "fcd5d7a8849e0773",
        "type": "junction",
        "z": "3363a9772183b340",
        "x": 760,
        "y": 920,
        "wires": [
            [
                "bb816a66d5c4f7bd"
            ]
        ]
    },
    {
        "id": "a70ebdcc5ff6a092",
        "type": "junction",
        "z": "3363a9772183b340",
        "x": 700,
        "y": 1760,
        "wires": [
            [
                "f109ef95ca71d9c5"
            ]
        ]
    },
    {
        "id": "d12fac4a80bc87a8",
        "type": "junction",
        "z": "3363a9772183b340",
        "x": 1320,
        "y": 1480,
        "wires": [
            [
                "804a09fe9a7d9412",
                "f0907f0358843efd",
                "3fd1423c0545efe1",
                "0d50e59763e4f945",
                "284ce3ae01a272f9",
                "308b837ce3e1de75",
                "2c0fd4d18e4c2ed2",
                "b340b7044efb788f",
                "b1b636c70479990a",
                "a38da4cdcab87f12",
                "1a10aa2f29d681b9",
                "3c878f31a11323c4",
                "5e4ea54918c6d9dd",
                "5898164fa4f2ec76",
                "90e5bb589e8e49de",
                "16f30cdb76f7b952",
                "d409d002982e0593",
                "f587c5f886c28519",
                "93502126ce28a21f",
                "7f9928e11c2dd7a6",
                "d8376da37bbb1cb9",
                "f214ae74cfd00046",
                "ebfd3f89d2cf95d2",
                "4ffe01d8348005a5",
                "98a222db9c391661",
                "4d5dad2ed93759b0",
                "b3c60b31ab43a2c3",
                "bb99e762129206d1",
                "f72d69d5d2192bbb",
                "176a6eeadbc67a8a"
            ]
        ]
    },
    {
        "id": "e42c468c6654102e",
        "type": "junction",
        "z": "3363a9772183b340",
        "x": 300,
        "y": 460,
        "wires": [
            [
                "77e54e406b02bb06",
                "41e8e0a27eab20aa",
                "1d86edaf4b600417",
                "e5b71fca805dbeec",
                "47f3892a4473bbea",
                "a965615b83bf94fd",
                "42485242768cea49",
                "b6ce97579d09034a",
                "13655fdf503f227c"
            ]
        ]
    },
    {
        "id": "0f5ee8622930c4d5",
        "type": "junction",
        "z": "3363a9772183b340",
        "x": 700,
        "y": 1460,
        "wires": [
            [
                "43696b6d7c442c94"
            ]
        ]
    },
    {
        "id": "0bc7e6a4d910e1b8",
        "type": "junction",
        "z": "3363a9772183b340",
        "x": 340,
        "y": 2100,
        "wires": [
            [
                "00a3a60f963efa21",
                "ed338fbd8f16e7c4",
                "95418f90a60f9517",
                "371de8ebfe3af246"
            ]
        ]
    },
    {
        "id": "6b1467bdf7bda58b",
        "type": "junction",
        "z": "3363a9772183b340",
        "x": 680,
        "y": 2100,
        "wires": [
            [
                "cc4595f1ef89bd5a"
            ]
        ]
    },
    {
        "id": "dc3ac520a633f45a",
        "type": "junction",
        "z": "3363a9772183b340",
        "x": 340,
        "y": 1460,
        "wires": [
            [
                "ce5cfa2d4cfc8140",
                "75b4408a463fd34d",
                "f5d62af2f90808c1",
                "b1d12bb18524dcac"
            ]
        ]
    },
    {
        "id": "7935a39a04c28fbd",
        "type": "junction",
        "z": "3363a9772183b340",
        "x": 340,
        "y": 1220,
        "wires": [
            [
                "0ea6f8ee0490fe60",
                "fee0ba117d2b1024",
                "6999105c09c05b06"
            ]
        ]
    },
    {
        "id": "7d4e550c8701f158",
        "type": "junction",
        "z": "3363a9772183b340",
        "x": 680,
        "y": 1220,
        "wires": [
            [
                "d2c3f2140a3b8173"
            ]
        ]
    },
    {
        "id": "68633662a63adfd3",
        "type": "junction",
        "z": "c5b85ba02dd341cd",
        "x": 340,
        "y": 1760,
        "wires": [
            [
                "b95d6b22c25ecd32",
                "36b18d25046805e1",
                "532efe3711ac5efc",
                "a803711f04733aad",
                "94a31864285b8e38"
            ]
        ]
    },
    {
        "id": "8e3dbdfedfab36eb",
        "type": "junction",
        "z": "c5b85ba02dd341cd",
        "x": 320,
        "y": 920,
        "wires": [
            [
                "e855f205bb2bbc0d",
                "ee88f401a67b798f",
                "4802c58a801cf90b",
                "b8961182927dee9d",
                "2dcd4346b4f5a42c"
            ]
        ]
    },
    {
        "id": "4f7e020792e13b3e",
        "type": "junction",
        "z": "c5b85ba02dd341cd",
        "x": 740,
        "y": 480,
        "wires": [
            [
                "e86d3f97ca800131"
            ]
        ]
    },
    {
        "id": "5a023d7a86dc1031",
        "type": "junction",
        "z": "c5b85ba02dd341cd",
        "x": 760,
        "y": 920,
        "wires": [
            [
                "1beda408df658dbb"
            ]
        ]
    },
    {
        "id": "cb62f142e3c0d3e5",
        "type": "junction",
        "z": "c5b85ba02dd341cd",
        "x": 700,
        "y": 1760,
        "wires": [
            [
                "ea7814b5ae3012c7"
            ]
        ]
    },
    {
        "id": "9bc978410c6cf13e",
        "type": "junction",
        "z": "c5b85ba02dd341cd",
        "x": 1320,
        "y": 1480,
        "wires": [
            [
                "0194f7e548fc93c7",
                "9d54b297d8521c8e",
                "c0bef109eabced02",
                "ec076be56c533411",
                "8939854f7078496d",
                "1eec25912f04af6b",
                "b04d4e4fe52dff32",
                "f2e314421f7a2b02",
                "2896251d510b8653",
                "1b6e90b05354d217",
                "91a6f47df4841d9f",
                "d5ae44a8023bac68",
                "007c8e52f61871dd",
                "f1e3ab963738e6bb",
                "3b07a87d672fd061",
                "ba4ef19406527c74",
                "ced9a47e55d78d4b",
                "6e6dc176c2008c8b",
                "4c9711da450187b7",
                "2508d99b7326e0eb",
                "650b68ecbd2c5da0",
                "e6dc01e5e37c7e4f",
                "085a2e874ceb157c",
                "5f388f8002b65c1e",
                "8d6c3ce3ba7897be",
                "8ab286a631b5fd74",
                "7b791016cd33953a",
                "68805d9cbd25a637",
                "b068c519ffc65ed6",
                "9fb98acd4556057b"
            ]
        ]
    },
    {
        "id": "761704d5217449c5",
        "type": "junction",
        "z": "c5b85ba02dd341cd",
        "x": 300,
        "y": 460,
        "wires": [
            [
                "6312823630754d2d",
                "49626285c44b120c",
                "1b35970d6b3b8866",
                "f2e641938023426e",
                "65f5c643476bfada",
                "d3b030c4b8ec7328",
                "49c943c2bc0ff135",
                "b4af0f7e6e698169",
                "e95c2e46fac789c6"
            ]
        ]
    },
    {
        "id": "85a99f3e09f5f70a",
        "type": "junction",
        "z": "c5b85ba02dd341cd",
        "x": 700,
        "y": 1460,
        "wires": [
            [
                "b0dedce336c63be6"
            ]
        ]
    },
    {
        "id": "ffdecc2606a3731b",
        "type": "junction",
        "z": "c5b85ba02dd341cd",
        "x": 340,
        "y": 2100,
        "wires": [
            [
                "f223aab2d890d42a",
                "32e8c2dac7e01b9f",
                "a188c1b6728a0812",
                "3d67ad87736aa84f"
            ]
        ]
    },
    {
        "id": "083fd56252e77a55",
        "type": "junction",
        "z": "c5b85ba02dd341cd",
        "x": 680,
        "y": 2100,
        "wires": [
            [
                "550aea101899ebd1"
            ]
        ]
    },
    {
        "id": "31c212fc6cc89957",
        "type": "junction",
        "z": "c5b85ba02dd341cd",
        "x": 340,
        "y": 1460,
        "wires": [
            [
                "0a94cc4b1ee3633c",
                "bca791a1611cf1af",
                "7f0deeba989eb54b",
                "ff21be4e367afc83"
            ]
        ]
    },
    {
        "id": "ff1b27a76593e5f6",
        "type": "junction",
        "z": "c5b85ba02dd341cd",
        "x": 340,
        "y": 1220,
        "wires": [
            [
                "de1cf231944a6e86",
                "d7d840570f7e1229",
                "d4ee69a3a1aa547e"
            ]
        ]
    },
    {
        "id": "ba5173406282000a",
        "type": "junction",
        "z": "c5b85ba02dd341cd",
        "x": 680,
        "y": 1220,
        "wires": [
            [
                "ebeffd6b903d1eb8"
            ]
        ]
    },
    {
        "id": "e0285073f7a0fcc9",
        "type": "junction",
        "z": "cf9ac5b0583eb9e5",
        "x": 360,
        "y": 1780,
        "wires": [
            [
                "5e4232b26aa67f68",
                "2bca4b72a385eee7",
                "4d55a090a9de7be0",
                "ec5e999760d2e04a",
                "dae0825a0c57795f"
            ]
        ]
    },
    {
        "id": "e3a2dd17e6fc87ad",
        "type": "junction",
        "z": "cf9ac5b0583eb9e5",
        "x": 340,
        "y": 940,
        "wires": [
            [
                "a6e50a34d378158b",
                "612ef25bcb6c180e",
                "31a3a777b3e99583",
                "4e2d7a3533abe12b",
                "5f6b7cfb5ea49159"
            ]
        ]
    },
    {
        "id": "ce4437db1503788a",
        "type": "junction",
        "z": "cf9ac5b0583eb9e5",
        "x": 760,
        "y": 500,
        "wires": [
            [
                "49e969f9069f26e7"
            ]
        ]
    },
    {
        "id": "35e8d302ac12f437",
        "type": "junction",
        "z": "cf9ac5b0583eb9e5",
        "x": 780,
        "y": 940,
        "wires": [
            [
                "6797b1b4666f2e09"
            ]
        ]
    },
    {
        "id": "5838e8fae2203209",
        "type": "junction",
        "z": "cf9ac5b0583eb9e5",
        "x": 720,
        "y": 1780,
        "wires": [
            [
                "9eae4a9967ef726f"
            ]
        ]
    },
    {
        "id": "0688e709401a4568",
        "type": "junction",
        "z": "cf9ac5b0583eb9e5",
        "x": 1340,
        "y": 1500,
        "wires": [
            [
                "b9fbea0b8cb775b0",
                "6989c543e722dbc3",
                "4980d28edbe31fdb",
                "95666eaa2772d8af",
                "7ad9fbabd6fb480f",
                "491220977aed7bd8",
                "13a6366beac0e07a",
                "38d8ed596f34551d",
                "424c4e050e1ba4c6",
                "9df8bf651fc45f1d",
                "f453ac37b502f491",
                "558e9e058d205436",
                "4bf71a00625b4aa2",
                "4a90239b50dbf117",
                "12cbcfc6da03375f",
                "54629ff05e2d839f",
                "a1a1d6d7ab46bb49",
                "bf88554f94730c11",
                "53f04b78a26db189",
                "3c30861ed2eeb58c",
                "d24b0306b6df08d6",
                "3c8cf15676fbb8fd",
                "cf81795119c83466",
                "01be0718f8f4f734",
                "081fac56abb51177",
                "7ce3ff2ace695813",
                "cf5d85fa30c7da91",
                "bc194fd06dc4e2fe",
                "ea32f7472f010e7f",
                "4bd8740e4c979cbc"
            ]
        ]
    },
    {
        "id": "87d289bf88c191b0",
        "type": "junction",
        "z": "cf9ac5b0583eb9e5",
        "x": 320,
        "y": 480,
        "wires": [
            [
                "584676c6a6a0c2c3",
                "b3a539f058086914",
                "142ebfd34af4a176",
                "65685c5305e38ebc",
                "30ed65e774b25b6f",
                "d6f2670c758ab041",
                "42cfe0e608a3ec76",
                "deb812775c5a1811",
                "b8861a6703c107fa"
            ]
        ]
    },
    {
        "id": "4689964906507e88",
        "type": "junction",
        "z": "cf9ac5b0583eb9e5",
        "x": 720,
        "y": 1480,
        "wires": [
            [
                "b0221ed93916f185"
            ]
        ]
    },
    {
        "id": "2363439625dea4f8",
        "type": "junction",
        "z": "cf9ac5b0583eb9e5",
        "x": 360,
        "y": 2120,
        "wires": [
            [
                "b69733f69dc449ad",
                "4e7f0f5765a3a6de",
                "6788c2b4ed52c2f7",
                "4c00742f380dd7fa"
            ]
        ]
    },
    {
        "id": "6f0de0058babd662",
        "type": "junction",
        "z": "cf9ac5b0583eb9e5",
        "x": 700,
        "y": 2120,
        "wires": [
            [
                "72a1c40c5480372d"
            ]
        ]
    },
    {
        "id": "46ee0e1f09d30120",
        "type": "junction",
        "z": "cf9ac5b0583eb9e5",
        "x": 360,
        "y": 1480,
        "wires": [
            [
                "b5a06a49170579a3",
                "edf86820d4761d58",
                "438c818509ad9a8c",
                "de93633417faaa50"
            ]
        ]
    },
    {
        "id": "9a0e04af6a57a597",
        "type": "junction",
        "z": "cf9ac5b0583eb9e5",
        "x": 360,
        "y": 1240,
        "wires": [
            [
                "ce5f4e08de407dbb",
                "d5626036be59554d",
                "8ca3c778b51494d4"
            ]
        ]
    },
    {
        "id": "caa2c8c01fcfdb9c",
        "type": "junction",
        "z": "cf9ac5b0583eb9e5",
        "x": 700,
        "y": 1240,
        "wires": [
            [
                "bbfe80aa48fdcdd5"
            ]
        ]
    },
    {
        "id": "566470daf9b5eaff",
        "type": "junction",
        "z": "0b02582e5b3c638a",
        "x": 340,
        "y": 1740,
        "wires": [
            [
                "650e6d14a87344af",
                "b64540d7a9c12f3b",
                "4c394d91b745c30a",
                "d9f6643ba6a1c38a",
                "60381e5507ca2673"
            ]
        ]
    },
    {
        "id": "81425f16930ee860",
        "type": "junction",
        "z": "0b02582e5b3c638a",
        "x": 320,
        "y": 900,
        "wires": [
            [
                "a9c15348f258b9ff",
                "66f6d26a688021c9",
                "4bb8c9364c5bec18",
                "b6644de8de69beb6",
                "43278a42f74f4961"
            ]
        ]
    },
    {
        "id": "cfda5e2fc7ab6cd2",
        "type": "junction",
        "z": "0b02582e5b3c638a",
        "x": 740,
        "y": 460,
        "wires": [
            [
                "95031c4547c66fe6"
            ]
        ]
    },
    {
        "id": "32eb3a8d83e2d3f3",
        "type": "junction",
        "z": "0b02582e5b3c638a",
        "x": 760,
        "y": 900,
        "wires": [
            [
                "1365ed9dcf670a45"
            ]
        ]
    },
    {
        "id": "1f3ad6eb8edca5bc",
        "type": "junction",
        "z": "0b02582e5b3c638a",
        "x": 700,
        "y": 1740,
        "wires": [
            [
                "a6aa8225f9e156f7"
            ]
        ]
    },
    {
        "id": "2d893d1c954aeee4",
        "type": "junction",
        "z": "0b02582e5b3c638a",
        "x": 1320,
        "y": 1460,
        "wires": [
            [
                "f8c853e0dab6dc84",
                "c87132e7510ea377",
                "b767369cf77c6180",
                "519c4076571059fb",
                "9fec68820eab586c",
                "64a0aa4eaabf1385",
                "35b5254208d42d06",
                "b5a14855948ad826",
                "4d49166eed3e3b01",
                "3784deaedb6dc871",
                "ad45489448f1e8c6",
                "63f83b6b8e09c057",
                "38fd229272f7a2ac",
                "ac6a6a193274c6d1",
                "80d61e76932f2b94",
                "92276c9609e4cb7a",
                "27df21e2e0e13f55",
                "e2efaf040fa1f8bf",
                "379dd2e3f4d755bf",
                "58e9441e95b1b3ea",
                "264ccb9fa130683b",
                "81f9f155dbd71ac6",
                "147b6ce05a7e68c2",
                "f1b028b9e055551a",
                "e4bf37eb0c3aeb45",
                "44285fc2e67bd716",
                "c5b8b497699a6c36",
                "d20270dfb4bcea61",
                "d6e65e9e6b6d8337",
                "1a48c1738d376a06"
            ]
        ]
    },
    {
        "id": "f4a0864d05ea28a7",
        "type": "junction",
        "z": "0b02582e5b3c638a",
        "x": 300,
        "y": 440,
        "wires": [
            [
                "8c636e477e6547ca",
                "2a0e70a6097f1489",
                "b2a8fa43df7bc87d",
                "86431beaebe8566a",
                "54fc70a582739fe4",
                "8c585f2b2fd6e52b",
                "94e6c58d8e206ee6",
                "417819d9f5417acb",
                "9efca17efa5e3953"
            ]
        ]
    },
    {
        "id": "9647be569ae7fc78",
        "type": "junction",
        "z": "0b02582e5b3c638a",
        "x": 700,
        "y": 1440,
        "wires": [
            [
                "2964fbcd40c186bd"
            ]
        ]
    },
    {
        "id": "f2251c97a285f8f3",
        "type": "junction",
        "z": "0b02582e5b3c638a",
        "x": 340,
        "y": 2080,
        "wires": [
            [
                "874bae81338c9f94",
                "77f3856126c239d3",
                "4f7a59ac0b5559c1",
                "bab0a410e385796f"
            ]
        ]
    },
    {
        "id": "21a65eb3b7faf747",
        "type": "junction",
        "z": "0b02582e5b3c638a",
        "x": 680,
        "y": 2080,
        "wires": [
            [
                "0547232afc22d12b"
            ]
        ]
    },
    {
        "id": "308523e8dea4b30f",
        "type": "junction",
        "z": "0b02582e5b3c638a",
        "x": 340,
        "y": 1440,
        "wires": [
            [
                "a821eb42e8f4fa02",
                "a5e02f3959417644",
                "80565cd6df759808",
                "fe9c83507f3ade7f"
            ]
        ]
    },
    {
        "id": "4f1ebe63de6b031a",
        "type": "junction",
        "z": "0b02582e5b3c638a",
        "x": 340,
        "y": 1200,
        "wires": [
            [
                "2f03a6b4ba1880bd",
                "649d6cdf9385b977",
                "ea13baeede7ae538"
            ]
        ]
    },
    {
        "id": "0a6badfe2cafccde",
        "type": "junction",
        "z": "0b02582e5b3c638a",
        "x": 680,
        "y": 1200,
        "wires": [
            [
                "9e953d86c298edf3"
            ]
        ]
    },
    {
        "id": "5f646595b9251265",
        "type": "junction",
        "z": "ca5070e74bf8c696",
        "x": 320,
        "y": 1760,
        "wires": [
            [
                "f0e25216847d8d79",
                "0bbcd842da07e822",
                "240c0e7ca70f9fd0",
                "d2be50195f5734f4",
                "19559d1c5e982327"
            ]
        ]
    },
    {
        "id": "6af2939f9241b8c9",
        "type": "junction",
        "z": "ca5070e74bf8c696",
        "x": 300,
        "y": 920,
        "wires": [
            [
                "3b676d038ad091a0",
                "3ea5d35c46148e52",
                "827ecb93a964a284",
                "24e66f9282df5c2a",
                "d3d69b6be2dfd291"
            ]
        ]
    },
    {
        "id": "753d7298ae1010d3",
        "type": "junction",
        "z": "ca5070e74bf8c696",
        "x": 720,
        "y": 480,
        "wires": [
            [
                "f18671db7127d83f"
            ]
        ]
    },
    {
        "id": "3bac680394e6d74a",
        "type": "junction",
        "z": "ca5070e74bf8c696",
        "x": 740,
        "y": 920,
        "wires": [
            [
                "d12412212dc72e4e"
            ]
        ]
    },
    {
        "id": "3bb4305024b14f94",
        "type": "junction",
        "z": "ca5070e74bf8c696",
        "x": 680,
        "y": 1760,
        "wires": [
            [
                "f1c97aa2f42aee8d"
            ]
        ]
    },
    {
        "id": "b6832d5a098c8f55",
        "type": "junction",
        "z": "ca5070e74bf8c696",
        "x": 1300,
        "y": 1480,
        "wires": [
            [
                "2130686f440a53a2",
                "b838502363f67733",
                "d820510383e02a50",
                "d80974aa1474d8d4",
                "101b0af3c4bdf1fa",
                "7413c5fb522a7a28",
                "1b6a31827fb731f5",
                "16d497420df99c12",
                "1114a57cc407eba6",
                "398208315cf12e40",
                "5c96eb0d935a4f0f",
                "34171bf5be5eb960",
                "0f3505e1bb207ff8",
                "a6c2e873b0e124b1",
                "5c816ceaa45bf03c",
                "818a72833187941b",
                "b1873f70718ad3a4",
                "3c11fa9b772d2031",
                "27b286c3086f6a81",
                "884f3cc7b9a7ac4e",
                "884d2daa6f1aafcb",
                "65421198637e364e",
                "2b5d7c9f166b058e",
                "a5ba97df8855b8b2",
                "966a9c7fcf9b17bc",
                "e035c9417cb37010",
                "e554c374f8526b5e",
                "622d259a8081f0a7",
                "89c4d74b8e0d5f78",
                "2d21c580a241be25"
            ]
        ]
    },
    {
        "id": "a3d6070976ae73fa",
        "type": "junction",
        "z": "ca5070e74bf8c696",
        "x": 280,
        "y": 460,
        "wires": [
            [
                "67bf17c93ca7f9fd",
                "b7f032f88eba4b9b",
                "67f28a2fd4bdfe5f",
                "49449f5d63b9e741",
                "b43ebff3e1bd6e7f",
                "9d0c1df525636c5f",
                "ac9cbb9458dcdf85",
                "ea42d65166c30b28",
                "3065ce48485f6112"
            ]
        ]
    },
    {
        "id": "b87dc05d0db0cb7b",
        "type": "junction",
        "z": "ca5070e74bf8c696",
        "x": 680,
        "y": 1460,
        "wires": [
            [
                "404dd1b4e8c458c6"
            ]
        ]
    },
    {
        "id": "21c1bceaf058e217",
        "type": "junction",
        "z": "ca5070e74bf8c696",
        "x": 320,
        "y": 2100,
        "wires": [
            [
                "8a48e9aee56c215b",
                "db9569bee1ea2568",
                "a3e56abff4b90605",
                "73481dfbd6eff4a1"
            ]
        ]
    },
    {
        "id": "1010f7b4dd5689ff",
        "type": "junction",
        "z": "ca5070e74bf8c696",
        "x": 660,
        "y": 2100,
        "wires": [
            [
                "cd691280f963153f"
            ]
        ]
    },
    {
        "id": "0414ecab4becb41c",
        "type": "junction",
        "z": "ca5070e74bf8c696",
        "x": 320,
        "y": 1460,
        "wires": [
            [
                "26bebf1b990f6339",
                "ec63c655a3c6a45b",
                "6289c0004746953d",
                "9122e8051c6d8081"
            ]
        ]
    },
    {
        "id": "4f81f26a60c62d4a",
        "type": "junction",
        "z": "ca5070e74bf8c696",
        "x": 320,
        "y": 1220,
        "wires": [
            [
                "bee6d56438aee9a6",
                "66e1d186eedf38b6",
                "e59a750730a460f4"
            ]
        ]
    },
    {
        "id": "4e9a4af3b3b3fbc0",
        "type": "junction",
        "z": "ca5070e74bf8c696",
        "x": 660,
        "y": 1220,
        "wires": [
            [
                "663901008b0c34d0"
            ]
        ]
    },
    {
        "id": "c74988a5b35111de",
        "type": "ui_tab",
        "name": "G550-1072",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7c64611b82dcfc1c",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "UA4MT Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "false",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "427eeab5fba65c6f",
        "type": "ui_group",
        "name": "Standard",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a6a34ba6ca332671",
        "type": "ui_group",
        "name": "Overview",
        "tab": "c74988a5b35111de",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8877d822aa2e595b",
        "type": "ui_group",
        "name": "Identification",
        "tab": "c74988a5b35111de",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3bd75b18d307399a",
        "type": "ui_group",
        "name": "Tools",
        "tab": "c74988a5b35111de",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "61b97080b62c4fa3",
        "type": "ui_group",
        "name": "Active Program",
        "tab": "c74988a5b35111de",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fbda589d8f7eefe3",
        "type": "ui_group",
        "name": "Monitoring",
        "tab": "c74988a5b35111de",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "572107fee6a48677",
        "type": "ui_group",
        "name": "Channel",
        "tab": "c74988a5b35111de",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d7a7ae32c149df03",
        "type": "ui_tab",
        "name": "G550-1073",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5e0b29f2eb6ae19a",
        "type": "ui_group",
        "name": "Identification",
        "tab": "d7a7ae32c149df03",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9d647bfda66d994a",
        "type": "ui_group",
        "name": "Overview",
        "tab": "e24de8239a87ecb3",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cf517f0b78b2e0b8",
        "type": "ui_group",
        "name": "Spindle",
        "tab": "c74988a5b35111de",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "614a691393231483",
        "type": "ui_tab",
        "name": "G350A-1003",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2d35dfb81b8d5d00",
        "type": "ui_group",
        "name": "Overview",
        "tab": "614a691393231483",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "75fc0d5e73af76ff",
        "type": "ui_group",
        "name": "Identification",
        "tab": "614a691393231483",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c2118b0d52ad3aad",
        "type": "ui_group",
        "name": "Active Program",
        "tab": "614a691393231483",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8981672dabdeb771",
        "type": "ui_group",
        "name": "Channel",
        "tab": "614a691393231483",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3c76d2446187a599",
        "type": "ui_group",
        "name": "Monitoring",
        "tab": "614a691393231483",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2c5d590d7ec2fb87",
        "type": "ui_group",
        "name": "Tools",
        "tab": "614a691393231483",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3bf05d50da88504b",
        "type": "ui_group",
        "name": "Spindle",
        "tab": "614a691393231483",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e24de8239a87ecb3",
        "type": "ui_tab",
        "name": "G550A-1003",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9ffe9b2dd3eba1b3",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.144.107:4840/",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "01a19ec9834a0548",
        "type": "ui_tab",
        "name": "G550-1071",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b9d2c06ef754f41c",
        "type": "ui_group",
        "name": "Overview",
        "tab": "01a19ec9834a0548",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6a69a1503313a326",
        "type": "ui_group",
        "name": "Identification",
        "tab": "01a19ec9834a0548",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5884d395d6f89ebf",
        "type": "ui_group",
        "name": "Active Program",
        "tab": "01a19ec9834a0548",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ec5a4fd395e2a0e8",
        "type": "ui_group",
        "name": "Channel",
        "tab": "01a19ec9834a0548",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8aa3a4525e326d43",
        "type": "ui_group",
        "name": "Spindle",
        "tab": "01a19ec9834a0548",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d0e348851329bc5a",
        "type": "ui_group",
        "name": "Monitoring",
        "tab": "01a19ec9834a0548",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "49a30f94a9b395a2",
        "type": "ui_group",
        "name": "Tools",
        "tab": "01a19ec9834a0548",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "75822fd371bbac59",
        "type": "ui_group",
        "name": "Identification",
        "tab": "e24de8239a87ecb3",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8cdc6a4e1802ec70",
        "type": "ui_group",
        "name": "Channel",
        "tab": "e24de8239a87ecb3",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e50fbb89b3424578",
        "type": "ui_group",
        "name": "Monitoring",
        "tab": "e24de8239a87ecb3",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e41a326e41f5f302",
        "type": "ui_group",
        "name": "Tools",
        "tab": "e24de8239a87ecb3",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5ae1f98556b963cd",
        "type": "ui_group",
        "name": "Active Program",
        "tab": "e24de8239a87ecb3",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c81e83f19613752f",
        "type": "ui_group",
        "name": "Spindle",
        "tab": "e24de8239a87ecb3",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c2335b5a41cbb877",
        "type": "ui_group",
        "name": "Overview",
        "tab": "d7a7ae32c149df03",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "21a50a03a9edb990",
        "type": "ui_group",
        "name": "Active Program",
        "tab": "d7a7ae32c149df03",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c86d2d63c265b5ab",
        "type": "ui_group",
        "name": "Channel",
        "tab": "d7a7ae32c149df03",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bd18789bcb7056c0",
        "type": "ui_group",
        "name": "Monitoring",
        "tab": "d7a7ae32c149df03",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "14a2c8fb34b0d83c",
        "type": "ui_group",
        "name": "Spindle",
        "tab": "d7a7ae32c149df03",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8419921454ee4d95",
        "type": "ui_group",
        "name": "Tools",
        "tab": "d7a7ae32c149df03",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e54c1fc46eb194a1",
        "type": "ui_tab",
        "name": "G150-10038",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "de06d8f69e3e4b46",
        "type": "ui_tab",
        "name": "G440-10002",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "73f60dac49812159",
        "type": "ui_group",
        "name": "Overview",
        "tab": "e54c1fc46eb194a1",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a7780d24b9a208ea",
        "type": "ui_group",
        "name": "Identification",
        "tab": "e54c1fc46eb194a1",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1a7dbd60894aadfb",
        "type": "ui_group",
        "name": "Channel",
        "tab": "e54c1fc46eb194a1",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "adc746dccfe6154d",
        "type": "ui_group",
        "name": "Monitoring",
        "tab": "e54c1fc46eb194a1",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6b129930ed7932fc",
        "type": "ui_group",
        "name": "Tools",
        "tab": "e54c1fc46eb194a1",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3f3ed654d045cc2d",
        "type": "ui_group",
        "name": "Active Program",
        "tab": "e54c1fc46eb194a1",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "60c18c303810d0bd",
        "type": "ui_group",
        "name": "Spindle",
        "tab": "e54c1fc46eb194a1",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fdfab30feea82e24",
        "type": "ui_group",
        "name": "Overview",
        "tab": "de06d8f69e3e4b46",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f41d0189b65bc96b",
        "type": "ui_group",
        "name": "Channel",
        "tab": "de06d8f69e3e4b46",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f2de600d54b0d4c9",
        "type": "ui_group",
        "name": "Monitoring",
        "tab": "de06d8f69e3e4b46",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c89cac8f94258f0c",
        "type": "ui_group",
        "name": "Tools",
        "tab": "de06d8f69e3e4b46",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c6eb19d0acf1530f",
        "type": "ui_group",
        "name": "Active Program",
        "tab": "de06d8f69e3e4b46",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "093fadcf0a12a96f",
        "type": "ui_group",
        "name": "Spindle",
        "tab": "de06d8f69e3e4b46",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1d6b14d2ffc6e4b9",
        "type": "ui_group",
        "name": "Identification",
        "tab": "de06d8f69e3e4b46",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a6a56fd836f2a59d",
        "type": "inject",
        "z": "8dd6d8d7e61c22c6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "4",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 390,
        "y": 80,
        "wires": [
            [
                "189cb761bc9711ae"
            ]
        ]
    },
    {
        "id": "587a76c6fb6d26d1",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "6a69a1503313a326",
        "order": 7,
        "width": "6",
        "height": "2",
        "name": "Location",
        "label": "Location",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1840,
        "y": 280,
        "wires": []
    },
    {
        "id": "6cb94e31a2d7ea12",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "6a69a1503313a326",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Manufacturer",
        "label": "Manufacturer",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1850,
        "y": 220,
        "wires": []
    },
    {
        "id": "03595c1d71486cb7",
        "type": "ui_template",
        "z": "8dd6d8d7e61c22c6",
        "group": "b9d2c06ef754f41c",
        "name": "MachinePicture",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div height=\"180\" style=\"height: 180px;\">\n    <img src=\"https://dashboard.umati.app/userImages/15b92131800174fd0d47ab06e532a36ff2ba2773d729ab5f6fbfc954cfab87a8.jpg\" width=\"300\"><br/>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 380,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "56ce03da853bd1be",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "b9d2c06ef754f41c",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "ProductInstanceUri",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1870,
        "y": 340,
        "wires": []
    },
    {
        "id": "dae63f1b27511df6",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "b9d2c06ef754f41c",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status Overview",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1220,
        "y": 80,
        "wires": []
    },
    {
        "id": "41547a32c582e40d",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "6a69a1503313a326",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Serial Number",
        "label": "Serial Number",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1860,
        "y": 400,
        "wires": []
    },
    {
        "id": "91c8b1377590b1f6",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "6a69a1503313a326",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Software Version",
        "label": "Software Version",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1870,
        "y": 460,
        "wires": []
    },
    {
        "id": "a41c8078a7b62ee4",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "6a69a1503313a326",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "Build Year",
        "label": "Build Year",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1840,
        "y": 520,
        "wires": []
    },
    {
        "id": "3a9b12d95091c803",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "6a69a1503313a326",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "Device Class",
        "label": "Device Class",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1850,
        "y": 580,
        "wires": []
    },
    {
        "id": "d54f1aba3eaf6ca1",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "6a69a1503313a326",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "Product Code",
        "label": "Product Code",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1860,
        "y": 640,
        "wires": []
    },
    {
        "id": "01c1fd6bc19b89cc",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "b9d2c06ef754f41c",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Model",
        "label": "",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1830,
        "y": 700,
        "wires": []
    },
    {
        "id": "55e9669cd44c8781",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "49a30f94a9b395a2",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Control Identifier Interpretaton",
        "label": "Control Identifier Interpretaton",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1970,
        "y": 780,
        "wires": []
    },
    {
        "id": "e6531f7604d42f4c",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "49a30f94a9b395a2",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Identifier",
        "label": "Identifier",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1840,
        "y": 840,
        "wires": []
    },
    {
        "id": "d749d1ea6a2c38b3",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "49a30f94a9b395a2",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Control Identifier",
        "label": "Control Identifier",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1860,
        "y": 900,
        "wires": []
    },
    {
        "id": "4385215f2843e4a1",
        "type": "ui_switch",
        "z": "8dd6d8d7e61c22c6",
        "name": "Available",
        "label": "Available",
        "tooltip": "",
        "group": "49a30f94a9b395a2",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2000,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "38874fb16e85b381",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "49a30f94a9b395a2",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Place Number",
        "label": "Place Number",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1860,
        "y": 1020,
        "wires": []
    },
    {
        "id": "375c5992ee9d56dc",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "5884d395d6f89ebf",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Name",
        "label": "Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1830,
        "y": 1140,
        "wires": []
    },
    {
        "id": "64eede763c3afb76",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "5884d395d6f89ebf",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "StateId",
        "label": "StateId",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1840,
        "y": 1200,
        "wires": []
    },
    {
        "id": "b86b0abb335aa072",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "5884d395d6f89ebf",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Status",
        "label": "Status",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1830,
        "y": 1260,
        "wires": []
    },
    {
        "id": "e6f477f1a7e2e91c",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "d0e348851329bc5a",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Operation Mode",
        "label": "Operation Mode",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1860,
        "y": 1380,
        "wires": []
    },
    {
        "id": "9878a6d735d1093e",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "d0e348851329bc5a",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Power On Duration",
        "label": "Power On Duration",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1870,
        "y": 1440,
        "wires": []
    },
    {
        "id": "093de027b2fbe393",
        "type": "ui_switch",
        "z": "8dd6d8d7e61c22c6",
        "name": "Warumup",
        "label": "Warumup",
        "tooltip": "",
        "group": "d0e348851329bc5a",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1840,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "665c9fd43ce2daa8",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "ec5a4fd395e2a0e8",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Channel Name",
        "label": "Channel Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1860,
        "y": 1700,
        "wires": []
    },
    {
        "id": "9bf4730e3554b7ef",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "ec5a4fd395e2a0e8",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Channel Mode",
        "label": "Channel Mode",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1860,
        "y": 1760,
        "wires": []
    },
    {
        "id": "3bd54651e18922b6",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "ec5a4fd395e2a0e8",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Channel State",
        "label": "Channel State",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1860,
        "y": 1820,
        "wires": []
    },
    {
        "id": "a36efa1d3008dabf",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "SetNodeIds",
        "func": "flow.set('NameSpace',18);\nflow.set('NcProg_State_Number',6009);\n\n// Identification\nflow.set('Manufacturer',6027);\nflow.set('Location',6034);\nflow.set('ProductInstanceUri',6026);\nflow.set('SerialNumber',6028);\nflow.set('YearOfConstruction',6061);\nflow.set('DeviceClass',6031);\nflow.set('ProductCode',6038);\nflow.set('Model',6036);\nflow.set('SoftwareRevision',6060);\n\n// Tools\nflow.set('ControlIdentifierInterpretation',6019);\nflow.set('ControllIdentifier1',6018);\nflow.set('Identifier',6046);\nflow.set('Locked',6020);\nflow.set('PlaceNumber',6048);\n\n// Active Program\nflow.set('Name',6005);\nflow.set('Id',6009);\nflow.set('CurrentState',6007);\n\n// Monitoring \nflow.set('OperationMode',6004);\nflow.set('PowerOnDuration',6095);\nflow.set('IsWarmUp',6099);\nflow.set('FeedOverride',6096);\n\n// Channel \nflow.set('ChannelName',6055);\nflow.set('ChannelMode',6050);\nflow.set('ChannelState',6051);\nflow.set('ChannelFeedOverride',6052);\nflow.set('ChannelRapidOverride',6056);\n\n// Spindle \nflow.set('SpindleName',6041);\nflow.set('IsUsedAsAxis',6042);\nflow.set('IsRotating',6040);\nflow.set('SpindleOverride',6043);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "9d2c2351f46fa327",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "Manufacturer",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nmsg.options = \"options\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 240,
        "wires": [
            [
                "f5cc71cdfa4ad3c8"
            ]
        ]
    },
    {
        "id": "11332b61ba6f8c4b",
        "type": "inject",
        "z": "8dd6d8d7e61c22c6",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 460,
        "wires": [
            [
                "d17f9eb3a5bf2b84"
            ]
        ]
    },
    {
        "id": "3a5a24734f5b67ca",
        "type": "inject",
        "z": "8dd6d8d7e61c22c6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 610,
        "y": 140,
        "wires": [
            [
                "a36efa1d3008dabf"
            ]
        ]
    },
    {
        "id": "7db86d6302bb68d7",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "Location",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 300,
        "wires": [
            [
                "f5cc71cdfa4ad3c8"
            ]
        ]
    },
    {
        "id": "4cd48637f23a93a1",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ProductInstanceUri",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 360,
        "wires": [
            [
                "f5cc71cdfa4ad3c8"
            ]
        ]
    },
    {
        "id": "189cb761bc9711ae",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "NcProg_State_Number",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.topic = \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 80,
        "wires": [
            [
                "f3bdf8da7969081f"
            ]
        ]
    },
    {
        "id": "d159bb1362563787",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "SerialNumber",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 420,
        "wires": [
            [
                "f5cc71cdfa4ad3c8"
            ]
        ]
    },
    {
        "id": "07b444b44d87821d",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "SoftwareRevision",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 480,
        "wires": [
            [
                "f5cc71cdfa4ad3c8"
            ]
        ]
    },
    {
        "id": "a363a31252de18c5",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "YearOfConstruction",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 540,
        "wires": [
            [
                "f5cc71cdfa4ad3c8"
            ]
        ]
    },
    {
        "id": "6dc5877027a4254d",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "DeviceClass",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 600,
        "wires": [
            [
                "f5cc71cdfa4ad3c8"
            ]
        ]
    },
    {
        "id": "48e95dde571caff2",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ProductCode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 660,
        "wires": [
            [
                "f5cc71cdfa4ad3c8"
            ]
        ]
    },
    {
        "id": "07f4f0b8d7e27da7",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "Model",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 720,
        "wires": [
            [
                "f5cc71cdfa4ad3c8"
            ]
        ]
    },
    {
        "id": "b6a4162263400670",
        "type": "comment",
        "z": "8dd6d8d7e61c22c6",
        "name": "IDENTIFICATION",
        "info": "",
        "x": 340,
        "y": 240,
        "wires": []
    },
    {
        "id": "91fe364e736c93b4",
        "type": "comment",
        "z": "8dd6d8d7e61c22c6",
        "name": "TOOLS",
        "info": "",
        "x": 310,
        "y": 800,
        "wires": []
    },
    {
        "id": "03db92af13408d4e",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ControlIdentifierInterpretation",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 800,
        "wires": [
            [
                "641f18e84a562bc1"
            ]
        ]
    },
    {
        "id": "dc95d4ec812f6988",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "Identifier",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 860,
        "wires": [
            [
                "641f18e84a562bc1"
            ]
        ]
    },
    {
        "id": "8bf66267f9c79651",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ControllIdentifier1",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 920,
        "wires": [
            [
                "641f18e84a562bc1"
            ]
        ]
    },
    {
        "id": "94dbc09781c6146b",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "Locked",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 980,
        "wires": [
            [
                "641f18e84a562bc1"
            ]
        ]
    },
    {
        "id": "0eb7adb82f05dd85",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "PlaceNumber",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1040,
        "wires": [
            [
                "641f18e84a562bc1"
            ]
        ]
    },
    {
        "id": "21f3febdd0c88fd2",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "",
        "func": "if(!msg.payload) {\n    msg.payload = true\n}\nelse {\n    msg.payload = false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 960,
        "wires": [
            [
                "4385215f2843e4a1"
            ]
        ]
    },
    {
        "id": "333d465596df2d3a",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "Name",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1160,
        "wires": [
            [
                "5389f164fb6927a3"
            ]
        ]
    },
    {
        "id": "138cc25fa18542c2",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "Id",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1220,
        "wires": [
            [
                "5389f164fb6927a3"
            ]
        ]
    },
    {
        "id": "e54643e799a7a434",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "CurrentState",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1280,
        "wires": [
            [
                "5389f164fb6927a3"
            ]
        ]
    },
    {
        "id": "3d59c08876781cc0",
        "type": "comment",
        "z": "8dd6d8d7e61c22c6",
        "name": "ACTIVE PROGRAM",
        "info": "",
        "x": 350,
        "y": 1140,
        "wires": []
    },
    {
        "id": "97ddc2050abff9d6",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "OperationMode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1380,
        "wires": [
            [
                "df29b2c2d938d67e"
            ]
        ]
    },
    {
        "id": "e32045b193a8961e",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "PowerOnDuration",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1440,
        "wires": [
            [
                "df29b2c2d938d67e"
            ]
        ]
    },
    {
        "id": "9125e9cfdd4d6371",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "IsWarmUp",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1500,
        "wires": [
            [
                "df29b2c2d938d67e"
            ]
        ]
    },
    {
        "id": "edcf28f7c29302d5",
        "type": "comment",
        "z": "8dd6d8d7e61c22c6",
        "name": "MONITORING",
        "info": "",
        "x": 340,
        "y": 1380,
        "wires": []
    },
    {
        "id": "dab25f1a45844a4c",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "FeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1560,
        "wires": [
            [
                "df29b2c2d938d67e"
            ]
        ]
    },
    {
        "id": "b3fca08a9ea3ae06",
        "type": "ui_gauge",
        "z": "8dd6d8d7e61c22c6",
        "name": "",
        "group": "d0e348851329bc5a",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Feed Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1860,
        "y": 1560,
        "wires": []
    },
    {
        "id": "ac9cafa95c812ae8",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ChannelName",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1700,
        "wires": [
            [
                "89aef550e45b807b"
            ]
        ]
    },
    {
        "id": "e32a899aea5e8ef6",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ChannelMode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1760,
        "wires": [
            [
                "89aef550e45b807b"
            ]
        ]
    },
    {
        "id": "715421d74cb5c585",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ChannelState",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1820,
        "wires": [
            [
                "89aef550e45b807b"
            ]
        ]
    },
    {
        "id": "0e6b146c7354dc08",
        "type": "comment",
        "z": "8dd6d8d7e61c22c6",
        "name": "CHANNEL ",
        "info": "",
        "x": 320,
        "y": 1700,
        "wires": []
    },
    {
        "id": "b338740aa2219177",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ChannelFeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1880,
        "wires": [
            [
                "89aef550e45b807b"
            ]
        ]
    },
    {
        "id": "222f02105d4926ce",
        "type": "ui_gauge",
        "z": "8dd6d8d7e61c22c6",
        "name": "",
        "group": "ec5a4fd395e2a0e8",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Feed Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1860,
        "y": 1880,
        "wires": []
    },
    {
        "id": "7d33c5b586020496",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ChannelRapidOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1940,
        "wires": [
            [
                "89aef550e45b807b"
            ]
        ]
    },
    {
        "id": "ad704a7e2d5b62e5",
        "type": "ui_gauge",
        "z": "8dd6d8d7e61c22c6",
        "name": "",
        "group": "ec5a4fd395e2a0e8",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Rapid Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1860,
        "y": 1940,
        "wires": []
    },
    {
        "id": "9bb57b8e5301c8ab",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "SpindleName",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 2040,
        "wires": [
            [
                "e6a9260db2f335fa"
            ]
        ]
    },
    {
        "id": "26a45f4f8c7c3416",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "IsUsedAsAxis",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 2100,
        "wires": [
            [
                "e6a9260db2f335fa"
            ]
        ]
    },
    {
        "id": "03babacc659c7104",
        "type": "comment",
        "z": "8dd6d8d7e61c22c6",
        "name": "SPINDLE",
        "info": "",
        "x": 320,
        "y": 2040,
        "wires": []
    },
    {
        "id": "4c4c7a3be9c45c0c",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "IsRotating",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 2160,
        "wires": [
            [
                "e6a9260db2f335fa"
            ]
        ]
    },
    {
        "id": "76ab2bade2be0e83",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "SpindleOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 2220,
        "wires": [
            [
                "e6a9260db2f335fa"
            ]
        ]
    },
    {
        "id": "2fb8c354707d4140",
        "type": "ui_gauge",
        "z": "8dd6d8d7e61c22c6",
        "name": "",
        "group": "8aa3a4525e326d43",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "SpindleOverride",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1860,
        "y": 2220,
        "wires": []
    },
    {
        "id": "032fc00ce66afaec",
        "type": "ui_switch",
        "z": "8dd6d8d7e61c22c6",
        "name": "IsUsedAsAxis",
        "label": "IsUsedAsAxis",
        "tooltip": "",
        "group": "8aa3a4525e326d43",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1860,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "f1ba66a1f8845b25",
        "type": "ui_switch",
        "z": "8dd6d8d7e61c22c6",
        "name": "IsRotating",
        "label": "IsRotating",
        "tooltip": "",
        "group": "8aa3a4525e326d43",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1840,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "480cb325391122f2",
        "type": "ui_statetrail",
        "z": "8dd6d8d7e61c22c6",
        "group": "b9d2c06ef754f41c",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "state trail label",
        "states": [
            {
                "state": 1,
                "col": "#009933",
                "t": "num",
                "label": ""
            },
            {
                "state": 2,
                "col": "#17a2b8",
                "t": "num",
                "label": ""
            }
        ],
        "periodLimit": "1",
        "periodLimitUnit": "3600",
        "timeformat": "HH:mm",
        "tickmarks": "4",
        "persist": false,
        "legend": 1,
        "combine": true,
        "blanklabel": "",
        "x": 1040,
        "y": 80,
        "wires": [
            [
                "dae63f1b27511df6"
            ]
        ]
    },
    {
        "id": "786d628572acb3b8",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "Manufacturer",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 220,
        "wires": [
            [
                "6cb94e31a2d7ea12"
            ]
        ]
    },
    {
        "id": "d4c5a1c8342ed51a",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "Location",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 280,
        "wires": [
            [
                "587a76c6fb6d26d1"
            ]
        ]
    },
    {
        "id": "efe329b389d61976",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ProductInstanceUri",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 340,
        "wires": [
            [
                "56ce03da853bd1be"
            ]
        ]
    },
    {
        "id": "8b2d738bb9f4e0e2",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "SerialNumber",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 400,
        "wires": [
            [
                "41547a32c582e40d"
            ]
        ]
    },
    {
        "id": "b9c3a9334341c98b",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "SoftwareRevision",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 460,
        "wires": [
            [
                "91c8b1377590b1f6"
            ]
        ]
    },
    {
        "id": "0b549c4194684d7c",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "YearOfConstruction",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 520,
        "wires": [
            [
                "a41c8078a7b62ee4"
            ]
        ]
    },
    {
        "id": "bef50bb689df0549",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "DeviceClass",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 580,
        "wires": [
            [
                "3a9b12d95091c803"
            ]
        ]
    },
    {
        "id": "bdb33a19cb8e8dca",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ProductCode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 640,
        "wires": [
            [
                "d54f1aba3eaf6ca1"
            ]
        ]
    },
    {
        "id": "43343f15196337d5",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "Model",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 700,
        "wires": [
            [
                "01c1fd6bc19b89cc"
            ]
        ]
    },
    {
        "id": "513d765908cc16bc",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ControlIdentifierInterpretation",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 780,
        "wires": [
            [
                "55e9669cd44c8781"
            ]
        ]
    },
    {
        "id": "eb2260b588eed94e",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "Identifier",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 840,
        "wires": [
            [
                "e6531f7604d42f4c"
            ]
        ]
    },
    {
        "id": "8f248ccc6bf6426c",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ControllIdentifier1",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 900,
        "wires": [
            [
                "d749d1ea6a2c38b3"
            ]
        ]
    },
    {
        "id": "1e4b1bf32725391a",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "Locked",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 960,
        "wires": [
            [
                "21f3febdd0c88fd2"
            ]
        ]
    },
    {
        "id": "394211294b6de3a6",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "PlaceNumber",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1020,
        "wires": [
            [
                "38874fb16e85b381"
            ]
        ]
    },
    {
        "id": "054755c1d63608c4",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "Name",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1140,
        "wires": [
            [
                "375c5992ee9d56dc"
            ]
        ]
    },
    {
        "id": "caf754e39899ee4b",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "Id",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1200,
        "wires": [
            [
                "64eede763c3afb76"
            ]
        ]
    },
    {
        "id": "4ccdb08f38451111",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "CurrentState",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1260,
        "wires": [
            [
                "b86b0abb335aa072"
            ]
        ]
    },
    {
        "id": "096aaddcc4d96c6c",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "OperationMode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1380,
        "wires": [
            [
                "e6f477f1a7e2e91c"
            ]
        ]
    },
    {
        "id": "e613c8c2dda2f1be",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "PowerOnDuration",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 1440,
        "wires": [
            [
                "9878a6d735d1093e"
            ]
        ]
    },
    {
        "id": "48bebafe282c56d2",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "IsWarmUp",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1500,
        "wires": [
            [
                "093de027b2fbe393"
            ]
        ]
    },
    {
        "id": "97606ccfc79c6e42",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "FeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1560,
        "wires": [
            [
                "b3fca08a9ea3ae06"
            ]
        ]
    },
    {
        "id": "270e71954e729705",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ChannelName",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1700,
        "wires": [
            [
                "665c9fd43ce2daa8"
            ]
        ]
    },
    {
        "id": "373f8724b55abfe9",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ChannelMode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1760,
        "wires": [
            [
                "9bf4730e3554b7ef"
            ]
        ]
    },
    {
        "id": "75755f29e160a419",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ChannelState",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1820,
        "wires": [
            [
                "3bd54651e18922b6"
            ]
        ]
    },
    {
        "id": "655bee35eca18a60",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ChannelFeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1880,
        "wires": [
            [
                "222f02105d4926ce"
            ]
        ]
    },
    {
        "id": "a26e1044620c4839",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "ChannelRapidOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1940,
        "wires": [
            [
                "ad704a7e2d5b62e5"
            ]
        ]
    },
    {
        "id": "8836da34a5aa3211",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "IsUsedAsAxis",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2100,
        "wires": [
            [
                "032fc00ce66afaec"
            ]
        ]
    },
    {
        "id": "b6e17f7870214f34",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "IsRotating",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 2160,
        "wires": [
            [
                "f1ba66a1f8845b25"
            ]
        ]
    },
    {
        "id": "df3a7e2f68ceeb80",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "SpindleOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2220,
        "wires": [
            [
                "2fb8c354707d4140"
            ]
        ]
    },
    {
        "id": "9e4756939da10bb3",
        "type": "inject",
        "z": "8dd6d8d7e61c22c6",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 920,
        "wires": [
            [
                "28814e71014e445a"
            ]
        ]
    },
    {
        "id": "a6988cdc361af672",
        "type": "inject",
        "z": "8dd6d8d7e61c22c6",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.7",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 1220,
        "wires": [
            [
                "3e0b08fa3c0971e8"
            ]
        ]
    },
    {
        "id": "7a8cf6e27a3e6ae1",
        "type": "inject",
        "z": "8dd6d8d7e61c22c6",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 1460,
        "wires": [
            [
                "2f3e5a4555a55c04"
            ]
        ]
    },
    {
        "id": "abe94e3648f84b4b",
        "type": "inject",
        "z": "8dd6d8d7e61c22c6",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.3",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 1760,
        "wires": [
            [
                "7eaa0cc387b6af8c"
            ]
        ]
    },
    {
        "id": "111c75f5d58a9c8f",
        "type": "inject",
        "z": "8dd6d8d7e61c22c6",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.6",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 2100,
        "wires": [
            [
                "9b8f9e3b062b9cbc"
            ]
        ]
    },
    {
        "id": "f3bdf8da7969081f",
        "type": "OpcUa-Client",
        "z": "8dd6d8d7e61c22c6",
        "endpoint": "9ffe9b2dd3eba1b3",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 860,
        "y": 80,
        "wires": [
            [
                "480cb325391122f2"
            ]
        ]
    },
    {
        "id": "00548d69a60f604e",
        "type": "OpcUa-Client",
        "z": "8dd6d8d7e61c22c6",
        "endpoint": "9ffe9b2dd3eba1b3",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "4",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 1280,
        "y": 1480,
        "wires": [
            [
                "a9fdf08c56288939"
            ]
        ]
    },
    {
        "id": "8d947f67e63e7759",
        "type": "join",
        "z": "8dd6d8d7e61c22c6",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "9",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 990,
        "y": 480,
        "wires": [
            [
                "00548d69a60f604e"
            ]
        ]
    },
    {
        "id": "4f35a87b0d73bc4b",
        "type": "join",
        "z": "8dd6d8d7e61c22c6",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 990,
        "y": 920,
        "wires": [
            [
                "00548d69a60f604e"
            ]
        ]
    },
    {
        "id": "1a8d3853a178b7a8",
        "type": "join",
        "z": "8dd6d8d7e61c22c6",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 990,
        "y": 1220,
        "wires": [
            [
                "00548d69a60f604e"
            ]
        ]
    },
    {
        "id": "7da8eebd0d23f67c",
        "type": "join",
        "z": "8dd6d8d7e61c22c6",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 990,
        "y": 1460,
        "wires": [
            [
                "00548d69a60f604e"
            ]
        ]
    },
    {
        "id": "6f2554c7bfaa0688",
        "type": "join",
        "z": "8dd6d8d7e61c22c6",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 990,
        "y": 1760,
        "wires": [
            [
                "00548d69a60f604e"
            ]
        ]
    },
    {
        "id": "b9012b44e5dc566e",
        "type": "join",
        "z": "8dd6d8d7e61c22c6",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 990,
        "y": 2100,
        "wires": [
            [
                "00548d69a60f604e"
            ]
        ]
    },
    {
        "id": "bb5b10af81563f0a",
        "type": "ui_text",
        "z": "8dd6d8d7e61c22c6",
        "group": "8aa3a4525e326d43",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "SpindleName",
        "label": "Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1860,
        "y": 2020,
        "wires": []
    },
    {
        "id": "fdd0289226d0c245",
        "type": "function",
        "z": "8dd6d8d7e61c22c6",
        "name": "SpindleName",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2020,
        "wires": [
            [
                "bb5b10af81563f0a"
            ]
        ]
    },
    {
        "id": "638f2ea84cb7ab86",
        "type": "inject",
        "z": "37d9a9688b6bf679",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "4",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 80,
        "wires": [
            [
                "9265eacbdb081595"
            ]
        ]
    },
    {
        "id": "f1c3830fad251baf",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "8877d822aa2e595b",
        "order": 7,
        "width": "6",
        "height": "2",
        "name": "Location",
        "label": "Location",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 280,
        "wires": []
    },
    {
        "id": "84f667493cccb061",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "8877d822aa2e595b",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Manufacturer",
        "label": "Manufacturer",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1730,
        "y": 220,
        "wires": []
    },
    {
        "id": "6646f3b14d95685d",
        "type": "ui_template",
        "z": "37d9a9688b6bf679",
        "group": "a6a34ba6ca332671",
        "name": "MachinePicture",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div height=\"180\" style=\"height: 180px;\">\n    <img src=\"https://dashboard.umati.app/userImages/15b92131800174fd0d47ab06e532a36ff2ba2773d729ab5f6fbfc954cfab87a8.jpg\" width=\"300\"><br/>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 260,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "0561ee48986c7b42",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "a6a34ba6ca332671",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "ProductInstanceUri",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1750,
        "y": 340,
        "wires": []
    },
    {
        "id": "14da42c267df1cb0",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "a6a34ba6ca332671",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status Overview",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1100,
        "y": 80,
        "wires": []
    },
    {
        "id": "1e9e34903de136b8",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "8877d822aa2e595b",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Serial Number",
        "label": "Serial Number",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 400,
        "wires": []
    },
    {
        "id": "1a1e444532da6146",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "8877d822aa2e595b",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Software Version",
        "label": "Software Version",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1750,
        "y": 460,
        "wires": []
    },
    {
        "id": "5468dc64eff716e7",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "8877d822aa2e595b",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "Build Year",
        "label": "Build Year",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 520,
        "wires": []
    },
    {
        "id": "fb7670ec00c5c1ea",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "8877d822aa2e595b",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "Device Class",
        "label": "Device Class",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1730,
        "y": 580,
        "wires": []
    },
    {
        "id": "7f12266e47997cb0",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "8877d822aa2e595b",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "Product Code",
        "label": "Product Code",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 640,
        "wires": []
    },
    {
        "id": "a1956f9ccbc34be3",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "a6a34ba6ca332671",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Model",
        "label": "",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1710,
        "y": 700,
        "wires": []
    },
    {
        "id": "b11f2c5745726366",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "3bd75b18d307399a",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "Control Identifier Interpretaton",
        "label": "Control Identifier Interpretaton",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1850,
        "y": 780,
        "wires": []
    },
    {
        "id": "ca2cb5d0fe24d05a",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "3bd75b18d307399a",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Identifier",
        "label": "Identifier",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 840,
        "wires": []
    },
    {
        "id": "12ae27050da5aa1a",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "3bd75b18d307399a",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Control Identifier",
        "label": "Control Identifier",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 900,
        "wires": []
    },
    {
        "id": "c775b67fbb0881ee",
        "type": "ui_switch",
        "z": "37d9a9688b6bf679",
        "name": "Available",
        "label": "Available",
        "tooltip": "",
        "group": "3bd75b18d307399a",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1880,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "f16aba5939ae2b5d",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "3bd75b18d307399a",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Place Number",
        "label": "Place Number",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 1020,
        "wires": []
    },
    {
        "id": "730c95eb10520532",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "61b97080b62c4fa3",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Name",
        "label": "Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1710,
        "y": 1140,
        "wires": []
    },
    {
        "id": "38e58caff46d6924",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "61b97080b62c4fa3",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "StateId",
        "label": "StateId",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 1200,
        "wires": []
    },
    {
        "id": "624946af29e1ca6a",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "61b97080b62c4fa3",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Status",
        "label": "Status",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1710,
        "y": 1260,
        "wires": []
    },
    {
        "id": "da325128051e0dde",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "fbda589d8f7eefe3",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Operation Mode",
        "label": "Operation Mode",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 1380,
        "wires": []
    },
    {
        "id": "4ca33fb49e70a544",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "fbda589d8f7eefe3",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Power On Duration",
        "label": "Power On Duration",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1750,
        "y": 1440,
        "wires": []
    },
    {
        "id": "03dc90492d7295b8",
        "type": "ui_switch",
        "z": "37d9a9688b6bf679",
        "name": "Warumup",
        "label": "Warumup",
        "tooltip": "",
        "group": "fbda589d8f7eefe3",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1720,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "27e0c246fbcb82e7",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "572107fee6a48677",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Channel Name",
        "label": "Channel Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 1700,
        "wires": []
    },
    {
        "id": "041e39753c6c3ef7",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "572107fee6a48677",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Channel Mode",
        "label": "Channel Mode",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 1760,
        "wires": []
    },
    {
        "id": "cb6d03a25819ccf5",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "572107fee6a48677",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Channel State",
        "label": "Channel State",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 1820,
        "wires": []
    },
    {
        "id": "224c565a81a3cb17",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "SetNodeIds",
        "func": "flow.set('NameSpace',20);\nflow.set('NcProg_State_Number',6009);\n\n// Identification\nflow.set('Manufacturer',6027);\nflow.set('Location',6034);\nflow.set('ProductInstanceUri',6026);\nflow.set('SerialNumber',6028);\nflow.set('YearOfConstruction',6061);\nflow.set('DeviceClass',6031);\nflow.set('ProductCode',6038);\nflow.set('Model',6036);\nflow.set('SoftwareRevision',6060);\n\n// Tools\nflow.set('ControlIdentifierInterpretation',6019);\nflow.set('ControllIdentifier1',6018);\nflow.set('Identifier',6046);\nflow.set('Locked',6020);\nflow.set('PlaceNumber',6048);\n\n// Active Program\nflow.set('Name',6005);\nflow.set('Id',6009);\nflow.set('CurrentState',6007);\n\n// Monitoring \nflow.set('OperationMode',6004);\nflow.set('PowerOnDuration',6095);\nflow.set('IsWarmUp',6099);\nflow.set('FeedOverride',6096);\n\n// Channel \nflow.set('ChannelName',6055);\nflow.set('ChannelMode',6050);\nflow.set('ChannelState',6051);\nflow.set('ChannelFeedOverride',6052);\nflow.set('ChannelRapidOverride',6056);\n\n// Spindle \nflow.set('SpindleName',6041);\nflow.set('IsUsedAsAxis',6042);\nflow.set('IsRotating',6040);\nflow.set('SpindleOverride',6043);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "4cd7dad008b0be9f",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "Manufacturer",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nmsg.options = \"options\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 240,
        "wires": [
            [
                "ae62c442cfcce98a"
            ]
        ]
    },
    {
        "id": "c19520b0a0892ae6",
        "type": "inject",
        "z": "37d9a9688b6bf679",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 460,
        "wires": [
            [
                "4eb671f7db82859b"
            ]
        ]
    },
    {
        "id": "ab974c0fc99fc817",
        "type": "inject",
        "z": "37d9a9688b6bf679",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 140,
        "wires": [
            [
                "224c565a81a3cb17"
            ]
        ]
    },
    {
        "id": "04a85d1e8171e2c7",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "Location",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 300,
        "wires": [
            [
                "ae62c442cfcce98a"
            ]
        ]
    },
    {
        "id": "9b5f19f5487b7ba0",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ProductInstanceUri",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 360,
        "wires": [
            [
                "ae62c442cfcce98a"
            ]
        ]
    },
    {
        "id": "9265eacbdb081595",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "NcProg_State_Number",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.topic = \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 80,
        "wires": [
            [
                "2542c3d5e16d69ee"
            ]
        ]
    },
    {
        "id": "a961a591840eada1",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "SerialNumber",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 420,
        "wires": [
            [
                "ae62c442cfcce98a"
            ]
        ]
    },
    {
        "id": "6d245714bd37d35b",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "SoftwareRevision",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 480,
        "wires": [
            [
                "ae62c442cfcce98a"
            ]
        ]
    },
    {
        "id": "d8cc552652bc7206",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "YearOfConstruction",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 540,
        "wires": [
            [
                "ae62c442cfcce98a"
            ]
        ]
    },
    {
        "id": "0efff7811f072095",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "DeviceClass",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 600,
        "wires": [
            [
                "ae62c442cfcce98a"
            ]
        ]
    },
    {
        "id": "be79e8dcd0c72781",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ProductCode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 660,
        "wires": [
            [
                "ae62c442cfcce98a"
            ]
        ]
    },
    {
        "id": "c1facadf6ecef9b0",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "Model",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 720,
        "wires": [
            [
                "ae62c442cfcce98a"
            ]
        ]
    },
    {
        "id": "4e862049b1414a96",
        "type": "comment",
        "z": "37d9a9688b6bf679",
        "name": "IDENTIFICATION",
        "info": "",
        "x": 220,
        "y": 240,
        "wires": []
    },
    {
        "id": "b79a6569d5d361ca",
        "type": "comment",
        "z": "37d9a9688b6bf679",
        "name": "TOOLS",
        "info": "",
        "x": 190,
        "y": 800,
        "wires": []
    },
    {
        "id": "17e6c7fbd455404b",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ControlIdentifierInterpretation",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 800,
        "wires": [
            [
                "424696edac7213fc"
            ]
        ]
    },
    {
        "id": "8e31de0aa8bf1e8f",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "Identifier",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 860,
        "wires": [
            [
                "424696edac7213fc"
            ]
        ]
    },
    {
        "id": "f977ca4ce4b8c5b1",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ControllIdentifier1",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 920,
        "wires": [
            [
                "424696edac7213fc"
            ]
        ]
    },
    {
        "id": "3ed90ae26355c1aa",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "Locked",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 980,
        "wires": [
            [
                "424696edac7213fc"
            ]
        ]
    },
    {
        "id": "b0067e428a1dd8f9",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "PlaceNumber",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1040,
        "wires": [
            [
                "424696edac7213fc"
            ]
        ]
    },
    {
        "id": "cbbd2e82027f7ed3",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "",
        "func": "if(!msg.payload) {\n    msg.payload = true\n}\nelse {\n    msg.payload = false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 960,
        "wires": [
            [
                "c775b67fbb0881ee"
            ]
        ]
    },
    {
        "id": "07684137e371e28e",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "Name",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1160,
        "wires": [
            [
                "c8b35469250755ee"
            ]
        ]
    },
    {
        "id": "2ab0c555a2339f9a",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "Id",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1220,
        "wires": [
            [
                "c8b35469250755ee"
            ]
        ]
    },
    {
        "id": "b159748f8a6d57e6",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "CurrentState",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1280,
        "wires": [
            [
                "c8b35469250755ee"
            ]
        ]
    },
    {
        "id": "c24c644529a758cb",
        "type": "comment",
        "z": "37d9a9688b6bf679",
        "name": "ACTIVE PROGRAM",
        "info": "",
        "x": 230,
        "y": 1140,
        "wires": []
    },
    {
        "id": "80194a6a3e0d0618",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "OperationMode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1380,
        "wires": [
            [
                "10c9332967d3a4b8"
            ]
        ]
    },
    {
        "id": "9b7c1dc859c58c04",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "PowerOnDuration",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1440,
        "wires": [
            [
                "10c9332967d3a4b8"
            ]
        ]
    },
    {
        "id": "67d8616a95276e01",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "IsWarmUp",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1500,
        "wires": [
            [
                "10c9332967d3a4b8"
            ]
        ]
    },
    {
        "id": "4b36a44d17c9dd02",
        "type": "comment",
        "z": "37d9a9688b6bf679",
        "name": "MONITORING",
        "info": "",
        "x": 220,
        "y": 1380,
        "wires": []
    },
    {
        "id": "6ee586cd8a139390",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "FeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1560,
        "wires": [
            [
                "10c9332967d3a4b8"
            ]
        ]
    },
    {
        "id": "516352c9575f9984",
        "type": "ui_gauge",
        "z": "37d9a9688b6bf679",
        "name": "",
        "group": "fbda589d8f7eefe3",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Feed Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1740,
        "y": 1560,
        "wires": []
    },
    {
        "id": "0e9c4a2ee2428892",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ChannelName",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1700,
        "wires": [
            [
                "4f2854a65acc4749"
            ]
        ]
    },
    {
        "id": "577c9ae309892132",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ChannelMode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1760,
        "wires": [
            [
                "4f2854a65acc4749"
            ]
        ]
    },
    {
        "id": "48eb25105d95aa0b",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ChannelState",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1820,
        "wires": [
            [
                "4f2854a65acc4749"
            ]
        ]
    },
    {
        "id": "ef6d2964b0c356f5",
        "type": "comment",
        "z": "37d9a9688b6bf679",
        "name": "CHANNEL ",
        "info": "",
        "x": 200,
        "y": 1700,
        "wires": []
    },
    {
        "id": "29f795aab1b62381",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ChannelFeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1880,
        "wires": [
            [
                "4f2854a65acc4749"
            ]
        ]
    },
    {
        "id": "5d5cf8861838640b",
        "type": "ui_gauge",
        "z": "37d9a9688b6bf679",
        "name": "",
        "group": "572107fee6a48677",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Feed Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1740,
        "y": 1880,
        "wires": []
    },
    {
        "id": "1561d10af933363e",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ChannelRapidOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1940,
        "wires": [
            [
                "4f2854a65acc4749"
            ]
        ]
    },
    {
        "id": "c7661a0e64914110",
        "type": "ui_gauge",
        "z": "37d9a9688b6bf679",
        "name": "",
        "group": "572107fee6a48677",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Rapid Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1740,
        "y": 1940,
        "wires": []
    },
    {
        "id": "b841b9cb68a4e63e",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "SpindleName",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2040,
        "wires": [
            [
                "e873a61fada3a7a3"
            ]
        ]
    },
    {
        "id": "47f2b976131f9fc9",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "IsUsedAsAxis",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2100,
        "wires": [
            [
                "e873a61fada3a7a3"
            ]
        ]
    },
    {
        "id": "4b9be4e4f6045ef1",
        "type": "comment",
        "z": "37d9a9688b6bf679",
        "name": "SPINDLE",
        "info": "",
        "x": 200,
        "y": 2040,
        "wires": []
    },
    {
        "id": "01f937398d536878",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "IsRotating",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2160,
        "wires": [
            [
                "e873a61fada3a7a3"
            ]
        ]
    },
    {
        "id": "42e14074b159893c",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "SpindleOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2220,
        "wires": [
            [
                "e873a61fada3a7a3"
            ]
        ]
    },
    {
        "id": "f53ea6ec539e921e",
        "type": "ui_gauge",
        "z": "37d9a9688b6bf679",
        "name": "",
        "group": "cf517f0b78b2e0b8",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "SpindleOverride",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1740,
        "y": 2220,
        "wires": []
    },
    {
        "id": "10b3376b4c934d68",
        "type": "ui_switch",
        "z": "37d9a9688b6bf679",
        "name": "IsUsedAsAxis",
        "label": "IsUsedAsAxis",
        "tooltip": "",
        "group": "cf517f0b78b2e0b8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1740,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "120809bd05a50f8b",
        "type": "ui_switch",
        "z": "37d9a9688b6bf679",
        "name": "IsRotating",
        "label": "IsRotating",
        "tooltip": "",
        "group": "cf517f0b78b2e0b8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1720,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "e5fc66853b121ffa",
        "type": "ui_statetrail",
        "z": "37d9a9688b6bf679",
        "group": "a6a34ba6ca332671",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "state trail label",
        "states": [
            {
                "state": 1,
                "col": "#009933",
                "t": "num",
                "label": ""
            },
            {
                "state": 2,
                "col": "#17a2b8",
                "t": "num",
                "label": ""
            }
        ],
        "periodLimit": "1",
        "periodLimitUnit": "3600",
        "timeformat": "HH:mm",
        "tickmarks": "4",
        "persist": false,
        "legend": 1,
        "combine": true,
        "blanklabel": "",
        "x": 920,
        "y": 80,
        "wires": [
            [
                "14da42c267df1cb0"
            ]
        ]
    },
    {
        "id": "4d85a1dd7b4df199",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "Manufacturer",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 220,
        "wires": [
            [
                "84f667493cccb061"
            ]
        ]
    },
    {
        "id": "eaf2a70a274fdcd5",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "Location",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 280,
        "wires": [
            [
                "f1c3830fad251baf"
            ]
        ]
    },
    {
        "id": "eea4bac31071d445",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ProductInstanceUri",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 340,
        "wires": [
            [
                "0561ee48986c7b42"
            ]
        ]
    },
    {
        "id": "946df84c6009fb08",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "SerialNumber",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 400,
        "wires": [
            [
                "1e9e34903de136b8"
            ]
        ]
    },
    {
        "id": "c8aaaa5724a928c5",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "SoftwareRevision",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 460,
        "wires": [
            [
                "1a1e444532da6146"
            ]
        ]
    },
    {
        "id": "77b8e5eb98eb5b2a",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "YearOfConstruction",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 520,
        "wires": [
            [
                "5468dc64eff716e7"
            ]
        ]
    },
    {
        "id": "05d184c4886c71d3",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "DeviceClass",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 580,
        "wires": [
            [
                "fb7670ec00c5c1ea"
            ]
        ]
    },
    {
        "id": "fab0241bc5f7e69b",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ProductCode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 640,
        "wires": [
            [
                "7f12266e47997cb0"
            ]
        ]
    },
    {
        "id": "418169f40e418478",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "Model",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 700,
        "wires": [
            [
                "a1956f9ccbc34be3"
            ]
        ]
    },
    {
        "id": "f63500301846c053",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ControlIdentifierInterpretation",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 780,
        "wires": [
            [
                "b11f2c5745726366"
            ]
        ]
    },
    {
        "id": "5303d7ae4da4ab88",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "Identifier",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 840,
        "wires": [
            [
                "ca2cb5d0fe24d05a"
            ]
        ]
    },
    {
        "id": "7ebf50bc4a06f1fc",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ControllIdentifier1",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 900,
        "wires": [
            [
                "12ae27050da5aa1a"
            ]
        ]
    },
    {
        "id": "5e82ec1d44060204",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "Locked",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 960,
        "wires": [
            [
                "cbbd2e82027f7ed3"
            ]
        ]
    },
    {
        "id": "bc7be5ccb9c32e18",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "PlaceNumber",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1020,
        "wires": [
            [
                "f16aba5939ae2b5d"
            ]
        ]
    },
    {
        "id": "9a8bb868013d5996",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "Name",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1140,
        "wires": [
            [
                "730c95eb10520532"
            ]
        ]
    },
    {
        "id": "26218ae6d3240d05",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "Id",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1200,
        "wires": [
            [
                "38e58caff46d6924"
            ]
        ]
    },
    {
        "id": "cca50c6b18d87865",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "CurrentState",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1260,
        "wires": [
            [
                "624946af29e1ca6a"
            ]
        ]
    },
    {
        "id": "d53cd222f6e8234a",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "OperationMode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1380,
        "wires": [
            [
                "da325128051e0dde"
            ]
        ]
    },
    {
        "id": "dac4fd0c9e74604c",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "PowerOnDuration",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1440,
        "wires": [
            [
                "4ca33fb49e70a544"
            ]
        ]
    },
    {
        "id": "1ed7fa475bf2a47f",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "IsWarmUp",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1500,
        "wires": [
            [
                "03dc90492d7295b8"
            ]
        ]
    },
    {
        "id": "5dea271027f25560",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "FeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1560,
        "wires": [
            [
                "516352c9575f9984"
            ]
        ]
    },
    {
        "id": "78598c746362f41d",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ChannelName",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1700,
        "wires": [
            [
                "27e0c246fbcb82e7"
            ]
        ]
    },
    {
        "id": "dab3317db816e229",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ChannelMode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1760,
        "wires": [
            [
                "041e39753c6c3ef7"
            ]
        ]
    },
    {
        "id": "fef8104360bd10a3",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ChannelState",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1820,
        "wires": [
            [
                "cb6d03a25819ccf5"
            ]
        ]
    },
    {
        "id": "bbb9710adf872e06",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ChannelFeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 1880,
        "wires": [
            [
                "5d5cf8861838640b"
            ]
        ]
    },
    {
        "id": "b8c085f95e24b5e9",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "ChannelRapidOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 1940,
        "wires": [
            [
                "c7661a0e64914110"
            ]
        ]
    },
    {
        "id": "16e9cd2723ebc63e",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "IsUsedAsAxis",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 2100,
        "wires": [
            [
                "10b3376b4c934d68"
            ]
        ]
    },
    {
        "id": "e1462dfefa83b98b",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "IsRotating",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 2160,
        "wires": [
            [
                "120809bd05a50f8b"
            ]
        ]
    },
    {
        "id": "071323487ae24912",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "SpindleOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 2220,
        "wires": [
            [
                "f53ea6ec539e921e"
            ]
        ]
    },
    {
        "id": "4c5b0ea72324f409",
        "type": "inject",
        "z": "37d9a9688b6bf679",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 920,
        "wires": [
            [
                "344920432cacb9ec"
            ]
        ]
    },
    {
        "id": "33d115ad0bdb7dae",
        "type": "inject",
        "z": "37d9a9688b6bf679",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.7",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1220,
        "wires": [
            [
                "4779c5a53dbd0f6f"
            ]
        ]
    },
    {
        "id": "1c36565bed167203",
        "type": "inject",
        "z": "37d9a9688b6bf679",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1460,
        "wires": [
            [
                "1a3e14a987ccfa1f"
            ]
        ]
    },
    {
        "id": "b7be9d69a354caf3",
        "type": "inject",
        "z": "37d9a9688b6bf679",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.3",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1760,
        "wires": [
            [
                "0604225b30f43529"
            ]
        ]
    },
    {
        "id": "89d6fa5fa4ebb5ff",
        "type": "inject",
        "z": "37d9a9688b6bf679",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.6",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 2100,
        "wires": [
            [
                "c1e7a2c1b6e5c32d"
            ]
        ]
    },
    {
        "id": "2542c3d5e16d69ee",
        "type": "OpcUa-Client",
        "z": "37d9a9688b6bf679",
        "endpoint": "9ffe9b2dd3eba1b3",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 740,
        "y": 80,
        "wires": [
            [
                "e5fc66853b121ffa"
            ]
        ]
    },
    {
        "id": "1c2c32e0c3b20e15",
        "type": "OpcUa-Client",
        "z": "37d9a9688b6bf679",
        "endpoint": "9ffe9b2dd3eba1b3",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "4",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 1160,
        "y": 1480,
        "wires": [
            [
                "39bbd7d1782adfc0"
            ]
        ]
    },
    {
        "id": "c20ff6de430d7140",
        "type": "join",
        "z": "37d9a9688b6bf679",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "9",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 480,
        "wires": [
            [
                "1c2c32e0c3b20e15"
            ]
        ]
    },
    {
        "id": "142a531871d0efbb",
        "type": "join",
        "z": "37d9a9688b6bf679",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 920,
        "wires": [
            [
                "1c2c32e0c3b20e15"
            ]
        ]
    },
    {
        "id": "808682bbf2fc9862",
        "type": "join",
        "z": "37d9a9688b6bf679",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 1220,
        "wires": [
            [
                "1c2c32e0c3b20e15"
            ]
        ]
    },
    {
        "id": "bbb92586684dd3e8",
        "type": "join",
        "z": "37d9a9688b6bf679",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 1460,
        "wires": [
            [
                "1c2c32e0c3b20e15"
            ]
        ]
    },
    {
        "id": "b8f6ef8e8756c8b8",
        "type": "join",
        "z": "37d9a9688b6bf679",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 1760,
        "wires": [
            [
                "1c2c32e0c3b20e15"
            ]
        ]
    },
    {
        "id": "b6e5a0d01a1f3aa5",
        "type": "join",
        "z": "37d9a9688b6bf679",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 2100,
        "wires": [
            [
                "1c2c32e0c3b20e15"
            ]
        ]
    },
    {
        "id": "01d4c335cb57cebc",
        "type": "ui_text",
        "z": "37d9a9688b6bf679",
        "group": "cf517f0b78b2e0b8",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "SpindleName",
        "label": "Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 2020,
        "wires": []
    },
    {
        "id": "5ad616420145aac2",
        "type": "function",
        "z": "37d9a9688b6bf679",
        "name": "SpindleName",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 2020,
        "wires": [
            [
                "01d4c335cb57cebc"
            ]
        ]
    },
    {
        "id": "5a11c50a0b00de85",
        "type": "inject",
        "z": "cf9ac5b0583eb9e5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "4",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 100,
        "wires": [
            [
                "8f7925f066ebc221"
            ]
        ]
    },
    {
        "id": "335fe4784d448344",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "5e0b29f2eb6ae19a",
        "order": 7,
        "width": "6",
        "height": "2",
        "name": "Location",
        "label": "Location",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 300,
        "wires": []
    },
    {
        "id": "c15ed9c6d3b33ab0",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "5e0b29f2eb6ae19a",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Manufacturer",
        "label": "Manufacturer",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1730,
        "y": 240,
        "wires": []
    },
    {
        "id": "6eb253403080461d",
        "type": "ui_template",
        "z": "cf9ac5b0583eb9e5",
        "group": "c2335b5a41cbb877",
        "name": "MachinePicture",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div height=\"180\" style=\"height: 180px;\">\n    <img src=\"https://dashboard.umati.app/userImages/15b92131800174fd0d47ab06e532a36ff2ba2773d729ab5f6fbfc954cfab87a8.jpg\" width=\"300\"><br/>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 260,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "8ad9b2f477c2b74e",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "c2335b5a41cbb877",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "ProductInstanceUri",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1750,
        "y": 360,
        "wires": []
    },
    {
        "id": "8df596a51c5f788d",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "c2335b5a41cbb877",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status Overview",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1100,
        "y": 100,
        "wires": []
    },
    {
        "id": "828f1c35d6802a68",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "5e0b29f2eb6ae19a",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Serial Number",
        "label": "Serial Number",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 420,
        "wires": []
    },
    {
        "id": "d4c9bc7e67774107",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "5e0b29f2eb6ae19a",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Software Version",
        "label": "Software Version",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1750,
        "y": 480,
        "wires": []
    },
    {
        "id": "b2abe663dd43acd5",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "5e0b29f2eb6ae19a",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "Build Year",
        "label": "Build Year",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 540,
        "wires": []
    },
    {
        "id": "f295c3506a9c369d",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "5e0b29f2eb6ae19a",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "Device Class",
        "label": "Device Class",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1730,
        "y": 600,
        "wires": []
    },
    {
        "id": "81d888d46b978737",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "5e0b29f2eb6ae19a",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "Product Code",
        "label": "Product Code",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 660,
        "wires": []
    },
    {
        "id": "9748a5d006580ecc",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "c2335b5a41cbb877",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Model",
        "label": "",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1710,
        "y": 720,
        "wires": []
    },
    {
        "id": "486b5e33047701a6",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "8419921454ee4d95",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "Control Identifier Interpretaton",
        "label": "Control Identifier Interpretaton",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1850,
        "y": 800,
        "wires": []
    },
    {
        "id": "8eb09b4d4b3d9648",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "8419921454ee4d95",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Identifier",
        "label": "Identifier",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 860,
        "wires": []
    },
    {
        "id": "5629972f87d25a86",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "8419921454ee4d95",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Control Identifier",
        "label": "Control Identifier",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 920,
        "wires": []
    },
    {
        "id": "e42ae47afdd49428",
        "type": "ui_switch",
        "z": "cf9ac5b0583eb9e5",
        "name": "Available",
        "label": "Available",
        "tooltip": "",
        "group": "8419921454ee4d95",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1880,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "79e85b52a43ac7bb",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "8419921454ee4d95",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Place Number",
        "label": "Place Number",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 1040,
        "wires": []
    },
    {
        "id": "7cd06e0694fe6b1d",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "21a50a03a9edb990",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Name",
        "label": "Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1710,
        "y": 1160,
        "wires": []
    },
    {
        "id": "2cbb4c145d857b53",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "21a50a03a9edb990",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "StateId",
        "label": "StateId",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 1220,
        "wires": []
    },
    {
        "id": "193d1fe7eda7f988",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "21a50a03a9edb990",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Status",
        "label": "Status",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1710,
        "y": 1280,
        "wires": []
    },
    {
        "id": "461b655d2608d5e3",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "bd18789bcb7056c0",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Operation Mode",
        "label": "Operation Mode",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 1400,
        "wires": []
    },
    {
        "id": "fb8562e5bf57f0da",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "bd18789bcb7056c0",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Power On Duration",
        "label": "Power On Duration",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1750,
        "y": 1460,
        "wires": []
    },
    {
        "id": "fcc952bb301352d8",
        "type": "ui_switch",
        "z": "cf9ac5b0583eb9e5",
        "name": "Warumup",
        "label": "Warumup",
        "tooltip": "",
        "group": "bd18789bcb7056c0",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1720,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "43d00f6debd8dc4e",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "c86d2d63c265b5ab",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Channel Name",
        "label": "Channel Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 1720,
        "wires": []
    },
    {
        "id": "58fcb5e38e0c035e",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "c86d2d63c265b5ab",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Channel Mode",
        "label": "Channel Mode",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 1780,
        "wires": []
    },
    {
        "id": "ae3f3893b94269a9",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "c86d2d63c265b5ab",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Channel State",
        "label": "Channel State",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 1840,
        "wires": []
    },
    {
        "id": "1c4d36c1e407e2e3",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "SetNodeIds",
        "func": "flow.set('NameSpace',22);\nflow.set('NcProg_State_Number',6009);\n\n// Identification\nflow.set('Manufacturer',6027);\nflow.set('Location',6034);\nflow.set('ProductInstanceUri',6026);\nflow.set('SerialNumber',6028);\nflow.set('YearOfConstruction',6061);\nflow.set('DeviceClass',6031);\nflow.set('ProductCode',6038);\nflow.set('Model',6036);\nflow.set('SoftwareRevision',6060);\n\n// Tools\nflow.set('ControlIdentifierInterpretation',6019);\nflow.set('ControllIdentifier1',6018);\nflow.set('Identifier',6046);\nflow.set('Locked',6020);\nflow.set('PlaceNumber',6048);\n\n// Active Program\nflow.set('Name',6005);\nflow.set('Id',6009);\nflow.set('CurrentState',6007);\n\n// Monitoring \nflow.set('OperationMode',6004);\nflow.set('PowerOnDuration',6095);\nflow.set('IsWarmUp',6099);\nflow.set('FeedOverride',6096);\n\n// Channel \nflow.set('ChannelName',6055);\nflow.set('ChannelMode',6050);\nflow.set('ChannelState',6051);\nflow.set('ChannelFeedOverride',6052);\nflow.set('ChannelRapidOverride',6056);\n\n// Spindle \nflow.set('SpindleName',6041);\nflow.set('IsUsedAsAxis',6042);\nflow.set('IsRotating',6040);\nflow.set('SpindleOverride',6043);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "584676c6a6a0c2c3",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "Manufacturer",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nmsg.options = \"options\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 260,
        "wires": [
            [
                "ce4437db1503788a"
            ]
        ]
    },
    {
        "id": "053ad4c5809c4196",
        "type": "inject",
        "z": "cf9ac5b0583eb9e5",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 480,
        "wires": [
            [
                "87d289bf88c191b0"
            ]
        ]
    },
    {
        "id": "ae6f2bc36d718dd3",
        "type": "inject",
        "z": "cf9ac5b0583eb9e5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 160,
        "wires": [
            [
                "1c4d36c1e407e2e3"
            ]
        ]
    },
    {
        "id": "b3a539f058086914",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "Location",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 320,
        "wires": [
            [
                "ce4437db1503788a"
            ]
        ]
    },
    {
        "id": "142ebfd34af4a176",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ProductInstanceUri",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 380,
        "wires": [
            [
                "ce4437db1503788a"
            ]
        ]
    },
    {
        "id": "8f7925f066ebc221",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "NcProg_State_Number",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.topic = \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 100,
        "wires": [
            [
                "6ecd265692cc5620"
            ]
        ]
    },
    {
        "id": "65685c5305e38ebc",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "SerialNumber",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 440,
        "wires": [
            [
                "ce4437db1503788a"
            ]
        ]
    },
    {
        "id": "30ed65e774b25b6f",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "SoftwareRevision",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 500,
        "wires": [
            [
                "ce4437db1503788a"
            ]
        ]
    },
    {
        "id": "d6f2670c758ab041",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "YearOfConstruction",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 560,
        "wires": [
            [
                "ce4437db1503788a"
            ]
        ]
    },
    {
        "id": "42cfe0e608a3ec76",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "DeviceClass",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 620,
        "wires": [
            [
                "ce4437db1503788a"
            ]
        ]
    },
    {
        "id": "deb812775c5a1811",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ProductCode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 680,
        "wires": [
            [
                "ce4437db1503788a"
            ]
        ]
    },
    {
        "id": "b8861a6703c107fa",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "Model",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 740,
        "wires": [
            [
                "ce4437db1503788a"
            ]
        ]
    },
    {
        "id": "12473d7e2f3115b1",
        "type": "comment",
        "z": "cf9ac5b0583eb9e5",
        "name": "IDENTIFICATION",
        "info": "",
        "x": 220,
        "y": 260,
        "wires": []
    },
    {
        "id": "f6d9edccc2d50bae",
        "type": "comment",
        "z": "cf9ac5b0583eb9e5",
        "name": "TOOLS",
        "info": "",
        "x": 190,
        "y": 820,
        "wires": []
    },
    {
        "id": "4e2d7a3533abe12b",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ControlIdentifierInterpretation",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 820,
        "wires": [
            [
                "35e8d302ac12f437"
            ]
        ]
    },
    {
        "id": "31a3a777b3e99583",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "Identifier",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 880,
        "wires": [
            [
                "35e8d302ac12f437"
            ]
        ]
    },
    {
        "id": "5f6b7cfb5ea49159",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ControllIdentifier1",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 940,
        "wires": [
            [
                "35e8d302ac12f437"
            ]
        ]
    },
    {
        "id": "612ef25bcb6c180e",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "Locked",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1000,
        "wires": [
            [
                "35e8d302ac12f437"
            ]
        ]
    },
    {
        "id": "a6e50a34d378158b",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "PlaceNumber",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1060,
        "wires": [
            [
                "35e8d302ac12f437"
            ]
        ]
    },
    {
        "id": "6cec698888375c86",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "",
        "func": "if(!msg.payload) {\n    msg.payload = true\n}\nelse {\n    msg.payload = false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 980,
        "wires": [
            [
                "e42ae47afdd49428"
            ]
        ]
    },
    {
        "id": "ce5f4e08de407dbb",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "Name",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1180,
        "wires": [
            [
                "caa2c8c01fcfdb9c"
            ]
        ]
    },
    {
        "id": "d5626036be59554d",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "Id",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1240,
        "wires": [
            [
                "caa2c8c01fcfdb9c"
            ]
        ]
    },
    {
        "id": "8ca3c778b51494d4",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "CurrentState",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1300,
        "wires": [
            [
                "caa2c8c01fcfdb9c"
            ]
        ]
    },
    {
        "id": "6101816794119dfe",
        "type": "comment",
        "z": "cf9ac5b0583eb9e5",
        "name": "ACTIVE PROGRAM",
        "info": "",
        "x": 230,
        "y": 1160,
        "wires": []
    },
    {
        "id": "b5a06a49170579a3",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "OperationMode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1400,
        "wires": [
            [
                "4689964906507e88"
            ]
        ]
    },
    {
        "id": "edf86820d4761d58",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "PowerOnDuration",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1460,
        "wires": [
            [
                "4689964906507e88"
            ]
        ]
    },
    {
        "id": "438c818509ad9a8c",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "IsWarmUp",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1520,
        "wires": [
            [
                "4689964906507e88"
            ]
        ]
    },
    {
        "id": "a874f8a44dca3dee",
        "type": "comment",
        "z": "cf9ac5b0583eb9e5",
        "name": "MONITORING",
        "info": "",
        "x": 220,
        "y": 1400,
        "wires": []
    },
    {
        "id": "de93633417faaa50",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "FeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1580,
        "wires": [
            [
                "4689964906507e88"
            ]
        ]
    },
    {
        "id": "8c879a8c0e4852b1",
        "type": "ui_gauge",
        "z": "cf9ac5b0583eb9e5",
        "name": "",
        "group": "bd18789bcb7056c0",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Feed Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1740,
        "y": 1580,
        "wires": []
    },
    {
        "id": "5e4232b26aa67f68",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ChannelName",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1720,
        "wires": [
            [
                "5838e8fae2203209"
            ]
        ]
    },
    {
        "id": "dae0825a0c57795f",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ChannelMode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1780,
        "wires": [
            [
                "5838e8fae2203209"
            ]
        ]
    },
    {
        "id": "2bca4b72a385eee7",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ChannelState",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1840,
        "wires": [
            [
                "5838e8fae2203209"
            ]
        ]
    },
    {
        "id": "5a3a2cb066720a29",
        "type": "comment",
        "z": "cf9ac5b0583eb9e5",
        "name": "CHANNEL ",
        "info": "",
        "x": 200,
        "y": 1720,
        "wires": []
    },
    {
        "id": "ec5e999760d2e04a",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ChannelFeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1900,
        "wires": [
            [
                "5838e8fae2203209"
            ]
        ]
    },
    {
        "id": "922255001cc9b0af",
        "type": "ui_gauge",
        "z": "cf9ac5b0583eb9e5",
        "name": "",
        "group": "c86d2d63c265b5ab",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Feed Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1740,
        "y": 1900,
        "wires": []
    },
    {
        "id": "4d55a090a9de7be0",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ChannelRapidOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1960,
        "wires": [
            [
                "5838e8fae2203209"
            ]
        ]
    },
    {
        "id": "68beb06b727ea058",
        "type": "ui_gauge",
        "z": "cf9ac5b0583eb9e5",
        "name": "",
        "group": "c86d2d63c265b5ab",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Rapid Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1740,
        "y": 1960,
        "wires": []
    },
    {
        "id": "b69733f69dc449ad",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "SpindleName",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2060,
        "wires": [
            [
                "6f0de0058babd662"
            ]
        ]
    },
    {
        "id": "4e7f0f5765a3a6de",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "IsUsedAsAxis",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2120,
        "wires": [
            [
                "6f0de0058babd662"
            ]
        ]
    },
    {
        "id": "a5efc89b96688a24",
        "type": "comment",
        "z": "cf9ac5b0583eb9e5",
        "name": "SPINDLE",
        "info": "",
        "x": 200,
        "y": 2060,
        "wires": []
    },
    {
        "id": "6788c2b4ed52c2f7",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "IsRotating",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2180,
        "wires": [
            [
                "6f0de0058babd662"
            ]
        ]
    },
    {
        "id": "4c00742f380dd7fa",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "SpindleOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2240,
        "wires": [
            [
                "6f0de0058babd662"
            ]
        ]
    },
    {
        "id": "6aa7433f2142a802",
        "type": "ui_gauge",
        "z": "cf9ac5b0583eb9e5",
        "name": "",
        "group": "14a2c8fb34b0d83c",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "SpindleOverride",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1740,
        "y": 2240,
        "wires": []
    },
    {
        "id": "ce53a90ff7578d75",
        "type": "ui_switch",
        "z": "cf9ac5b0583eb9e5",
        "name": "IsUsedAsAxis",
        "label": "IsUsedAsAxis",
        "tooltip": "",
        "group": "14a2c8fb34b0d83c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1740,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "55abe0f50a2499e0",
        "type": "ui_switch",
        "z": "cf9ac5b0583eb9e5",
        "name": "IsRotating",
        "label": "IsRotating",
        "tooltip": "",
        "group": "14a2c8fb34b0d83c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1720,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "939a50349f2d5b8b",
        "type": "ui_statetrail",
        "z": "cf9ac5b0583eb9e5",
        "group": "c2335b5a41cbb877",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "state trail label",
        "states": [
            {
                "state": 1,
                "col": "#009933",
                "t": "num",
                "label": ""
            },
            {
                "state": 2,
                "col": "#17a2b8",
                "t": "num",
                "label": ""
            }
        ],
        "periodLimit": "1",
        "periodLimitUnit": "3600",
        "timeformat": "HH:mm",
        "tickmarks": "4",
        "persist": false,
        "legend": 1,
        "combine": true,
        "blanklabel": "",
        "x": 920,
        "y": 100,
        "wires": [
            [
                "8df596a51c5f788d"
            ]
        ]
    },
    {
        "id": "a1a1d6d7ab46bb49",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "Manufacturer",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 240,
        "wires": [
            [
                "c15ed9c6d3b33ab0"
            ]
        ]
    },
    {
        "id": "54629ff05e2d839f",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "Location",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 300,
        "wires": [
            [
                "335fe4784d448344"
            ]
        ]
    },
    {
        "id": "b9fbea0b8cb775b0",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ProductInstanceUri",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 360,
        "wires": [
            [
                "8ad9b2f477c2b74e"
            ]
        ]
    },
    {
        "id": "6989c543e722dbc3",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "SerialNumber",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 420,
        "wires": [
            [
                "828f1c35d6802a68"
            ]
        ]
    },
    {
        "id": "4980d28edbe31fdb",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "SoftwareRevision",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 480,
        "wires": [
            [
                "d4c9bc7e67774107"
            ]
        ]
    },
    {
        "id": "95666eaa2772d8af",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "YearOfConstruction",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 540,
        "wires": [
            [
                "b2abe663dd43acd5"
            ]
        ]
    },
    {
        "id": "7ad9fbabd6fb480f",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "DeviceClass",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 600,
        "wires": [
            [
                "f295c3506a9c369d"
            ]
        ]
    },
    {
        "id": "491220977aed7bd8",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ProductCode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 660,
        "wires": [
            [
                "81d888d46b978737"
            ]
        ]
    },
    {
        "id": "13a6366beac0e07a",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "Model",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 720,
        "wires": [
            [
                "9748a5d006580ecc"
            ]
        ]
    },
    {
        "id": "38d8ed596f34551d",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ControlIdentifierInterpretation",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 800,
        "wires": [
            [
                "486b5e33047701a6"
            ]
        ]
    },
    {
        "id": "424c4e050e1ba4c6",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "Identifier",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 860,
        "wires": [
            [
                "8eb09b4d4b3d9648"
            ]
        ]
    },
    {
        "id": "9df8bf651fc45f1d",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ControllIdentifier1",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 920,
        "wires": [
            [
                "5629972f87d25a86"
            ]
        ]
    },
    {
        "id": "f453ac37b502f491",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "Locked",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 980,
        "wires": [
            [
                "6cec698888375c86"
            ]
        ]
    },
    {
        "id": "558e9e058d205436",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "PlaceNumber",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1040,
        "wires": [
            [
                "79e85b52a43ac7bb"
            ]
        ]
    },
    {
        "id": "4bf71a00625b4aa2",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "Name",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1160,
        "wires": [
            [
                "7cd06e0694fe6b1d"
            ]
        ]
    },
    {
        "id": "4a90239b50dbf117",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "Id",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1220,
        "wires": [
            [
                "2cbb4c145d857b53"
            ]
        ]
    },
    {
        "id": "12cbcfc6da03375f",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "CurrentState",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1280,
        "wires": [
            [
                "193d1fe7eda7f988"
            ]
        ]
    },
    {
        "id": "bf88554f94730c11",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "OperationMode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1400,
        "wires": [
            [
                "461b655d2608d5e3"
            ]
        ]
    },
    {
        "id": "53f04b78a26db189",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "PowerOnDuration",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1460,
        "wires": [
            [
                "fb8562e5bf57f0da"
            ]
        ]
    },
    {
        "id": "3c30861ed2eeb58c",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "IsWarmUp",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1520,
        "wires": [
            [
                "fcc952bb301352d8"
            ]
        ]
    },
    {
        "id": "d24b0306b6df08d6",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "FeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1580,
        "wires": [
            [
                "8c879a8c0e4852b1"
            ]
        ]
    },
    {
        "id": "3c8cf15676fbb8fd",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ChannelName",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1720,
        "wires": [
            [
                "43d00f6debd8dc4e"
            ]
        ]
    },
    {
        "id": "cf81795119c83466",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ChannelMode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1780,
        "wires": [
            [
                "58fcb5e38e0c035e"
            ]
        ]
    },
    {
        "id": "01be0718f8f4f734",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ChannelState",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1840,
        "wires": [
            [
                "ae3f3893b94269a9"
            ]
        ]
    },
    {
        "id": "081fac56abb51177",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ChannelFeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 1900,
        "wires": [
            [
                "922255001cc9b0af"
            ]
        ]
    },
    {
        "id": "7ce3ff2ace695813",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "ChannelRapidOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 1960,
        "wires": [
            [
                "68beb06b727ea058"
            ]
        ]
    },
    {
        "id": "bc194fd06dc4e2fe",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "IsUsedAsAxis",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 2120,
        "wires": [
            [
                "ce53a90ff7578d75"
            ]
        ]
    },
    {
        "id": "ea32f7472f010e7f",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "IsRotating",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 2180,
        "wires": [
            [
                "55abe0f50a2499e0"
            ]
        ]
    },
    {
        "id": "4bd8740e4c979cbc",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "SpindleOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 2240,
        "wires": [
            [
                "6aa7433f2142a802"
            ]
        ]
    },
    {
        "id": "fce552428ec6abd6",
        "type": "inject",
        "z": "cf9ac5b0583eb9e5",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 940,
        "wires": [
            [
                "e3a2dd17e6fc87ad"
            ]
        ]
    },
    {
        "id": "04e60c525a660563",
        "type": "inject",
        "z": "cf9ac5b0583eb9e5",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.7",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1240,
        "wires": [
            [
                "9a0e04af6a57a597"
            ]
        ]
    },
    {
        "id": "57f32f61b6abc694",
        "type": "inject",
        "z": "cf9ac5b0583eb9e5",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1480,
        "wires": [
            [
                "46ee0e1f09d30120"
            ]
        ]
    },
    {
        "id": "530232b1942a9974",
        "type": "inject",
        "z": "cf9ac5b0583eb9e5",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.3",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1780,
        "wires": [
            [
                "e0285073f7a0fcc9"
            ]
        ]
    },
    {
        "id": "38ca479a8a395769",
        "type": "inject",
        "z": "cf9ac5b0583eb9e5",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.6",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 2120,
        "wires": [
            [
                "2363439625dea4f8"
            ]
        ]
    },
    {
        "id": "6ecd265692cc5620",
        "type": "OpcUa-Client",
        "z": "cf9ac5b0583eb9e5",
        "endpoint": "9ffe9b2dd3eba1b3",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 740,
        "y": 100,
        "wires": [
            [
                "939a50349f2d5b8b"
            ]
        ]
    },
    {
        "id": "2229a9456c95828c",
        "type": "OpcUa-Client",
        "z": "cf9ac5b0583eb9e5",
        "endpoint": "9ffe9b2dd3eba1b3",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "4",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 1160,
        "y": 1500,
        "wires": [
            [
                "0688e709401a4568"
            ]
        ]
    },
    {
        "id": "49e969f9069f26e7",
        "type": "join",
        "z": "cf9ac5b0583eb9e5",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "9",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 500,
        "wires": [
            [
                "2229a9456c95828c"
            ]
        ]
    },
    {
        "id": "6797b1b4666f2e09",
        "type": "join",
        "z": "cf9ac5b0583eb9e5",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 940,
        "wires": [
            [
                "2229a9456c95828c"
            ]
        ]
    },
    {
        "id": "bbfe80aa48fdcdd5",
        "type": "join",
        "z": "cf9ac5b0583eb9e5",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 1240,
        "wires": [
            [
                "2229a9456c95828c"
            ]
        ]
    },
    {
        "id": "b0221ed93916f185",
        "type": "join",
        "z": "cf9ac5b0583eb9e5",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 1480,
        "wires": [
            [
                "2229a9456c95828c"
            ]
        ]
    },
    {
        "id": "9eae4a9967ef726f",
        "type": "join",
        "z": "cf9ac5b0583eb9e5",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 1780,
        "wires": [
            [
                "2229a9456c95828c"
            ]
        ]
    },
    {
        "id": "72a1c40c5480372d",
        "type": "join",
        "z": "cf9ac5b0583eb9e5",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 2120,
        "wires": [
            [
                "2229a9456c95828c"
            ]
        ]
    },
    {
        "id": "97edb2cec40e5dbd",
        "type": "ui_text",
        "z": "cf9ac5b0583eb9e5",
        "group": "14a2c8fb34b0d83c",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "SpindleName",
        "label": "Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1740,
        "y": 2040,
        "wires": []
    },
    {
        "id": "cf5d85fa30c7da91",
        "type": "function",
        "z": "cf9ac5b0583eb9e5",
        "name": "SpindleName",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 2040,
        "wires": [
            [
                "97edb2cec40e5dbd"
            ]
        ]
    },
    {
        "id": "3bc1a466421868ca",
        "type": "inject",
        "z": "3363a9772183b340",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "4",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 80,
        "wires": [
            [
                "912d2b07c841efc6"
            ]
        ]
    },
    {
        "id": "279b30850da04048",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "75fc0d5e73af76ff",
        "order": 7,
        "width": "6",
        "height": "2",
        "name": "Location",
        "label": "Location",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 280,
        "wires": []
    },
    {
        "id": "e6f3bfc6e662f178",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "75fc0d5e73af76ff",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Manufacturer",
        "label": "Manufacturer",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1710,
        "y": 220,
        "wires": []
    },
    {
        "id": "5722bab42b3e7a03",
        "type": "ui_template",
        "z": "3363a9772183b340",
        "group": "2d35dfb81b8d5d00",
        "name": "MachinePicture",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div height=\"180\" style=\"height: 180px;\">\n    <img src=\"https://dashboard.umati.app/userImages/a18029e5391e017bd96eb1fa173dfb12c7d09d80bd331b8fc448a8c4c5c6132a.jpg\" width=\"300\"><br/>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 240,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "73c304da23a0752e",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "2d35dfb81b8d5d00",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "ProductInstanceUri",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1730,
        "y": 340,
        "wires": []
    },
    {
        "id": "0facf6ed701227d8",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "2d35dfb81b8d5d00",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status Overview",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1080,
        "y": 80,
        "wires": []
    },
    {
        "id": "55c091cf84ef0e93",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "75fc0d5e73af76ff",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Serial Number",
        "label": "Serial Number",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 400,
        "wires": []
    },
    {
        "id": "a3363be131bbe313",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "75fc0d5e73af76ff",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Software Version",
        "label": "Software Version",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1730,
        "y": 460,
        "wires": []
    },
    {
        "id": "6540ee3da2faac41",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "75fc0d5e73af76ff",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "Build Year",
        "label": "Build Year",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 520,
        "wires": []
    },
    {
        "id": "074c991f9782b1a4",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "75fc0d5e73af76ff",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "Device Class",
        "label": "Device Class",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1710,
        "y": 580,
        "wires": []
    },
    {
        "id": "7e60848e104055b5",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "75fc0d5e73af76ff",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "Product Code",
        "label": "Product Code",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 640,
        "wires": []
    },
    {
        "id": "e9a399e642e22ec7",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "2d35dfb81b8d5d00",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Model",
        "label": "",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1690,
        "y": 700,
        "wires": []
    },
    {
        "id": "7e7a3fe839ac2090",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "2c5d590d7ec2fb87",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "Control Identifier Interpretaton",
        "label": "Control Identifier Interpretaton",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1830,
        "y": 780,
        "wires": []
    },
    {
        "id": "04ab4857630fbab1",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "2c5d590d7ec2fb87",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Identifier",
        "label": "Identifier",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 840,
        "wires": []
    },
    {
        "id": "3f53539cfcc8a33c",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "2c5d590d7ec2fb87",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Control Identifier",
        "label": "Control Identifier",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 900,
        "wires": []
    },
    {
        "id": "11985dc7d46b929c",
        "type": "ui_switch",
        "z": "3363a9772183b340",
        "name": "Available",
        "label": "Available",
        "tooltip": "",
        "group": "2c5d590d7ec2fb87",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1860,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "4e5ab512bf13f0f4",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "2c5d590d7ec2fb87",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Place Number",
        "label": "Place Number",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 1020,
        "wires": []
    },
    {
        "id": "04070cdbaee6c8e0",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "c2118b0d52ad3aad",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Name",
        "label": "Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1690,
        "y": 1140,
        "wires": []
    },
    {
        "id": "befe3f65d4c93329",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "c2118b0d52ad3aad",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "StateId",
        "label": "StateId",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 1200,
        "wires": []
    },
    {
        "id": "20a85299144a041e",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "c2118b0d52ad3aad",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Status",
        "label": "Status",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1690,
        "y": 1260,
        "wires": []
    },
    {
        "id": "0fcb91e79f9d931c",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "3c76d2446187a599",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Operation Mode",
        "label": "Operation Mode",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 1380,
        "wires": []
    },
    {
        "id": "f11dc5a782c0be7f",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "3c76d2446187a599",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Power On Duration",
        "label": "Power On Duration",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1730,
        "y": 1440,
        "wires": []
    },
    {
        "id": "3e5d6eba2c0dd231",
        "type": "ui_switch",
        "z": "3363a9772183b340",
        "name": "Warumup",
        "label": "Warumup",
        "tooltip": "",
        "group": "3c76d2446187a599",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1700,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "b62ff3e5ecfeab56",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "8981672dabdeb771",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Channel Name",
        "label": "Channel Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 1700,
        "wires": []
    },
    {
        "id": "4f26a2bfbca5e08a",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "8981672dabdeb771",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Channel Mode",
        "label": "Channel Mode",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 1760,
        "wires": []
    },
    {
        "id": "c28ab56ee42424a0",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "8981672dabdeb771",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Channel State",
        "label": "Channel State",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 1820,
        "wires": []
    },
    {
        "id": "ba4bef6c76567097",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "SetNodeIds",
        "func": "flow.set('NameSpace',16);\nflow.set('NcProg_State_Number',6009);\n\n// Identification\nflow.set('Manufacturer',6027);\nflow.set('Location',6034);\nflow.set('ProductInstanceUri',6026);\nflow.set('SerialNumber',6028);\nflow.set('YearOfConstruction',6061);\nflow.set('DeviceClass',6031);\nflow.set('ProductCode',6038);\nflow.set('Model',6036);\nflow.set('SoftwareRevision',6060);\n\n// Tools\nflow.set('ControlIdentifierInterpretation',6019);\nflow.set('ControllIdentifier1',6018);\nflow.set('Identifier',6046);\nflow.set('Locked',6020);\nflow.set('PlaceNumber',6048);\n\n// Active Program\nflow.set('Name',6005);\nflow.set('Id',6009);\nflow.set('CurrentState',6007);\n\n// Monitoring \nflow.set('OperationMode',6004);\nflow.set('PowerOnDuration',6095);\nflow.set('IsWarmUp',6099);\nflow.set('FeedOverride',6096);\n\n// Channel \nflow.set('ChannelName',6055);\nflow.set('ChannelMode',6050);\nflow.set('ChannelState',6051);\nflow.set('ChannelFeedOverride',6052);\nflow.set('ChannelRapidOverride',6056);\n\n// Spindle \nflow.set('SpindleName',6041);\nflow.set('IsUsedAsAxis',6042);\nflow.set('IsRotating',6040);\nflow.set('SpindleOverride',6043);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "77e54e406b02bb06",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "Manufacturer",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nmsg.options = \"options\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 240,
        "wires": [
            [
                "9eaa2648cd1edab9"
            ]
        ]
    },
    {
        "id": "0058c729b5beb116",
        "type": "inject",
        "z": "3363a9772183b340",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "e42c468c6654102e"
            ]
        ]
    },
    {
        "id": "c735491701e5e453",
        "type": "inject",
        "z": "3363a9772183b340",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 470,
        "y": 140,
        "wires": [
            [
                "ba4bef6c76567097"
            ]
        ]
    },
    {
        "id": "41e8e0a27eab20aa",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "Location",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 300,
        "wires": [
            [
                "9eaa2648cd1edab9"
            ]
        ]
    },
    {
        "id": "1d86edaf4b600417",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ProductInstanceUri",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 360,
        "wires": [
            [
                "9eaa2648cd1edab9"
            ]
        ]
    },
    {
        "id": "912d2b07c841efc6",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "NcProg_State_Number",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.topic = \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 80,
        "wires": [
            [
                "a1b2842bf681dc60"
            ]
        ]
    },
    {
        "id": "e5b71fca805dbeec",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "SerialNumber",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 420,
        "wires": [
            [
                "9eaa2648cd1edab9"
            ]
        ]
    },
    {
        "id": "47f3892a4473bbea",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "SoftwareRevision",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 480,
        "wires": [
            [
                "9eaa2648cd1edab9"
            ]
        ]
    },
    {
        "id": "a965615b83bf94fd",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "YearOfConstruction",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 540,
        "wires": [
            [
                "9eaa2648cd1edab9"
            ]
        ]
    },
    {
        "id": "42485242768cea49",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "DeviceClass",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 600,
        "wires": [
            [
                "9eaa2648cd1edab9"
            ]
        ]
    },
    {
        "id": "b6ce97579d09034a",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ProductCode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 660,
        "wires": [
            [
                "9eaa2648cd1edab9"
            ]
        ]
    },
    {
        "id": "13655fdf503f227c",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "Model",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 720,
        "wires": [
            [
                "9eaa2648cd1edab9"
            ]
        ]
    },
    {
        "id": "ee23fb387e744dee",
        "type": "comment",
        "z": "3363a9772183b340",
        "name": "IDENTIFICATION",
        "info": "",
        "x": 200,
        "y": 240,
        "wires": []
    },
    {
        "id": "4e340cb8920792ac",
        "type": "comment",
        "z": "3363a9772183b340",
        "name": "TOOLS",
        "info": "",
        "x": 170,
        "y": 800,
        "wires": []
    },
    {
        "id": "66a865b2e571a22e",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ControlIdentifierInterpretation",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 800,
        "wires": [
            [
                "fcd5d7a8849e0773"
            ]
        ]
    },
    {
        "id": "c01987f8674772ec",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "Identifier",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 860,
        "wires": [
            [
                "fcd5d7a8849e0773"
            ]
        ]
    },
    {
        "id": "d95ae0dd441485c0",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ControllIdentifier1",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 920,
        "wires": [
            [
                "fcd5d7a8849e0773"
            ]
        ]
    },
    {
        "id": "7d5d49e1341ac86e",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "Locked",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 980,
        "wires": [
            [
                "fcd5d7a8849e0773"
            ]
        ]
    },
    {
        "id": "12d04a6db01eac14",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "PlaceNumber",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1040,
        "wires": [
            [
                "fcd5d7a8849e0773"
            ]
        ]
    },
    {
        "id": "667c1e6004aceb21",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "",
        "func": "if(!msg.payload) {\n    msg.payload = true\n}\nelse {\n    msg.payload = false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 960,
        "wires": [
            [
                "11985dc7d46b929c"
            ]
        ]
    },
    {
        "id": "0ea6f8ee0490fe60",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "Name",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1160,
        "wires": [
            [
                "7d4e550c8701f158"
            ]
        ]
    },
    {
        "id": "fee0ba117d2b1024",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "Id",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1220,
        "wires": [
            [
                "7d4e550c8701f158"
            ]
        ]
    },
    {
        "id": "6999105c09c05b06",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "CurrentState",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1280,
        "wires": [
            [
                "7d4e550c8701f158"
            ]
        ]
    },
    {
        "id": "47b038a2a54d3962",
        "type": "comment",
        "z": "3363a9772183b340",
        "name": "ACTIVE PROGRAM",
        "info": "",
        "x": 210,
        "y": 1140,
        "wires": []
    },
    {
        "id": "ce5cfa2d4cfc8140",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "OperationMode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1380,
        "wires": [
            [
                "0f5ee8622930c4d5"
            ]
        ]
    },
    {
        "id": "75b4408a463fd34d",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "PowerOnDuration",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1440,
        "wires": [
            [
                "0f5ee8622930c4d5"
            ]
        ]
    },
    {
        "id": "f5d62af2f90808c1",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "IsWarmUp",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1500,
        "wires": [
            [
                "0f5ee8622930c4d5"
            ]
        ]
    },
    {
        "id": "0092fce3adfa348c",
        "type": "comment",
        "z": "3363a9772183b340",
        "name": "MONITORING",
        "info": "",
        "x": 200,
        "y": 1380,
        "wires": []
    },
    {
        "id": "b1d12bb18524dcac",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "FeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1560,
        "wires": [
            [
                "0f5ee8622930c4d5"
            ]
        ]
    },
    {
        "id": "e7f66c593e73e1ec",
        "type": "ui_gauge",
        "z": "3363a9772183b340",
        "name": "",
        "group": "3c76d2446187a599",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Feed Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1720,
        "y": 1560,
        "wires": []
    },
    {
        "id": "6ff7cdc9e27e78dc",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ChannelName",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1700,
        "wires": [
            [
                "a70ebdcc5ff6a092"
            ]
        ]
    },
    {
        "id": "9169554b4d81fcb4",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ChannelMode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1760,
        "wires": [
            [
                "a70ebdcc5ff6a092"
            ]
        ]
    },
    {
        "id": "374f0f28b66fb05d",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ChannelState",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1820,
        "wires": [
            [
                "a70ebdcc5ff6a092"
            ]
        ]
    },
    {
        "id": "d82512b9931b2c78",
        "type": "comment",
        "z": "3363a9772183b340",
        "name": "CHANNEL ",
        "info": "",
        "x": 180,
        "y": 1700,
        "wires": []
    },
    {
        "id": "101d699034e2024c",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ChannelFeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1880,
        "wires": [
            [
                "a70ebdcc5ff6a092"
            ]
        ]
    },
    {
        "id": "40532997850f404c",
        "type": "ui_gauge",
        "z": "3363a9772183b340",
        "name": "",
        "group": "8981672dabdeb771",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Feed Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1720,
        "y": 1880,
        "wires": []
    },
    {
        "id": "4b89eb05877e9ffc",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ChannelRapidOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1940,
        "wires": [
            [
                "a70ebdcc5ff6a092"
            ]
        ]
    },
    {
        "id": "d0f6478604679c2b",
        "type": "ui_gauge",
        "z": "3363a9772183b340",
        "name": "",
        "group": "8981672dabdeb771",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Rapid Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1720,
        "y": 1940,
        "wires": []
    },
    {
        "id": "00a3a60f963efa21",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "SpindleName",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2040,
        "wires": [
            [
                "6b1467bdf7bda58b"
            ]
        ]
    },
    {
        "id": "ed338fbd8f16e7c4",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "IsUsedAsAxis",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2100,
        "wires": [
            [
                "6b1467bdf7bda58b"
            ]
        ]
    },
    {
        "id": "26bc7dc857fe9be8",
        "type": "comment",
        "z": "3363a9772183b340",
        "name": "SPINDLE",
        "info": "",
        "x": 180,
        "y": 2040,
        "wires": []
    },
    {
        "id": "95418f90a60f9517",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "IsRotating",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2160,
        "wires": [
            [
                "6b1467bdf7bda58b"
            ]
        ]
    },
    {
        "id": "371de8ebfe3af246",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "SpindleOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2220,
        "wires": [
            [
                "6b1467bdf7bda58b"
            ]
        ]
    },
    {
        "id": "5ff740265fe803e0",
        "type": "ui_gauge",
        "z": "3363a9772183b340",
        "name": "",
        "group": "3bf05d50da88504b",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "SpindleOverride",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1720,
        "y": 2220,
        "wires": []
    },
    {
        "id": "f9699573262b58c8",
        "type": "ui_switch",
        "z": "3363a9772183b340",
        "name": "IsUsedAsAxis",
        "label": "IsUsedAsAxis",
        "tooltip": "",
        "group": "3bf05d50da88504b",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1720,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "b717edd8d1e7cb01",
        "type": "ui_switch",
        "z": "3363a9772183b340",
        "name": "IsRotating",
        "label": "IsRotating",
        "tooltip": "",
        "group": "3bf05d50da88504b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1700,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "cc67e78fc1afba07",
        "type": "ui_statetrail",
        "z": "3363a9772183b340",
        "group": "2d35dfb81b8d5d00",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "state trail label",
        "states": [
            {
                "state": 1,
                "col": "#009933",
                "t": "num",
                "label": ""
            },
            {
                "state": 2,
                "col": "#17a2b8",
                "t": "num",
                "label": ""
            }
        ],
        "periodLimit": "1",
        "periodLimitUnit": "3600",
        "timeformat": "HH:mm",
        "tickmarks": "4",
        "persist": false,
        "legend": 1,
        "combine": true,
        "blanklabel": "",
        "x": 900,
        "y": 80,
        "wires": [
            [
                "0facf6ed701227d8"
            ]
        ]
    },
    {
        "id": "d409d002982e0593",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "Manufacturer",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 220,
        "wires": [
            [
                "e6f3bfc6e662f178"
            ]
        ]
    },
    {
        "id": "16f30cdb76f7b952",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "Location",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 280,
        "wires": [
            [
                "279b30850da04048"
            ]
        ]
    },
    {
        "id": "804a09fe9a7d9412",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ProductInstanceUri",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 340,
        "wires": [
            [
                "73c304da23a0752e"
            ]
        ]
    },
    {
        "id": "f0907f0358843efd",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "SerialNumber",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 400,
        "wires": [
            [
                "55c091cf84ef0e93"
            ]
        ]
    },
    {
        "id": "3fd1423c0545efe1",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "SoftwareRevision",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 460,
        "wires": [
            [
                "a3363be131bbe313"
            ]
        ]
    },
    {
        "id": "0d50e59763e4f945",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "YearOfConstruction",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 520,
        "wires": [
            [
                "6540ee3da2faac41"
            ]
        ]
    },
    {
        "id": "284ce3ae01a272f9",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "DeviceClass",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 580,
        "wires": [
            [
                "074c991f9782b1a4"
            ]
        ]
    },
    {
        "id": "308b837ce3e1de75",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ProductCode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 640,
        "wires": [
            [
                "7e60848e104055b5"
            ]
        ]
    },
    {
        "id": "2c0fd4d18e4c2ed2",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "Model",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 700,
        "wires": [
            [
                "e9a399e642e22ec7"
            ]
        ]
    },
    {
        "id": "b340b7044efb788f",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ControlIdentifierInterpretation",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 780,
        "wires": [
            [
                "7e7a3fe839ac2090"
            ]
        ]
    },
    {
        "id": "b1b636c70479990a",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "Identifier",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 840,
        "wires": [
            [
                "04ab4857630fbab1"
            ]
        ]
    },
    {
        "id": "a38da4cdcab87f12",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ControllIdentifier1",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 900,
        "wires": [
            [
                "3f53539cfcc8a33c"
            ]
        ]
    },
    {
        "id": "1a10aa2f29d681b9",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "Locked",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 960,
        "wires": [
            [
                "667c1e6004aceb21"
            ]
        ]
    },
    {
        "id": "3c878f31a11323c4",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "PlaceNumber",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1020,
        "wires": [
            [
                "4e5ab512bf13f0f4"
            ]
        ]
    },
    {
        "id": "5e4ea54918c6d9dd",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "Name",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1140,
        "wires": [
            [
                "04070cdbaee6c8e0"
            ]
        ]
    },
    {
        "id": "5898164fa4f2ec76",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "Id",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1200,
        "wires": [
            [
                "befe3f65d4c93329"
            ]
        ]
    },
    {
        "id": "90e5bb589e8e49de",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "CurrentState",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1260,
        "wires": [
            [
                "20a85299144a041e"
            ]
        ]
    },
    {
        "id": "f587c5f886c28519",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "OperationMode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1380,
        "wires": [
            [
                "0fcb91e79f9d931c"
            ]
        ]
    },
    {
        "id": "93502126ce28a21f",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "PowerOnDuration",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1440,
        "wires": [
            [
                "f11dc5a782c0be7f"
            ]
        ]
    },
    {
        "id": "7f9928e11c2dd7a6",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "IsWarmUp",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1500,
        "wires": [
            [
                "3e5d6eba2c0dd231"
            ]
        ]
    },
    {
        "id": "d8376da37bbb1cb9",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "FeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1560,
        "wires": [
            [
                "e7f66c593e73e1ec"
            ]
        ]
    },
    {
        "id": "f214ae74cfd00046",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ChannelName",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1700,
        "wires": [
            [
                "b62ff3e5ecfeab56"
            ]
        ]
    },
    {
        "id": "ebfd3f89d2cf95d2",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ChannelMode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1760,
        "wires": [
            [
                "4f26a2bfbca5e08a"
            ]
        ]
    },
    {
        "id": "4ffe01d8348005a5",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ChannelState",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1820,
        "wires": [
            [
                "c28ab56ee42424a0"
            ]
        ]
    },
    {
        "id": "98a222db9c391661",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ChannelFeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1880,
        "wires": [
            [
                "40532997850f404c"
            ]
        ]
    },
    {
        "id": "4d5dad2ed93759b0",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "ChannelRapidOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1940,
        "wires": [
            [
                "d0f6478604679c2b"
            ]
        ]
    },
    {
        "id": "bb99e762129206d1",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "IsUsedAsAxis",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 2100,
        "wires": [
            [
                "f9699573262b58c8"
            ]
        ]
    },
    {
        "id": "f72d69d5d2192bbb",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "IsRotating",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 2160,
        "wires": [
            [
                "b717edd8d1e7cb01"
            ]
        ]
    },
    {
        "id": "176a6eeadbc67a8a",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "SpindleOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 2220,
        "wires": [
            [
                "5ff740265fe803e0"
            ]
        ]
    },
    {
        "id": "3d679744c9c1d5f2",
        "type": "inject",
        "z": "3363a9772183b340",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 920,
        "wires": [
            [
                "5af8484b7c15fa2e"
            ]
        ]
    },
    {
        "id": "e780893373651fa7",
        "type": "inject",
        "z": "3363a9772183b340",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.7",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1220,
        "wires": [
            [
                "7935a39a04c28fbd"
            ]
        ]
    },
    {
        "id": "de8adf15e5a41fe2",
        "type": "inject",
        "z": "3363a9772183b340",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1460,
        "wires": [
            [
                "dc3ac520a633f45a"
            ]
        ]
    },
    {
        "id": "c7958cfba462c03e",
        "type": "inject",
        "z": "3363a9772183b340",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.3",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1760,
        "wires": [
            [
                "4bf79052e533ad4f"
            ]
        ]
    },
    {
        "id": "068c5780c4aaa14c",
        "type": "inject",
        "z": "3363a9772183b340",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.6",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 2100,
        "wires": [
            [
                "0bc7e6a4d910e1b8"
            ]
        ]
    },
    {
        "id": "a1b2842bf681dc60",
        "type": "OpcUa-Client",
        "z": "3363a9772183b340",
        "endpoint": "9ffe9b2dd3eba1b3",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 720,
        "y": 80,
        "wires": [
            [
                "cc67e78fc1afba07"
            ]
        ]
    },
    {
        "id": "07085256b73512f5",
        "type": "OpcUa-Client",
        "z": "3363a9772183b340",
        "endpoint": "9ffe9b2dd3eba1b3",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "4",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 1140,
        "y": 1480,
        "wires": [
            [
                "d12fac4a80bc87a8"
            ]
        ]
    },
    {
        "id": "090c74ecc2add726",
        "type": "join",
        "z": "3363a9772183b340",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "9",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 480,
        "wires": [
            [
                "07085256b73512f5"
            ]
        ]
    },
    {
        "id": "bb816a66d5c4f7bd",
        "type": "join",
        "z": "3363a9772183b340",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 920,
        "wires": [
            [
                "07085256b73512f5"
            ]
        ]
    },
    {
        "id": "d2c3f2140a3b8173",
        "type": "join",
        "z": "3363a9772183b340",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 1220,
        "wires": [
            [
                "07085256b73512f5"
            ]
        ]
    },
    {
        "id": "43696b6d7c442c94",
        "type": "join",
        "z": "3363a9772183b340",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 1460,
        "wires": [
            [
                "07085256b73512f5"
            ]
        ]
    },
    {
        "id": "f109ef95ca71d9c5",
        "type": "join",
        "z": "3363a9772183b340",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 1760,
        "wires": [
            [
                "07085256b73512f5"
            ]
        ]
    },
    {
        "id": "cc4595f1ef89bd5a",
        "type": "join",
        "z": "3363a9772183b340",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 2100,
        "wires": [
            [
                "07085256b73512f5"
            ]
        ]
    },
    {
        "id": "f2d52b4a85abacf2",
        "type": "ui_text",
        "z": "3363a9772183b340",
        "group": "3bf05d50da88504b",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "SpindleName",
        "label": "Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 2020,
        "wires": []
    },
    {
        "id": "b3c60b31ab43a2c3",
        "type": "function",
        "z": "3363a9772183b340",
        "name": "SpindleName",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 2020,
        "wires": [
            [
                "f2d52b4a85abacf2"
            ]
        ]
    },
    {
        "id": "debb82dfbb08000e",
        "type": "inject",
        "z": "c5b85ba02dd341cd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "4",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 80,
        "wires": [
            [
                "45588ece95603c72"
            ]
        ]
    },
    {
        "id": "cf4a39ce604fc0c2",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "75822fd371bbac59",
        "order": 7,
        "width": "6",
        "height": "2",
        "name": "Location",
        "label": "Location",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 280,
        "wires": []
    },
    {
        "id": "838de4faa6874c52",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "75822fd371bbac59",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Manufacturer",
        "label": "Manufacturer",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1710,
        "y": 220,
        "wires": []
    },
    {
        "id": "dc73448732113886",
        "type": "ui_template",
        "z": "c5b85ba02dd341cd",
        "group": "9d647bfda66d994a",
        "name": "MachinePicture",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div height=\"180\" style=\"height: 180px;\">\n    <img src=\"https://dashboard.umati.app/userImages/default/machine.jpg\" width=\"300\"><br/>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 240,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "a933e670c57e0d83",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "9d647bfda66d994a",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "ProductInstanceUri",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1730,
        "y": 340,
        "wires": []
    },
    {
        "id": "5ab2677ed46679e6",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "9d647bfda66d994a",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status Overview",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1080,
        "y": 80,
        "wires": []
    },
    {
        "id": "0558f0940f7569e6",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "75822fd371bbac59",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Serial Number",
        "label": "Serial Number",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 400,
        "wires": []
    },
    {
        "id": "0a2a553da0396e79",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "75822fd371bbac59",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Software Version",
        "label": "Software Version",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1730,
        "y": 460,
        "wires": []
    },
    {
        "id": "7872c4910a43ae70",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "75822fd371bbac59",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "Build Year",
        "label": "Build Year",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 520,
        "wires": []
    },
    {
        "id": "5fd9be10faefce08",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "75822fd371bbac59",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "Device Class",
        "label": "Device Class",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1710,
        "y": 580,
        "wires": []
    },
    {
        "id": "945fcb7fe793727c",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "75822fd371bbac59",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "Product Code",
        "label": "Product Code",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 640,
        "wires": []
    },
    {
        "id": "0247dcabfd4284bf",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "9d647bfda66d994a",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Model",
        "label": "",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1690,
        "y": 700,
        "wires": []
    },
    {
        "id": "9c1ec6fe5898f16b",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "e41a326e41f5f302",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "Control Identifier Interpretaton",
        "label": "Control Identifier Interpretaton",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1830,
        "y": 780,
        "wires": []
    },
    {
        "id": "8d4a2edb7993acff",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "e41a326e41f5f302",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Identifier",
        "label": "Identifier",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 840,
        "wires": []
    },
    {
        "id": "234446d342a3441b",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "e41a326e41f5f302",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Control Identifier",
        "label": "Control Identifier",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 900,
        "wires": []
    },
    {
        "id": "87f080e69feb84c4",
        "type": "ui_switch",
        "z": "c5b85ba02dd341cd",
        "name": "Available",
        "label": "Available",
        "tooltip": "",
        "group": "e41a326e41f5f302",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1860,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "dc41e87be183e474",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "e41a326e41f5f302",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Place Number",
        "label": "Place Number",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 1020,
        "wires": []
    },
    {
        "id": "afd6087ca2e92e35",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "5ae1f98556b963cd",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Name",
        "label": "Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1690,
        "y": 1140,
        "wires": []
    },
    {
        "id": "583892cf5aafd284",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "5ae1f98556b963cd",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "StateId",
        "label": "StateId",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 1200,
        "wires": []
    },
    {
        "id": "9af6c33be8584272",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "5ae1f98556b963cd",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Status",
        "label": "Status",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1690,
        "y": 1260,
        "wires": []
    },
    {
        "id": "83b570714610ebc2",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "e50fbb89b3424578",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Operation Mode",
        "label": "Operation Mode",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 1380,
        "wires": []
    },
    {
        "id": "8ce233fba8f5a43d",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "e50fbb89b3424578",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Power On Duration",
        "label": "Power On Duration",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1730,
        "y": 1440,
        "wires": []
    },
    {
        "id": "16d229e27ea49670",
        "type": "ui_switch",
        "z": "c5b85ba02dd341cd",
        "name": "Warumup",
        "label": "Warumup",
        "tooltip": "",
        "group": "e50fbb89b3424578",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1700,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "ff4efe6de277e3e8",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "8cdc6a4e1802ec70",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Channel Name",
        "label": "Channel Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 1700,
        "wires": []
    },
    {
        "id": "d9e55461ab764e3a",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "8cdc6a4e1802ec70",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Channel Mode",
        "label": "Channel Mode",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 1760,
        "wires": []
    },
    {
        "id": "b96645f87c009a2c",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "8cdc6a4e1802ec70",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Channel State",
        "label": "Channel State",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 1820,
        "wires": []
    },
    {
        "id": "4c9440a283e1571d",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "SetNodeIds",
        "func": "flow.set('NameSpace',14);\nflow.set('NcProg_State_Number',6009);\n\n// Identification\nflow.set('Manufacturer',6027);\nflow.set('Location',6034);\nflow.set('ProductInstanceUri',6026);\nflow.set('SerialNumber',6028);\nflow.set('YearOfConstruction',6061);\nflow.set('DeviceClass',6031);\nflow.set('ProductCode',6038);\nflow.set('Model',6036);\nflow.set('SoftwareRevision',6060);\n\n// Tools\nflow.set('ControlIdentifierInterpretation',6019);\nflow.set('ControllIdentifier1',6018);\nflow.set('Identifier',6046);\nflow.set('Locked',6020);\nflow.set('PlaceNumber',6048);\n\n// Active Program\nflow.set('Name',6005);\nflow.set('Id',6009);\nflow.set('CurrentState',6007);\n\n// Monitoring \nflow.set('OperationMode',6004);\nflow.set('PowerOnDuration',6095);\nflow.set('IsWarmUp',6099);\nflow.set('FeedOverride',6096);\n\n// Channel \nflow.set('ChannelName',6055);\nflow.set('ChannelMode',6050);\nflow.set('ChannelState',6051);\nflow.set('ChannelFeedOverride',6052);\nflow.set('ChannelRapidOverride',6056);\n\n// Spindle \nflow.set('SpindleName',6041);\nflow.set('IsUsedAsAxis',6042);\nflow.set('IsRotating',6040);\nflow.set('SpindleOverride',6043);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "6312823630754d2d",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "Manufacturer",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nmsg.options = \"options\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 240,
        "wires": [
            [
                "4f7e020792e13b3e"
            ]
        ]
    },
    {
        "id": "e7e0822be5248b29",
        "type": "inject",
        "z": "c5b85ba02dd341cd",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "761704d5217449c5"
            ]
        ]
    },
    {
        "id": "616a9827eb1f5eec",
        "type": "inject",
        "z": "c5b85ba02dd341cd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 470,
        "y": 140,
        "wires": [
            [
                "4c9440a283e1571d"
            ]
        ]
    },
    {
        "id": "49626285c44b120c",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "Location",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 300,
        "wires": [
            [
                "4f7e020792e13b3e"
            ]
        ]
    },
    {
        "id": "1b35970d6b3b8866",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ProductInstanceUri",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 360,
        "wires": [
            [
                "4f7e020792e13b3e"
            ]
        ]
    },
    {
        "id": "45588ece95603c72",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "NcProg_State_Number",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.topic = \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 80,
        "wires": [
            [
                "d53209daf673a772"
            ]
        ]
    },
    {
        "id": "f2e641938023426e",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "SerialNumber",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 420,
        "wires": [
            [
                "4f7e020792e13b3e"
            ]
        ]
    },
    {
        "id": "65f5c643476bfada",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "SoftwareRevision",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 480,
        "wires": [
            [
                "4f7e020792e13b3e"
            ]
        ]
    },
    {
        "id": "d3b030c4b8ec7328",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "YearOfConstruction",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 540,
        "wires": [
            [
                "4f7e020792e13b3e"
            ]
        ]
    },
    {
        "id": "49c943c2bc0ff135",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "DeviceClass",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 600,
        "wires": [
            [
                "4f7e020792e13b3e"
            ]
        ]
    },
    {
        "id": "b4af0f7e6e698169",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ProductCode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 660,
        "wires": [
            [
                "4f7e020792e13b3e"
            ]
        ]
    },
    {
        "id": "e95c2e46fac789c6",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "Model",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 720,
        "wires": [
            [
                "4f7e020792e13b3e"
            ]
        ]
    },
    {
        "id": "0715a6919d5ad042",
        "type": "comment",
        "z": "c5b85ba02dd341cd",
        "name": "IDENTIFICATION",
        "info": "",
        "x": 200,
        "y": 240,
        "wires": []
    },
    {
        "id": "0cc1e0122eacee66",
        "type": "comment",
        "z": "c5b85ba02dd341cd",
        "name": "TOOLS",
        "info": "",
        "x": 170,
        "y": 800,
        "wires": []
    },
    {
        "id": "b8961182927dee9d",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ControlIdentifierInterpretation",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 800,
        "wires": [
            [
                "5a023d7a86dc1031"
            ]
        ]
    },
    {
        "id": "4802c58a801cf90b",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "Identifier",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 860,
        "wires": [
            [
                "5a023d7a86dc1031"
            ]
        ]
    },
    {
        "id": "2dcd4346b4f5a42c",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ControllIdentifier1",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 920,
        "wires": [
            [
                "5a023d7a86dc1031"
            ]
        ]
    },
    {
        "id": "ee88f401a67b798f",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "Locked",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 980,
        "wires": [
            [
                "5a023d7a86dc1031"
            ]
        ]
    },
    {
        "id": "e855f205bb2bbc0d",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "PlaceNumber",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1040,
        "wires": [
            [
                "5a023d7a86dc1031"
            ]
        ]
    },
    {
        "id": "63a1397f740e4712",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "",
        "func": "if(!msg.payload) {\n    msg.payload = true\n}\nelse {\n    msg.payload = false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 960,
        "wires": [
            [
                "87f080e69feb84c4"
            ]
        ]
    },
    {
        "id": "de1cf231944a6e86",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "Name",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1160,
        "wires": [
            [
                "ba5173406282000a"
            ]
        ]
    },
    {
        "id": "d7d840570f7e1229",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "Id",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1220,
        "wires": [
            [
                "ba5173406282000a"
            ]
        ]
    },
    {
        "id": "d4ee69a3a1aa547e",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "CurrentState",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1280,
        "wires": [
            [
                "ba5173406282000a"
            ]
        ]
    },
    {
        "id": "cc62c02f6e2a6d47",
        "type": "comment",
        "z": "c5b85ba02dd341cd",
        "name": "ACTIVE PROGRAM",
        "info": "",
        "x": 210,
        "y": 1140,
        "wires": []
    },
    {
        "id": "0a94cc4b1ee3633c",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "OperationMode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1380,
        "wires": [
            [
                "85a99f3e09f5f70a"
            ]
        ]
    },
    {
        "id": "bca791a1611cf1af",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "PowerOnDuration",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1440,
        "wires": [
            [
                "85a99f3e09f5f70a"
            ]
        ]
    },
    {
        "id": "7f0deeba989eb54b",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "IsWarmUp",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1500,
        "wires": [
            [
                "85a99f3e09f5f70a"
            ]
        ]
    },
    {
        "id": "40ae03caa6fa1a7c",
        "type": "comment",
        "z": "c5b85ba02dd341cd",
        "name": "MONITORING",
        "info": "",
        "x": 200,
        "y": 1380,
        "wires": []
    },
    {
        "id": "ff21be4e367afc83",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "FeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1560,
        "wires": [
            [
                "85a99f3e09f5f70a"
            ]
        ]
    },
    {
        "id": "3a871c439ce59741",
        "type": "ui_gauge",
        "z": "c5b85ba02dd341cd",
        "name": "",
        "group": "e50fbb89b3424578",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Feed Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1720,
        "y": 1560,
        "wires": []
    },
    {
        "id": "b95d6b22c25ecd32",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ChannelName",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1700,
        "wires": [
            [
                "cb62f142e3c0d3e5"
            ]
        ]
    },
    {
        "id": "94a31864285b8e38",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ChannelMode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1760,
        "wires": [
            [
                "cb62f142e3c0d3e5"
            ]
        ]
    },
    {
        "id": "36b18d25046805e1",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ChannelState",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1820,
        "wires": [
            [
                "cb62f142e3c0d3e5"
            ]
        ]
    },
    {
        "id": "fcaaf33813db6f25",
        "type": "comment",
        "z": "c5b85ba02dd341cd",
        "name": "CHANNEL ",
        "info": "",
        "x": 180,
        "y": 1700,
        "wires": []
    },
    {
        "id": "a803711f04733aad",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ChannelFeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1880,
        "wires": [
            [
                "cb62f142e3c0d3e5"
            ]
        ]
    },
    {
        "id": "df1782aec2f52a2a",
        "type": "ui_gauge",
        "z": "c5b85ba02dd341cd",
        "name": "",
        "group": "8cdc6a4e1802ec70",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Feed Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1720,
        "y": 1880,
        "wires": []
    },
    {
        "id": "532efe3711ac5efc",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ChannelRapidOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1940,
        "wires": [
            [
                "cb62f142e3c0d3e5"
            ]
        ]
    },
    {
        "id": "6cc49f1d8da4367e",
        "type": "ui_gauge",
        "z": "c5b85ba02dd341cd",
        "name": "",
        "group": "8cdc6a4e1802ec70",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Rapid Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1720,
        "y": 1940,
        "wires": []
    },
    {
        "id": "f223aab2d890d42a",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "SpindleName",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2040,
        "wires": [
            [
                "083fd56252e77a55"
            ]
        ]
    },
    {
        "id": "32e8c2dac7e01b9f",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "IsUsedAsAxis",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2100,
        "wires": [
            [
                "083fd56252e77a55"
            ]
        ]
    },
    {
        "id": "2711ec1d99e47415",
        "type": "comment",
        "z": "c5b85ba02dd341cd",
        "name": "SPINDLE",
        "info": "",
        "x": 180,
        "y": 2040,
        "wires": []
    },
    {
        "id": "a188c1b6728a0812",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "IsRotating",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2160,
        "wires": [
            [
                "083fd56252e77a55"
            ]
        ]
    },
    {
        "id": "3d67ad87736aa84f",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "SpindleOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2220,
        "wires": [
            [
                "083fd56252e77a55"
            ]
        ]
    },
    {
        "id": "709f611107d91cbe",
        "type": "ui_gauge",
        "z": "c5b85ba02dd341cd",
        "name": "",
        "group": "c81e83f19613752f",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "SpindleOverride",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1720,
        "y": 2220,
        "wires": []
    },
    {
        "id": "de0a45fd06b7cc13",
        "type": "ui_switch",
        "z": "c5b85ba02dd341cd",
        "name": "IsUsedAsAxis",
        "label": "IsUsedAsAxis",
        "tooltip": "",
        "group": "c81e83f19613752f",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1720,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "fcf6673a9019cc0e",
        "type": "ui_switch",
        "z": "c5b85ba02dd341cd",
        "name": "IsRotating",
        "label": "IsRotating",
        "tooltip": "",
        "group": "c81e83f19613752f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1700,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "80962394cb296f58",
        "type": "ui_statetrail",
        "z": "c5b85ba02dd341cd",
        "group": "9d647bfda66d994a",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "state trail label",
        "states": [
            {
                "state": 1,
                "col": "#009933",
                "t": "num",
                "label": ""
            },
            {
                "state": 2,
                "col": "#17a2b8",
                "t": "num",
                "label": ""
            }
        ],
        "periodLimit": "1",
        "periodLimitUnit": "3600",
        "timeformat": "HH:mm",
        "tickmarks": "4",
        "persist": false,
        "legend": 1,
        "combine": true,
        "blanklabel": "",
        "x": 900,
        "y": 80,
        "wires": [
            [
                "5ab2677ed46679e6"
            ]
        ]
    },
    {
        "id": "ced9a47e55d78d4b",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "Manufacturer",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 220,
        "wires": [
            [
                "838de4faa6874c52"
            ]
        ]
    },
    {
        "id": "ba4ef19406527c74",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "Location",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 280,
        "wires": [
            [
                "cf4a39ce604fc0c2"
            ]
        ]
    },
    {
        "id": "0194f7e548fc93c7",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ProductInstanceUri",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 340,
        "wires": [
            [
                "a933e670c57e0d83"
            ]
        ]
    },
    {
        "id": "9d54b297d8521c8e",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "SerialNumber",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 400,
        "wires": [
            [
                "0558f0940f7569e6"
            ]
        ]
    },
    {
        "id": "c0bef109eabced02",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "SoftwareRevision",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 460,
        "wires": [
            [
                "0a2a553da0396e79"
            ]
        ]
    },
    {
        "id": "ec076be56c533411",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "YearOfConstruction",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 520,
        "wires": [
            [
                "7872c4910a43ae70"
            ]
        ]
    },
    {
        "id": "8939854f7078496d",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "DeviceClass",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 580,
        "wires": [
            [
                "5fd9be10faefce08"
            ]
        ]
    },
    {
        "id": "1eec25912f04af6b",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ProductCode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 640,
        "wires": [
            [
                "945fcb7fe793727c"
            ]
        ]
    },
    {
        "id": "b04d4e4fe52dff32",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "Model",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 700,
        "wires": [
            [
                "0247dcabfd4284bf"
            ]
        ]
    },
    {
        "id": "f2e314421f7a2b02",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ControlIdentifierInterpretation",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 780,
        "wires": [
            [
                "9c1ec6fe5898f16b"
            ]
        ]
    },
    {
        "id": "2896251d510b8653",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "Identifier",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 840,
        "wires": [
            [
                "8d4a2edb7993acff"
            ]
        ]
    },
    {
        "id": "1b6e90b05354d217",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ControllIdentifier1",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 900,
        "wires": [
            [
                "234446d342a3441b"
            ]
        ]
    },
    {
        "id": "91a6f47df4841d9f",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "Locked",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 960,
        "wires": [
            [
                "63a1397f740e4712"
            ]
        ]
    },
    {
        "id": "d5ae44a8023bac68",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "PlaceNumber",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1020,
        "wires": [
            [
                "dc41e87be183e474"
            ]
        ]
    },
    {
        "id": "007c8e52f61871dd",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "Name",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1140,
        "wires": [
            [
                "afd6087ca2e92e35"
            ]
        ]
    },
    {
        "id": "f1e3ab963738e6bb",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "Id",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1200,
        "wires": [
            [
                "583892cf5aafd284"
            ]
        ]
    },
    {
        "id": "3b07a87d672fd061",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "CurrentState",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1260,
        "wires": [
            [
                "9af6c33be8584272"
            ]
        ]
    },
    {
        "id": "6e6dc176c2008c8b",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "OperationMode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1380,
        "wires": [
            [
                "83b570714610ebc2"
            ]
        ]
    },
    {
        "id": "4c9711da450187b7",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "PowerOnDuration",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1440,
        "wires": [
            [
                "8ce233fba8f5a43d"
            ]
        ]
    },
    {
        "id": "2508d99b7326e0eb",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "IsWarmUp",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1500,
        "wires": [
            [
                "16d229e27ea49670"
            ]
        ]
    },
    {
        "id": "650b68ecbd2c5da0",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "FeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1560,
        "wires": [
            [
                "3a871c439ce59741"
            ]
        ]
    },
    {
        "id": "e6dc01e5e37c7e4f",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ChannelName",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1700,
        "wires": [
            [
                "ff4efe6de277e3e8"
            ]
        ]
    },
    {
        "id": "085a2e874ceb157c",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ChannelMode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1760,
        "wires": [
            [
                "d9e55461ab764e3a"
            ]
        ]
    },
    {
        "id": "5f388f8002b65c1e",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ChannelState",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1820,
        "wires": [
            [
                "b96645f87c009a2c"
            ]
        ]
    },
    {
        "id": "8d6c3ce3ba7897be",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ChannelFeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1880,
        "wires": [
            [
                "df1782aec2f52a2a"
            ]
        ]
    },
    {
        "id": "8ab286a631b5fd74",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "ChannelRapidOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1940,
        "wires": [
            [
                "6cc49f1d8da4367e"
            ]
        ]
    },
    {
        "id": "68805d9cbd25a637",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "IsUsedAsAxis",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 2100,
        "wires": [
            [
                "de0a45fd06b7cc13"
            ]
        ]
    },
    {
        "id": "b068c519ffc65ed6",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "IsRotating",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 2160,
        "wires": [
            [
                "fcf6673a9019cc0e"
            ]
        ]
    },
    {
        "id": "9fb98acd4556057b",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "SpindleOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 2220,
        "wires": [
            [
                "709f611107d91cbe"
            ]
        ]
    },
    {
        "id": "5b3444faa4dc79e3",
        "type": "inject",
        "z": "c5b85ba02dd341cd",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 920,
        "wires": [
            [
                "8e3dbdfedfab36eb"
            ]
        ]
    },
    {
        "id": "1951b4db90519a44",
        "type": "inject",
        "z": "c5b85ba02dd341cd",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.7",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1220,
        "wires": [
            [
                "ff1b27a76593e5f6"
            ]
        ]
    },
    {
        "id": "7e41f5924b251821",
        "type": "inject",
        "z": "c5b85ba02dd341cd",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1460,
        "wires": [
            [
                "31c212fc6cc89957"
            ]
        ]
    },
    {
        "id": "9a28a820a9ddcb5a",
        "type": "inject",
        "z": "c5b85ba02dd341cd",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.3",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1760,
        "wires": [
            [
                "68633662a63adfd3"
            ]
        ]
    },
    {
        "id": "dd6379bfe489bde8",
        "type": "inject",
        "z": "c5b85ba02dd341cd",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.6",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 2100,
        "wires": [
            [
                "ffdecc2606a3731b"
            ]
        ]
    },
    {
        "id": "d53209daf673a772",
        "type": "OpcUa-Client",
        "z": "c5b85ba02dd341cd",
        "endpoint": "9ffe9b2dd3eba1b3",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 720,
        "y": 80,
        "wires": [
            [
                "80962394cb296f58"
            ]
        ]
    },
    {
        "id": "c03d2d16c2232720",
        "type": "OpcUa-Client",
        "z": "c5b85ba02dd341cd",
        "endpoint": "9ffe9b2dd3eba1b3",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "4",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 1140,
        "y": 1480,
        "wires": [
            [
                "9bc978410c6cf13e"
            ]
        ]
    },
    {
        "id": "e86d3f97ca800131",
        "type": "join",
        "z": "c5b85ba02dd341cd",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "9",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 480,
        "wires": [
            [
                "c03d2d16c2232720"
            ]
        ]
    },
    {
        "id": "1beda408df658dbb",
        "type": "join",
        "z": "c5b85ba02dd341cd",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 920,
        "wires": [
            [
                "c03d2d16c2232720"
            ]
        ]
    },
    {
        "id": "ebeffd6b903d1eb8",
        "type": "join",
        "z": "c5b85ba02dd341cd",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 1220,
        "wires": [
            [
                "c03d2d16c2232720"
            ]
        ]
    },
    {
        "id": "b0dedce336c63be6",
        "type": "join",
        "z": "c5b85ba02dd341cd",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 1460,
        "wires": [
            [
                "c03d2d16c2232720"
            ]
        ]
    },
    {
        "id": "ea7814b5ae3012c7",
        "type": "join",
        "z": "c5b85ba02dd341cd",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 1760,
        "wires": [
            [
                "c03d2d16c2232720"
            ]
        ]
    },
    {
        "id": "550aea101899ebd1",
        "type": "join",
        "z": "c5b85ba02dd341cd",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 2100,
        "wires": [
            [
                "c03d2d16c2232720"
            ]
        ]
    },
    {
        "id": "10b190c7edcd1ed5",
        "type": "ui_text",
        "z": "c5b85ba02dd341cd",
        "group": "c81e83f19613752f",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "SpindleName",
        "label": "Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 2020,
        "wires": []
    },
    {
        "id": "7b791016cd33953a",
        "type": "function",
        "z": "c5b85ba02dd341cd",
        "name": "SpindleName",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 2020,
        "wires": [
            [
                "10b190c7edcd1ed5"
            ]
        ]
    },
    {
        "id": "25c37506d46c3587",
        "type": "inject",
        "z": "0b02582e5b3c638a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "4",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 60,
        "wires": [
            [
                "7285069e8a7160a0"
            ]
        ]
    },
    {
        "id": "ad9c45fc99535fad",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "a7780d24b9a208ea",
        "order": 7,
        "width": "6",
        "height": "2",
        "name": "Location",
        "label": "Location",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 260,
        "wires": []
    },
    {
        "id": "9ed53d701edc0ad2",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "a7780d24b9a208ea",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Manufacturer",
        "label": "Manufacturer",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1710,
        "y": 200,
        "wires": []
    },
    {
        "id": "2a15500ee7c0235b",
        "type": "ui_template",
        "z": "0b02582e5b3c638a",
        "group": "73f60dac49812159",
        "name": "MachinePicture",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div height=\"180\" style=\"height: 180px;\">\n    <img src=\"https://dashboard.umati.app/userImages/default/machine.jpg\" width=\"300\"><br/>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 240,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "8a32b93d14039125",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "73f60dac49812159",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "ProductInstanceUri",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1730,
        "y": 320,
        "wires": []
    },
    {
        "id": "d7d04aeb7432c80a",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "73f60dac49812159",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status Overview",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1080,
        "y": 60,
        "wires": []
    },
    {
        "id": "35869573eccbd4a8",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "a7780d24b9a208ea",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Serial Number",
        "label": "Serial Number",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 380,
        "wires": []
    },
    {
        "id": "897011eebaa21669",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "a7780d24b9a208ea",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Software Version",
        "label": "Software Version",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1730,
        "y": 440,
        "wires": []
    },
    {
        "id": "8ccf2a5319f93472",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "a7780d24b9a208ea",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "Build Year",
        "label": "Build Year",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 500,
        "wires": []
    },
    {
        "id": "2106fbe2cc11b9b6",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "a7780d24b9a208ea",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "Device Class",
        "label": "Device Class",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1710,
        "y": 560,
        "wires": []
    },
    {
        "id": "f4f8f51fbdf15bb6",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "a7780d24b9a208ea",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "Product Code",
        "label": "Product Code",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 620,
        "wires": []
    },
    {
        "id": "b5f55937a96199f5",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "73f60dac49812159",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Model",
        "label": "",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1690,
        "y": 680,
        "wires": []
    },
    {
        "id": "a74c0b69e52ca710",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "6b129930ed7932fc",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "Control Identifier Interpretaton",
        "label": "Control Identifier Interpretaton",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1830,
        "y": 760,
        "wires": []
    },
    {
        "id": "8c13eca7479a666f",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "6b129930ed7932fc",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Identifier",
        "label": "Identifier",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 820,
        "wires": []
    },
    {
        "id": "f24949d8586a407b",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "6b129930ed7932fc",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Control Identifier",
        "label": "Control Identifier",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 880,
        "wires": []
    },
    {
        "id": "bb36c592e45eb4e3",
        "type": "ui_switch",
        "z": "0b02582e5b3c638a",
        "name": "Available",
        "label": "Available",
        "tooltip": "",
        "group": "6b129930ed7932fc",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1860,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "d0321391e5c081bb",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "6b129930ed7932fc",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Place Number",
        "label": "Place Number",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 1000,
        "wires": []
    },
    {
        "id": "d43844856080d929",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "3f3ed654d045cc2d",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Name",
        "label": "Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1690,
        "y": 1120,
        "wires": []
    },
    {
        "id": "ae9a845badcb7dbb",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "3f3ed654d045cc2d",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "StateId",
        "label": "StateId",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 1180,
        "wires": []
    },
    {
        "id": "b4cd314e47526074",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "3f3ed654d045cc2d",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Status",
        "label": "Status",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1690,
        "y": 1240,
        "wires": []
    },
    {
        "id": "7ce9e40a0319f2e1",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "adc746dccfe6154d",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Operation Mode",
        "label": "Operation Mode",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 1360,
        "wires": []
    },
    {
        "id": "e8c9dd373ac8bc32",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "adc746dccfe6154d",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Power On Duration",
        "label": "Power On Duration",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1730,
        "y": 1420,
        "wires": []
    },
    {
        "id": "24a7f9745f1ec984",
        "type": "ui_switch",
        "z": "0b02582e5b3c638a",
        "name": "Warumup",
        "label": "Warumup",
        "tooltip": "",
        "group": "adc746dccfe6154d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1700,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "e403289b000dc93d",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "1a7dbd60894aadfb",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Channel Name",
        "label": "Channel Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 1680,
        "wires": []
    },
    {
        "id": "14e7f5c1e2e444c4",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "1a7dbd60894aadfb",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Channel Mode",
        "label": "Channel Mode",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 1740,
        "wires": []
    },
    {
        "id": "5a7d77bc6b4bba5c",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "1a7dbd60894aadfb",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Channel State",
        "label": "Channel State",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 1800,
        "wires": []
    },
    {
        "id": "e14276fdf56b4db2",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "SetNodeIds",
        "func": "flow.set('NameSpace',8);\nflow.set('NcProg_State_Number',6009);\n\n// Identification\nflow.set('Manufacturer',6027);\nflow.set('Location',6034);\nflow.set('ProductInstanceUri',6026);\nflow.set('SerialNumber',6028);\nflow.set('YearOfConstruction',6061);\nflow.set('DeviceClass',6031);\nflow.set('ProductCode',6038);\nflow.set('Model',6036);\nflow.set('SoftwareRevision',6060);\n\n// Tools\nflow.set('ControlIdentifierInterpretation',6019);\nflow.set('ControllIdentifier1',6018);\nflow.set('Identifier',6046);\nflow.set('Locked',6020);\nflow.set('PlaceNumber',6048);\n\n// Active Program\nflow.set('Name',6005);\nflow.set('Id',6009);\nflow.set('CurrentState',6007);\n\n// Monitoring \nflow.set('OperationMode',6004);\nflow.set('PowerOnDuration',6095);\nflow.set('IsWarmUp',6099);\nflow.set('FeedOverride',6096);\n\n// Channel \nflow.set('ChannelName',6055);\nflow.set('ChannelMode',6050);\nflow.set('ChannelState',6051);\nflow.set('ChannelFeedOverride',6052);\nflow.set('ChannelRapidOverride',6056);\n\n// Spindle \nflow.set('SpindleName',6041);\nflow.set('IsUsedAsAxis',6042);\nflow.set('IsRotating',6040);\nflow.set('SpindleOverride',6043);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "8c636e477e6547ca",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "Manufacturer",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nmsg.options = \"options\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 220,
        "wires": [
            [
                "cfda5e2fc7ab6cd2"
            ]
        ]
    },
    {
        "id": "8d2181102c8c5a97",
        "type": "inject",
        "z": "0b02582e5b3c638a",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "f4a0864d05ea28a7"
            ]
        ]
    },
    {
        "id": "b20497c13cc408fa",
        "type": "inject",
        "z": "0b02582e5b3c638a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 470,
        "y": 120,
        "wires": [
            [
                "e14276fdf56b4db2"
            ]
        ]
    },
    {
        "id": "2a0e70a6097f1489",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "Location",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 280,
        "wires": [
            [
                "cfda5e2fc7ab6cd2"
            ]
        ]
    },
    {
        "id": "b2a8fa43df7bc87d",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ProductInstanceUri",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 340,
        "wires": [
            [
                "cfda5e2fc7ab6cd2"
            ]
        ]
    },
    {
        "id": "7285069e8a7160a0",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "NcProg_State_Number",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.topic = \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 60,
        "wires": [
            [
                "7d0492d8c4b5e6e7"
            ]
        ]
    },
    {
        "id": "86431beaebe8566a",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "SerialNumber",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 400,
        "wires": [
            [
                "cfda5e2fc7ab6cd2"
            ]
        ]
    },
    {
        "id": "54fc70a582739fe4",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "SoftwareRevision",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 460,
        "wires": [
            [
                "cfda5e2fc7ab6cd2"
            ]
        ]
    },
    {
        "id": "8c585f2b2fd6e52b",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "YearOfConstruction",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 520,
        "wires": [
            [
                "cfda5e2fc7ab6cd2"
            ]
        ]
    },
    {
        "id": "94e6c58d8e206ee6",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "DeviceClass",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 580,
        "wires": [
            [
                "cfda5e2fc7ab6cd2"
            ]
        ]
    },
    {
        "id": "417819d9f5417acb",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ProductCode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 640,
        "wires": [
            [
                "cfda5e2fc7ab6cd2"
            ]
        ]
    },
    {
        "id": "9efca17efa5e3953",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "Model",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 700,
        "wires": [
            [
                "cfda5e2fc7ab6cd2"
            ]
        ]
    },
    {
        "id": "05bb01ed3dda54a8",
        "type": "comment",
        "z": "0b02582e5b3c638a",
        "name": "IDENTIFICATION",
        "info": "",
        "x": 200,
        "y": 220,
        "wires": []
    },
    {
        "id": "030f4bad27839d32",
        "type": "comment",
        "z": "0b02582e5b3c638a",
        "name": "TOOLS",
        "info": "",
        "x": 170,
        "y": 780,
        "wires": []
    },
    {
        "id": "b6644de8de69beb6",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ControlIdentifierInterpretation",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 780,
        "wires": [
            [
                "32eb3a8d83e2d3f3"
            ]
        ]
    },
    {
        "id": "4bb8c9364c5bec18",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "Identifier",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 840,
        "wires": [
            [
                "32eb3a8d83e2d3f3"
            ]
        ]
    },
    {
        "id": "43278a42f74f4961",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ControllIdentifier1",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 900,
        "wires": [
            [
                "32eb3a8d83e2d3f3"
            ]
        ]
    },
    {
        "id": "66f6d26a688021c9",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "Locked",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 960,
        "wires": [
            [
                "32eb3a8d83e2d3f3"
            ]
        ]
    },
    {
        "id": "a9c15348f258b9ff",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "PlaceNumber",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1020,
        "wires": [
            [
                "32eb3a8d83e2d3f3"
            ]
        ]
    },
    {
        "id": "1d4150d62c0d60d4",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "",
        "func": "if(!msg.payload) {\n    msg.payload = true\n}\nelse {\n    msg.payload = false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 940,
        "wires": [
            [
                "bb36c592e45eb4e3"
            ]
        ]
    },
    {
        "id": "2f03a6b4ba1880bd",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "Name",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1140,
        "wires": [
            [
                "0a6badfe2cafccde"
            ]
        ]
    },
    {
        "id": "649d6cdf9385b977",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "Id",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1200,
        "wires": [
            [
                "0a6badfe2cafccde"
            ]
        ]
    },
    {
        "id": "ea13baeede7ae538",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "CurrentState",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1260,
        "wires": [
            [
                "0a6badfe2cafccde"
            ]
        ]
    },
    {
        "id": "bc17fb81aa2fc9f1",
        "type": "comment",
        "z": "0b02582e5b3c638a",
        "name": "ACTIVE PROGRAM",
        "info": "",
        "x": 210,
        "y": 1120,
        "wires": []
    },
    {
        "id": "a821eb42e8f4fa02",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "OperationMode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1360,
        "wires": [
            [
                "9647be569ae7fc78"
            ]
        ]
    },
    {
        "id": "a5e02f3959417644",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "PowerOnDuration",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1420,
        "wires": [
            [
                "9647be569ae7fc78"
            ]
        ]
    },
    {
        "id": "80565cd6df759808",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "IsWarmUp",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1480,
        "wires": [
            [
                "9647be569ae7fc78"
            ]
        ]
    },
    {
        "id": "82d954a19633c3e4",
        "type": "comment",
        "z": "0b02582e5b3c638a",
        "name": "MONITORING",
        "info": "",
        "x": 200,
        "y": 1360,
        "wires": []
    },
    {
        "id": "fe9c83507f3ade7f",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "FeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1540,
        "wires": [
            [
                "9647be569ae7fc78"
            ]
        ]
    },
    {
        "id": "ca37e20ab2224e14",
        "type": "ui_gauge",
        "z": "0b02582e5b3c638a",
        "name": "",
        "group": "adc746dccfe6154d",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Feed Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1720,
        "y": 1540,
        "wires": []
    },
    {
        "id": "650e6d14a87344af",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ChannelName",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1680,
        "wires": [
            [
                "1f3ad6eb8edca5bc"
            ]
        ]
    },
    {
        "id": "60381e5507ca2673",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ChannelMode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1740,
        "wires": [
            [
                "1f3ad6eb8edca5bc"
            ]
        ]
    },
    {
        "id": "b64540d7a9c12f3b",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ChannelState",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1800,
        "wires": [
            [
                "1f3ad6eb8edca5bc"
            ]
        ]
    },
    {
        "id": "eba66687f0fae8f5",
        "type": "comment",
        "z": "0b02582e5b3c638a",
        "name": "CHANNEL ",
        "info": "",
        "x": 180,
        "y": 1680,
        "wires": []
    },
    {
        "id": "d9f6643ba6a1c38a",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ChannelFeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1860,
        "wires": [
            [
                "1f3ad6eb8edca5bc"
            ]
        ]
    },
    {
        "id": "14e9c0398851c8b5",
        "type": "ui_gauge",
        "z": "0b02582e5b3c638a",
        "name": "",
        "group": "1a7dbd60894aadfb",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Feed Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1720,
        "y": 1860,
        "wires": []
    },
    {
        "id": "4c394d91b745c30a",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ChannelRapidOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1920,
        "wires": [
            [
                "1f3ad6eb8edca5bc"
            ]
        ]
    },
    {
        "id": "1efcdcaf566eb7cd",
        "type": "ui_gauge",
        "z": "0b02582e5b3c638a",
        "name": "",
        "group": "1a7dbd60894aadfb",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Rapid Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1720,
        "y": 1920,
        "wires": []
    },
    {
        "id": "874bae81338c9f94",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "SpindleName",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2020,
        "wires": [
            [
                "21a65eb3b7faf747"
            ]
        ]
    },
    {
        "id": "77f3856126c239d3",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "IsUsedAsAxis",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2080,
        "wires": [
            [
                "21a65eb3b7faf747"
            ]
        ]
    },
    {
        "id": "1e35b52969bc4861",
        "type": "comment",
        "z": "0b02582e5b3c638a",
        "name": "SPINDLE",
        "info": "",
        "x": 180,
        "y": 2020,
        "wires": []
    },
    {
        "id": "4f7a59ac0b5559c1",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "IsRotating",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2140,
        "wires": [
            [
                "21a65eb3b7faf747"
            ]
        ]
    },
    {
        "id": "bab0a410e385796f",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "SpindleOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2200,
        "wires": [
            [
                "21a65eb3b7faf747"
            ]
        ]
    },
    {
        "id": "6a90930a85d79cbb",
        "type": "ui_gauge",
        "z": "0b02582e5b3c638a",
        "name": "",
        "group": "60c18c303810d0bd",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "SpindleOverride",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1720,
        "y": 2200,
        "wires": []
    },
    {
        "id": "75213eda98b87fd4",
        "type": "ui_switch",
        "z": "0b02582e5b3c638a",
        "name": "IsUsedAsAxis",
        "label": "IsUsedAsAxis",
        "tooltip": "",
        "group": "60c18c303810d0bd",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1720,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "6bfd0987b14753a8",
        "type": "ui_switch",
        "z": "0b02582e5b3c638a",
        "name": "IsRotating",
        "label": "IsRotating",
        "tooltip": "",
        "group": "60c18c303810d0bd",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1700,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "63c1b708edec1c5a",
        "type": "ui_statetrail",
        "z": "0b02582e5b3c638a",
        "group": "73f60dac49812159",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "state trail label",
        "states": [
            {
                "state": 1,
                "col": "#009933",
                "t": "num",
                "label": ""
            },
            {
                "state": 2,
                "col": "#17a2b8",
                "t": "num",
                "label": ""
            }
        ],
        "periodLimit": "1",
        "periodLimitUnit": "3600",
        "timeformat": "HH:mm",
        "tickmarks": "4",
        "persist": false,
        "legend": 1,
        "combine": true,
        "blanklabel": "",
        "x": 900,
        "y": 60,
        "wires": [
            [
                "d7d04aeb7432c80a"
            ]
        ]
    },
    {
        "id": "27df21e2e0e13f55",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "Manufacturer",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 200,
        "wires": [
            [
                "9ed53d701edc0ad2"
            ]
        ]
    },
    {
        "id": "92276c9609e4cb7a",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "Location",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 260,
        "wires": [
            [
                "ad9c45fc99535fad"
            ]
        ]
    },
    {
        "id": "f8c853e0dab6dc84",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ProductInstanceUri",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 320,
        "wires": [
            [
                "8a32b93d14039125"
            ]
        ]
    },
    {
        "id": "c87132e7510ea377",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "SerialNumber",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 380,
        "wires": [
            [
                "35869573eccbd4a8"
            ]
        ]
    },
    {
        "id": "b767369cf77c6180",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "SoftwareRevision",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 440,
        "wires": [
            [
                "897011eebaa21669"
            ]
        ]
    },
    {
        "id": "519c4076571059fb",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "YearOfConstruction",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 500,
        "wires": [
            [
                "8ccf2a5319f93472"
            ]
        ]
    },
    {
        "id": "9fec68820eab586c",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "DeviceClass",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 560,
        "wires": [
            [
                "2106fbe2cc11b9b6"
            ]
        ]
    },
    {
        "id": "64a0aa4eaabf1385",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ProductCode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 620,
        "wires": [
            [
                "f4f8f51fbdf15bb6"
            ]
        ]
    },
    {
        "id": "35b5254208d42d06",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "Model",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 680,
        "wires": [
            [
                "b5f55937a96199f5"
            ]
        ]
    },
    {
        "id": "b5a14855948ad826",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ControlIdentifierInterpretation",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 760,
        "wires": [
            [
                "a74c0b69e52ca710"
            ]
        ]
    },
    {
        "id": "4d49166eed3e3b01",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "Identifier",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 820,
        "wires": [
            [
                "8c13eca7479a666f"
            ]
        ]
    },
    {
        "id": "3784deaedb6dc871",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ControllIdentifier1",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 880,
        "wires": [
            [
                "f24949d8586a407b"
            ]
        ]
    },
    {
        "id": "ad45489448f1e8c6",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "Locked",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 940,
        "wires": [
            [
                "1d4150d62c0d60d4"
            ]
        ]
    },
    {
        "id": "63f83b6b8e09c057",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "PlaceNumber",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1000,
        "wires": [
            [
                "d0321391e5c081bb"
            ]
        ]
    },
    {
        "id": "38fd229272f7a2ac",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "Name",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1120,
        "wires": [
            [
                "d43844856080d929"
            ]
        ]
    },
    {
        "id": "ac6a6a193274c6d1",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "Id",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1180,
        "wires": [
            [
                "ae9a845badcb7dbb"
            ]
        ]
    },
    {
        "id": "80d61e76932f2b94",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "CurrentState",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1240,
        "wires": [
            [
                "b4cd314e47526074"
            ]
        ]
    },
    {
        "id": "e2efaf040fa1f8bf",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "OperationMode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1360,
        "wires": [
            [
                "7ce9e40a0319f2e1"
            ]
        ]
    },
    {
        "id": "379dd2e3f4d755bf",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "PowerOnDuration",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1420,
        "wires": [
            [
                "e8c9dd373ac8bc32"
            ]
        ]
    },
    {
        "id": "58e9441e95b1b3ea",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "IsWarmUp",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1480,
        "wires": [
            [
                "24a7f9745f1ec984"
            ]
        ]
    },
    {
        "id": "264ccb9fa130683b",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "FeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1540,
        "wires": [
            [
                "ca37e20ab2224e14"
            ]
        ]
    },
    {
        "id": "81f9f155dbd71ac6",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ChannelName",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1680,
        "wires": [
            [
                "e403289b000dc93d"
            ]
        ]
    },
    {
        "id": "147b6ce05a7e68c2",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ChannelMode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1740,
        "wires": [
            [
                "14e7f5c1e2e444c4"
            ]
        ]
    },
    {
        "id": "f1b028b9e055551a",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ChannelState",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1800,
        "wires": [
            [
                "5a7d77bc6b4bba5c"
            ]
        ]
    },
    {
        "id": "e4bf37eb0c3aeb45",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ChannelFeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1860,
        "wires": [
            [
                "14e9c0398851c8b5"
            ]
        ]
    },
    {
        "id": "44285fc2e67bd716",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "ChannelRapidOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1920,
        "wires": [
            [
                "1efcdcaf566eb7cd"
            ]
        ]
    },
    {
        "id": "d20270dfb4bcea61",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "IsUsedAsAxis",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 2080,
        "wires": [
            [
                "75213eda98b87fd4"
            ]
        ]
    },
    {
        "id": "d6e65e9e6b6d8337",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "IsRotating",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 2140,
        "wires": [
            [
                "6bfd0987b14753a8"
            ]
        ]
    },
    {
        "id": "1a48c1738d376a06",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "SpindleOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 2200,
        "wires": [
            [
                "6a90930a85d79cbb"
            ]
        ]
    },
    {
        "id": "493dff70677c359c",
        "type": "inject",
        "z": "0b02582e5b3c638a",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 900,
        "wires": [
            [
                "81425f16930ee860"
            ]
        ]
    },
    {
        "id": "cc25f28437c2a301",
        "type": "inject",
        "z": "0b02582e5b3c638a",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.7",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1200,
        "wires": [
            [
                "4f1ebe63de6b031a"
            ]
        ]
    },
    {
        "id": "2f3f7ce0115ec043",
        "type": "inject",
        "z": "0b02582e5b3c638a",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1440,
        "wires": [
            [
                "308523e8dea4b30f"
            ]
        ]
    },
    {
        "id": "4f0a7e90ce2ac957",
        "type": "inject",
        "z": "0b02582e5b3c638a",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.3",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1740,
        "wires": [
            [
                "566470daf9b5eaff"
            ]
        ]
    },
    {
        "id": "38aefd0508cdfd1e",
        "type": "inject",
        "z": "0b02582e5b3c638a",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.6",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 2080,
        "wires": [
            [
                "f2251c97a285f8f3"
            ]
        ]
    },
    {
        "id": "7d0492d8c4b5e6e7",
        "type": "OpcUa-Client",
        "z": "0b02582e5b3c638a",
        "endpoint": "9ffe9b2dd3eba1b3",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 720,
        "y": 60,
        "wires": [
            [
                "63c1b708edec1c5a"
            ]
        ]
    },
    {
        "id": "18ec3628081b1940",
        "type": "OpcUa-Client",
        "z": "0b02582e5b3c638a",
        "endpoint": "9ffe9b2dd3eba1b3",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "4",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 1140,
        "y": 1460,
        "wires": [
            [
                "2d893d1c954aeee4"
            ]
        ]
    },
    {
        "id": "95031c4547c66fe6",
        "type": "join",
        "z": "0b02582e5b3c638a",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "9",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 460,
        "wires": [
            [
                "18ec3628081b1940"
            ]
        ]
    },
    {
        "id": "1365ed9dcf670a45",
        "type": "join",
        "z": "0b02582e5b3c638a",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 900,
        "wires": [
            [
                "18ec3628081b1940"
            ]
        ]
    },
    {
        "id": "9e953d86c298edf3",
        "type": "join",
        "z": "0b02582e5b3c638a",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 1200,
        "wires": [
            [
                "18ec3628081b1940"
            ]
        ]
    },
    {
        "id": "2964fbcd40c186bd",
        "type": "join",
        "z": "0b02582e5b3c638a",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 1440,
        "wires": [
            [
                "18ec3628081b1940"
            ]
        ]
    },
    {
        "id": "a6aa8225f9e156f7",
        "type": "join",
        "z": "0b02582e5b3c638a",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 1740,
        "wires": [
            [
                "18ec3628081b1940"
            ]
        ]
    },
    {
        "id": "0547232afc22d12b",
        "type": "join",
        "z": "0b02582e5b3c638a",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 2080,
        "wires": [
            [
                "18ec3628081b1940"
            ]
        ]
    },
    {
        "id": "2e05f5c67bf12e85",
        "type": "ui_text",
        "z": "0b02582e5b3c638a",
        "group": "60c18c303810d0bd",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "SpindleName",
        "label": "Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1720,
        "y": 2000,
        "wires": []
    },
    {
        "id": "c5b8b497699a6c36",
        "type": "function",
        "z": "0b02582e5b3c638a",
        "name": "SpindleName",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 2000,
        "wires": [
            [
                "2e05f5c67bf12e85"
            ]
        ]
    },
    {
        "id": "73b628dc7650b70f",
        "type": "inject",
        "z": "ca5070e74bf8c696",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "4",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "1597542d9c9947c3"
            ]
        ]
    },
    {
        "id": "0edeb1de83c473a3",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "1d6b14d2ffc6e4b9",
        "order": 7,
        "width": "6",
        "height": "2",
        "name": "Location",
        "label": "Location",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1680,
        "y": 280,
        "wires": []
    },
    {
        "id": "4749a354da710af4",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "1d6b14d2ffc6e4b9",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Manufacturer",
        "label": "Manufacturer",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1690,
        "y": 220,
        "wires": []
    },
    {
        "id": "c38fa740b22b3bb4",
        "type": "ui_template",
        "z": "ca5070e74bf8c696",
        "group": "fdfab30feea82e24",
        "name": "MachinePicture",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div height=\"180\" style=\"height: 180px;\">\n    <img src=\"https://dashboard.umati.app/userImages/default/machine.jpg\" width=\"300\"><br/>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 220,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "b91af9ba8610ef70",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "fdfab30feea82e24",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "ProductInstanceUri",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1710,
        "y": 340,
        "wires": []
    },
    {
        "id": "0791c30931d85420",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "fdfab30feea82e24",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status Overview",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1060,
        "y": 80,
        "wires": []
    },
    {
        "id": "22b2b54474d086d1",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "1d6b14d2ffc6e4b9",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Serial Number",
        "label": "Serial Number",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 400,
        "wires": []
    },
    {
        "id": "732d2d07f4ce844e",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "1d6b14d2ffc6e4b9",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Software Version",
        "label": "Software Version",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1710,
        "y": 460,
        "wires": []
    },
    {
        "id": "552f92c2eab1df1e",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "1d6b14d2ffc6e4b9",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "Build Year",
        "label": "Build Year",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1680,
        "y": 520,
        "wires": []
    },
    {
        "id": "afb7c78cced4eade",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "1d6b14d2ffc6e4b9",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "Device Class",
        "label": "Device Class",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1690,
        "y": 580,
        "wires": []
    },
    {
        "id": "f0e13d02e320b145",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "1d6b14d2ffc6e4b9",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "Product Code",
        "label": "Product Code",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 640,
        "wires": []
    },
    {
        "id": "3a178806c00a8d0a",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "fdfab30feea82e24",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Model",
        "label": "",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1670,
        "y": 700,
        "wires": []
    },
    {
        "id": "1102b08c3383b6de",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "c89cac8f94258f0c",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "Control Identifier Interpretaton",
        "label": "Control Identifier Interpretaton",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1810,
        "y": 780,
        "wires": []
    },
    {
        "id": "f98ed19156170db7",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "c89cac8f94258f0c",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Identifier",
        "label": "Identifier",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1680,
        "y": 840,
        "wires": []
    },
    {
        "id": "44bdf66a8bc4190f",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "c89cac8f94258f0c",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Control Identifier",
        "label": "Control Identifier",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 900,
        "wires": []
    },
    {
        "id": "19aec752f088e8cd",
        "type": "ui_switch",
        "z": "ca5070e74bf8c696",
        "name": "Available",
        "label": "Available",
        "tooltip": "",
        "group": "c89cac8f94258f0c",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1840,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "adebd9d44c306f92",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "c89cac8f94258f0c",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Place Number",
        "label": "Place Number",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 1020,
        "wires": []
    },
    {
        "id": "f09a882994335d04",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "c6eb19d0acf1530f",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Name",
        "label": "Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1670,
        "y": 1140,
        "wires": []
    },
    {
        "id": "592f739312a04539",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "c6eb19d0acf1530f",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "StateId",
        "label": "StateId",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1680,
        "y": 1200,
        "wires": []
    },
    {
        "id": "a72472c7ec4784d8",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "c6eb19d0acf1530f",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Status",
        "label": "Status",
        "format": "{{msg.payload.text}}",
        "layout": "row-left",
        "className": "",
        "x": 1670,
        "y": 1260,
        "wires": []
    },
    {
        "id": "7030acaa50fd89a2",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "f2de600d54b0d4c9",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Operation Mode",
        "label": "Operation Mode",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 1380,
        "wires": []
    },
    {
        "id": "9473a417440e46a4",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "f2de600d54b0d4c9",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Power On Duration",
        "label": "Power On Duration",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1710,
        "y": 1440,
        "wires": []
    },
    {
        "id": "aab42d513e7b243a",
        "type": "ui_switch",
        "z": "ca5070e74bf8c696",
        "name": "Warumup",
        "label": "Warumup",
        "tooltip": "",
        "group": "f2de600d54b0d4c9",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1680,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "099b32ec27b6893c",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "f41d0189b65bc96b",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Channel Name",
        "label": "Channel Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 1700,
        "wires": []
    },
    {
        "id": "6d619d507beae3e1",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "f41d0189b65bc96b",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "Channel Mode",
        "label": "Channel Mode",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 1760,
        "wires": []
    },
    {
        "id": "028260731002b489",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "f41d0189b65bc96b",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Channel State",
        "label": "Channel State",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 1820,
        "wires": []
    },
    {
        "id": "e90797e80da2bc05",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "SetNodeIds",
        "func": "flow.set('NameSpace',12);\nflow.set('NcProg_State_Number',6009);\n\n// Identification\nflow.set('Manufacturer',6027);\nflow.set('Location',6034);\nflow.set('ProductInstanceUri',6026);\nflow.set('SerialNumber',6028);\nflow.set('YearOfConstruction',6061);\nflow.set('DeviceClass',6031);\nflow.set('ProductCode',6038);\nflow.set('Model',6036);\nflow.set('SoftwareRevision',6060);\n\n// Tools\nflow.set('ControlIdentifierInterpretation',6019);\nflow.set('ControllIdentifier1',6018);\nflow.set('Identifier',6046);\nflow.set('Locked',6020);\nflow.set('PlaceNumber',6048);\n\n// Active Program\nflow.set('Name',6005);\nflow.set('Id',6009);\nflow.set('CurrentState',6007);\n\n// Monitoring \nflow.set('OperationMode',6004);\nflow.set('PowerOnDuration',6095);\nflow.set('IsWarmUp',6099);\nflow.set('FeedOverride',6096);\n\n// Channel \nflow.set('ChannelName',6055);\nflow.set('ChannelMode',6050);\nflow.set('ChannelState',6051);\nflow.set('ChannelFeedOverride',6052);\nflow.set('ChannelRapidOverride',6056);\n\n// Spindle \nflow.set('SpindleName',6041);\nflow.set('IsUsedAsAxis',6042);\nflow.set('IsRotating',6040);\nflow.set('SpindleOverride',6043);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "67bf17c93ca7f9fd",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "Manufacturer",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nmsg.options = \"options\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 240,
        "wires": [
            [
                "753d7298ae1010d3"
            ]
        ]
    },
    {
        "id": "6c9bfab6dc0b66f2",
        "type": "inject",
        "z": "ca5070e74bf8c696",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "a3d6070976ae73fa"
            ]
        ]
    },
    {
        "id": "76ad8b0c740e03e3",
        "type": "inject",
        "z": "ca5070e74bf8c696",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 450,
        "y": 140,
        "wires": [
            [
                "e90797e80da2bc05"
            ]
        ]
    },
    {
        "id": "b7f032f88eba4b9b",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "Location",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 300,
        "wires": [
            [
                "753d7298ae1010d3"
            ]
        ]
    },
    {
        "id": "67f28a2fd4bdfe5f",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ProductInstanceUri",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 360,
        "wires": [
            [
                "753d7298ae1010d3"
            ]
        ]
    },
    {
        "id": "1597542d9c9947c3",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "NcProg_State_Number",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.topic = \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 80,
        "wires": [
            [
                "99b10e589e3c6035"
            ]
        ]
    },
    {
        "id": "49449f5d63b9e741",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "SerialNumber",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 420,
        "wires": [
            [
                "753d7298ae1010d3"
            ]
        ]
    },
    {
        "id": "b43ebff3e1bd6e7f",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "SoftwareRevision",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 480,
        "wires": [
            [
                "753d7298ae1010d3"
            ]
        ]
    },
    {
        "id": "9d0c1df525636c5f",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "YearOfConstruction",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 540,
        "wires": [
            [
                "753d7298ae1010d3"
            ]
        ]
    },
    {
        "id": "ac9cbb9458dcdf85",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "DeviceClass",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 600,
        "wires": [
            [
                "753d7298ae1010d3"
            ]
        ]
    },
    {
        "id": "ea42d65166c30b28",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ProductCode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 660,
        "wires": [
            [
                "753d7298ae1010d3"
            ]
        ]
    },
    {
        "id": "3065ce48485f6112",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "Model",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 720,
        "wires": [
            [
                "753d7298ae1010d3"
            ]
        ]
    },
    {
        "id": "4eba968bf31d1742",
        "type": "comment",
        "z": "ca5070e74bf8c696",
        "name": "IDENTIFICATION",
        "info": "",
        "x": 180,
        "y": 240,
        "wires": []
    },
    {
        "id": "6ee535f0a0bae356",
        "type": "comment",
        "z": "ca5070e74bf8c696",
        "name": "TOOLS",
        "info": "",
        "x": 150,
        "y": 800,
        "wires": []
    },
    {
        "id": "24e66f9282df5c2a",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ControlIdentifierInterpretation",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 800,
        "wires": [
            [
                "3bac680394e6d74a"
            ]
        ]
    },
    {
        "id": "827ecb93a964a284",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "Identifier",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 860,
        "wires": [
            [
                "3bac680394e6d74a"
            ]
        ]
    },
    {
        "id": "d3d69b6be2dfd291",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ControllIdentifier1",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 920,
        "wires": [
            [
                "3bac680394e6d74a"
            ]
        ]
    },
    {
        "id": "3ea5d35c46148e52",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "Locked",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 980,
        "wires": [
            [
                "3bac680394e6d74a"
            ]
        ]
    },
    {
        "id": "3b676d038ad091a0",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "PlaceNumber",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1040,
        "wires": [
            [
                "3bac680394e6d74a"
            ]
        ]
    },
    {
        "id": "b114190aec427666",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "",
        "func": "if(!msg.payload) {\n    msg.payload = true\n}\nelse {\n    msg.payload = false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 960,
        "wires": [
            [
                "19aec752f088e8cd"
            ]
        ]
    },
    {
        "id": "bee6d56438aee9a6",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "Name",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1160,
        "wires": [
            [
                "4e9a4af3b3b3fbc0"
            ]
        ]
    },
    {
        "id": "66e1d186eedf38b6",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "Id",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1220,
        "wires": [
            [
                "4e9a4af3b3b3fbc0"
            ]
        ]
    },
    {
        "id": "e59a750730a460f4",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "CurrentState",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1280,
        "wires": [
            [
                "4e9a4af3b3b3fbc0"
            ]
        ]
    },
    {
        "id": "24c159d529d4c725",
        "type": "comment",
        "z": "ca5070e74bf8c696",
        "name": "ACTIVE PROGRAM",
        "info": "",
        "x": 190,
        "y": 1140,
        "wires": []
    },
    {
        "id": "26bebf1b990f6339",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "OperationMode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1380,
        "wires": [
            [
                "b87dc05d0db0cb7b"
            ]
        ]
    },
    {
        "id": "ec63c655a3c6a45b",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "PowerOnDuration",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1440,
        "wires": [
            [
                "b87dc05d0db0cb7b"
            ]
        ]
    },
    {
        "id": "6289c0004746953d",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "IsWarmUp",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1500,
        "wires": [
            [
                "b87dc05d0db0cb7b"
            ]
        ]
    },
    {
        "id": "cf20858901981c1b",
        "type": "comment",
        "z": "ca5070e74bf8c696",
        "name": "MONITORING",
        "info": "",
        "x": 180,
        "y": 1380,
        "wires": []
    },
    {
        "id": "9122e8051c6d8081",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "FeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1560,
        "wires": [
            [
                "b87dc05d0db0cb7b"
            ]
        ]
    },
    {
        "id": "2e6ea0a17f6230c4",
        "type": "ui_gauge",
        "z": "ca5070e74bf8c696",
        "name": "",
        "group": "f2de600d54b0d4c9",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Feed Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1700,
        "y": 1560,
        "wires": []
    },
    {
        "id": "f0e25216847d8d79",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ChannelName",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1700,
        "wires": [
            [
                "3bb4305024b14f94"
            ]
        ]
    },
    {
        "id": "19559d1c5e982327",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ChannelMode",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1760,
        "wires": [
            [
                "3bb4305024b14f94"
            ]
        ]
    },
    {
        "id": "0bbcd842da07e822",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ChannelState",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1820,
        "wires": [
            [
                "3bb4305024b14f94"
            ]
        ]
    },
    {
        "id": "a1c51c8aa874fa83",
        "type": "comment",
        "z": "ca5070e74bf8c696",
        "name": "CHANNEL ",
        "info": "",
        "x": 160,
        "y": 1700,
        "wires": []
    },
    {
        "id": "d2be50195f5734f4",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ChannelFeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1880,
        "wires": [
            [
                "3bb4305024b14f94"
            ]
        ]
    },
    {
        "id": "9a01367b15419011",
        "type": "ui_gauge",
        "z": "ca5070e74bf8c696",
        "name": "",
        "group": "f41d0189b65bc96b",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Feed Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1700,
        "y": 1880,
        "wires": []
    },
    {
        "id": "240c0e7ca70f9fd0",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ChannelRapidOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1940,
        "wires": [
            [
                "3bb4305024b14f94"
            ]
        ]
    },
    {
        "id": "757f79e34188a8b0",
        "type": "ui_gauge",
        "z": "ca5070e74bf8c696",
        "name": "",
        "group": "f41d0189b65bc96b",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Rapid Override",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1700,
        "y": 1940,
        "wires": []
    },
    {
        "id": "8a48e9aee56c215b",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "SpindleName",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2040,
        "wires": [
            [
                "1010f7b4dd5689ff"
            ]
        ]
    },
    {
        "id": "db9569bee1ea2568",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "IsUsedAsAxis",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2100,
        "wires": [
            [
                "1010f7b4dd5689ff"
            ]
        ]
    },
    {
        "id": "a4042e2dd6743aee",
        "type": "comment",
        "z": "ca5070e74bf8c696",
        "name": "SPINDLE",
        "info": "",
        "x": 160,
        "y": 2040,
        "wires": []
    },
    {
        "id": "a3e56abff4b90605",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "IsRotating",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 2160,
        "wires": [
            [
                "1010f7b4dd5689ff"
            ]
        ]
    },
    {
        "id": "73481dfbd6eff4a1",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "SpindleOverride",
        "func": "var nodeId = flow.get(__node__.name)\nmsg.payload = {\n    nodeId: \"ns=\" + flow.get('NameSpace') + \";i=\" + nodeId \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2220,
        "wires": [
            [
                "1010f7b4dd5689ff"
            ]
        ]
    },
    {
        "id": "ec853d1c7765c26a",
        "type": "ui_gauge",
        "z": "ca5070e74bf8c696",
        "name": "",
        "group": "093fadcf0a12a96f",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "SpindleOverride",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#27bbee",
            "#9e6dbe",
            "#f2369d"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1700,
        "y": 2220,
        "wires": []
    },
    {
        "id": "e75bc61b3df837d8",
        "type": "ui_switch",
        "z": "ca5070e74bf8c696",
        "name": "IsUsedAsAxis",
        "label": "IsUsedAsAxis",
        "tooltip": "",
        "group": "093fadcf0a12a96f",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1700,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "d66e1d19d11a3dce",
        "type": "ui_switch",
        "z": "ca5070e74bf8c696",
        "name": "IsRotating",
        "label": "IsRotating",
        "tooltip": "",
        "group": "093fadcf0a12a96f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1680,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "6764690d7815d6a2",
        "type": "ui_statetrail",
        "z": "ca5070e74bf8c696",
        "group": "fdfab30feea82e24",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "state trail label",
        "states": [
            {
                "state": 1,
                "col": "#009933",
                "t": "num",
                "label": ""
            },
            {
                "state": 2,
                "col": "#17a2b8",
                "t": "num",
                "label": ""
            }
        ],
        "periodLimit": "1",
        "periodLimitUnit": "3600",
        "timeformat": "HH:mm",
        "tickmarks": "4",
        "persist": false,
        "legend": 1,
        "combine": true,
        "blanklabel": "",
        "x": 880,
        "y": 80,
        "wires": [
            [
                "0791c30931d85420"
            ]
        ]
    },
    {
        "id": "b1873f70718ad3a4",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "Manufacturer",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 220,
        "wires": [
            [
                "4749a354da710af4"
            ]
        ]
    },
    {
        "id": "818a72833187941b",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "Location",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 280,
        "wires": [
            [
                "0edeb1de83c473a3"
            ]
        ]
    },
    {
        "id": "2130686f440a53a2",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ProductInstanceUri",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 340,
        "wires": [
            [
                "b91af9ba8610ef70"
            ]
        ]
    },
    {
        "id": "b838502363f67733",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "SerialNumber",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 400,
        "wires": [
            [
                "22b2b54474d086d1"
            ]
        ]
    },
    {
        "id": "d820510383e02a50",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "SoftwareRevision",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 460,
        "wires": [
            [
                "732d2d07f4ce844e"
            ]
        ]
    },
    {
        "id": "d80974aa1474d8d4",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "YearOfConstruction",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 520,
        "wires": [
            [
                "552f92c2eab1df1e"
            ]
        ]
    },
    {
        "id": "101b0af3c4bdf1fa",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "DeviceClass",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 580,
        "wires": [
            [
                "afb7c78cced4eade"
            ]
        ]
    },
    {
        "id": "7413c5fb522a7a28",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ProductCode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 640,
        "wires": [
            [
                "f0e13d02e320b145"
            ]
        ]
    },
    {
        "id": "1b6a31827fb731f5",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "Model",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 700,
        "wires": [
            [
                "3a178806c00a8d0a"
            ]
        ]
    },
    {
        "id": "16d497420df99c12",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ControlIdentifierInterpretation",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 780,
        "wires": [
            [
                "1102b08c3383b6de"
            ]
        ]
    },
    {
        "id": "1114a57cc407eba6",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "Identifier",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 840,
        "wires": [
            [
                "f98ed19156170db7"
            ]
        ]
    },
    {
        "id": "398208315cf12e40",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ControllIdentifier1",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 900,
        "wires": [
            [
                "44bdf66a8bc4190f"
            ]
        ]
    },
    {
        "id": "5c96eb0d935a4f0f",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "Locked",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 960,
        "wires": [
            [
                "b114190aec427666"
            ]
        ]
    },
    {
        "id": "34171bf5be5eb960",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "PlaceNumber",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 1020,
        "wires": [
            [
                "adebd9d44c306f92"
            ]
        ]
    },
    {
        "id": "0f3505e1bb207ff8",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "Name",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 1140,
        "wires": [
            [
                "f09a882994335d04"
            ]
        ]
    },
    {
        "id": "a6c2e873b0e124b1",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "Id",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 1200,
        "wires": [
            [
                "592f739312a04539"
            ]
        ]
    },
    {
        "id": "5c816ceaa45bf03c",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "CurrentState",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1260,
        "wires": [
            [
                "a72472c7ec4784d8"
            ]
        ]
    },
    {
        "id": "3c11fa9b772d2031",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "OperationMode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 1380,
        "wires": [
            [
                "7030acaa50fd89a2"
            ]
        ]
    },
    {
        "id": "27b286c3086f6a81",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "PowerOnDuration",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1440,
        "wires": [
            [
                "9473a417440e46a4"
            ]
        ]
    },
    {
        "id": "884f3cc7b9a7ac4e",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "IsWarmUp",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1500,
        "wires": [
            [
                "aab42d513e7b243a"
            ]
        ]
    },
    {
        "id": "884d2daa6f1aafcb",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "FeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 1560,
        "wires": [
            [
                "2e6ea0a17f6230c4"
            ]
        ]
    },
    {
        "id": "65421198637e364e",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ChannelName",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 1700,
        "wires": [
            [
                "099b32ec27b6893c"
            ]
        ]
    },
    {
        "id": "2b5d7c9f166b058e",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ChannelMode",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 1760,
        "wires": [
            [
                "6d619d507beae3e1"
            ]
        ]
    },
    {
        "id": "a5ba97df8855b8b2",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ChannelState",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 1820,
        "wires": [
            [
                "028260731002b489"
            ]
        ]
    },
    {
        "id": "966a9c7fcf9b17bc",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ChannelFeedOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1880,
        "wires": [
            [
                "9a01367b15419011"
            ]
        ]
    },
    {
        "id": "e035c9417cb37010",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "ChannelRapidOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1940,
        "wires": [
            [
                "757f79e34188a8b0"
            ]
        ]
    },
    {
        "id": "622d259a8081f0a7",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "IsUsedAsAxis",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 2100,
        "wires": [
            [
                "e75bc61b3df837d8"
            ]
        ]
    },
    {
        "id": "89c4d74b8e0d5f78",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "IsRotating",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 2160,
        "wires": [
            [
                "d66e1d19d11a3dce"
            ]
        ]
    },
    {
        "id": "2d21c580a241be25",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "SpindleOverride",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 2220,
        "wires": [
            [
                "ec853d1c7765c26a"
            ]
        ]
    },
    {
        "id": "e2c65db2bd686e1c",
        "type": "inject",
        "z": "ca5070e74bf8c696",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "6af2939f9241b8c9"
            ]
        ]
    },
    {
        "id": "39d67a54a2c56e38",
        "type": "inject",
        "z": "ca5070e74bf8c696",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.7",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 1220,
        "wires": [
            [
                "4f81f26a60c62d4a"
            ]
        ]
    },
    {
        "id": "879754783925b56f",
        "type": "inject",
        "z": "ca5070e74bf8c696",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1460,
        "wires": [
            [
                "0414ecab4becb41c"
            ]
        ]
    },
    {
        "id": "56a21f26a4331612",
        "type": "inject",
        "z": "ca5070e74bf8c696",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.3",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1760,
        "wires": [
            [
                "5f646595b9251265"
            ]
        ]
    },
    {
        "id": "459b9fe566e72e74",
        "type": "inject",
        "z": "ca5070e74bf8c696",
        "name": "Subscribe multiple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.6",
        "topic": "multiple",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 2100,
        "wires": [
            [
                "21c1bceaf058e217"
            ]
        ]
    },
    {
        "id": "99b10e589e3c6035",
        "type": "OpcUa-Client",
        "z": "ca5070e74bf8c696",
        "endpoint": "9ffe9b2dd3eba1b3",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 700,
        "y": 80,
        "wires": [
            [
                "6764690d7815d6a2"
            ]
        ]
    },
    {
        "id": "51d4052241575271",
        "type": "OpcUa-Client",
        "z": "ca5070e74bf8c696",
        "endpoint": "9ffe9b2dd3eba1b3",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "4",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 1120,
        "y": 1480,
        "wires": [
            [
                "b6832d5a098c8f55"
            ]
        ]
    },
    {
        "id": "f18671db7127d83f",
        "type": "join",
        "z": "ca5070e74bf8c696",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "9",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 830,
        "y": 480,
        "wires": [
            [
                "51d4052241575271"
            ]
        ]
    },
    {
        "id": "d12412212dc72e4e",
        "type": "join",
        "z": "ca5070e74bf8c696",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 830,
        "y": 920,
        "wires": [
            [
                "51d4052241575271"
            ]
        ]
    },
    {
        "id": "663901008b0c34d0",
        "type": "join",
        "z": "ca5070e74bf8c696",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 830,
        "y": 1220,
        "wires": [
            [
                "51d4052241575271"
            ]
        ]
    },
    {
        "id": "404dd1b4e8c458c6",
        "type": "join",
        "z": "ca5070e74bf8c696",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 830,
        "y": 1460,
        "wires": [
            [
                "51d4052241575271"
            ]
        ]
    },
    {
        "id": "f1c97aa2f42aee8d",
        "type": "join",
        "z": "ca5070e74bf8c696",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 830,
        "y": 1760,
        "wires": [
            [
                "51d4052241575271"
            ]
        ]
    },
    {
        "id": "cd691280f963153f",
        "type": "join",
        "z": "ca5070e74bf8c696",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 830,
        "y": 2100,
        "wires": [
            [
                "51d4052241575271"
            ]
        ]
    },
    {
        "id": "5c5e41e44b019659",
        "type": "ui_text",
        "z": "ca5070e74bf8c696",
        "group": "093fadcf0a12a96f",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "SpindleName",
        "label": "Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1700,
        "y": 2020,
        "wires": []
    },
    {
        "id": "e554c374f8526b5e",
        "type": "function",
        "z": "ca5070e74bf8c696",
        "name": "SpindleName",
        "func": "var nodeId = flow.get(__node__.name)\n\nif (msg.topic.includes(nodeId)) {\n    \n    if (msg.payload && msg.payload.value) {\n        \n        var value = msg.payload.value.value;\n        msg.payload = value;\n    \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 2020,
        "wires": [
            [
                "5c5e41e44b019659"
            ]
        ]
    }
]